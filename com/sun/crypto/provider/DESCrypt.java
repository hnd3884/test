package com.sun.crypto.provider;

import java.security.InvalidKeyException;

class DESCrypt extends SymmetricCipher implements DESConstants
{
    private static final int[] s0p;
    private static final int[] s1p;
    private static final int[] s2p;
    private static final int[] s3p;
    private static final int[] s4p;
    private static final int[] s5p;
    private static final int[] s6p;
    private static final int[] s7p;
    private static final int[] permRight0;
    private static final int[] permLeft1;
    private static final int[] permRight2;
    private static final int[] permLeft3;
    private static final int[] permRight4;
    private static final int[] permLeft5;
    private static final int[] permRight6;
    private static final int[] permLeft7;
    private static final int[] permRight8;
    private static final int[] permLeft9;
    private static final int[] permRightA;
    private static final int[] permLeftB;
    private static final int[] permRightC;
    private static final int[] permLeftD;
    private static final int[] permRightE;
    private static final int[] permLeftF;
    private static final int[] initPermLeft0;
    private static final int[] initPermRight0;
    private static final int[] initPermLeft1;
    private static final int[] initPermRight1;
    private static final int[] initPermLeft2;
    private static final int[] initPermRight2;
    private static final int[] initPermLeft3;
    private static final int[] initPermRight3;
    private static final int[] initPermLeft4;
    private static final int[] initPermRight4;
    private static final int[] initPermLeft5;
    private static final int[] initPermRight5;
    private static final int[] initPermLeft6;
    private static final int[] initPermRight6;
    private static final int[] initPermLeft7;
    private static final int[] initPermRight7;
    private static final int[] initPermLeft8;
    private static final int[] initPermRight8;
    private static final int[] initPermLeft9;
    private static final int[] initPermRight9;
    private static final int[] initPermLeftA;
    private static final int[] initPermRightA;
    private static final int[] initPermLeftB;
    private static final int[] initPermRightB;
    private static final int[] initPermLeftC;
    private static final int[] initPermRightC;
    private static final int[] initPermLeftD;
    private static final int[] initPermRightD;
    private static final int[] initPermLeftE;
    private static final int[] initPermRightE;
    private static final int[] initPermLeftF;
    private static final int[] initPermRightF;
    byte[] expandedKey;
    boolean decrypting;
    
    DESCrypt() {
        this.expandedKey = null;
        this.decrypting = false;
    }
    
    @Override
    int getBlockSize() {
        return 8;
    }
    
    @Override
    void init(final boolean decrypting, final String s, final byte[] array) throws InvalidKeyException {
        this.decrypting = decrypting;
        if (!s.equalsIgnoreCase("DES")) {
            throw new InvalidKeyException("Wrong algorithm: DES required");
        }
        if (array.length != 8) {
            throw new InvalidKeyException("Wrong key size");
        }
        this.expandKey(array);
    }
    
    @Override
    void encryptBlock(final byte[] array, final int n, final byte[] array2, final int n2) {
        this.cipherBlock(array, n, array2, n2);
    }
    
    @Override
    void decryptBlock(final byte[] array, final int n, final byte[] array2, final int n2) {
        this.cipherBlock(array, n, array2, n2);
    }
    
    void cipherBlock(final byte[] array, final int n, final byte[] array2, final int n2) {
        int initialPermutationLeft = initialPermutationLeft(array, n);
        int initialPermutationRight = initialPermutationRight(array, n);
        final byte[] expandedKey = this.expandedKey;
        int n3;
        int n4;
        if (this.decrypting) {
            n3 = 8;
            n4 = 120;
        }
        else {
            n3 = -8;
            n4 = 0;
        }
        for (int i = 0; i < 16; ++i) {
            final int n5 = initialPermutationRight << 1 | (initialPermutationRight >> 31 & 0x1);
            final int n6 = initialPermutationLeft ^ (DESCrypt.s0p[(n5 & 0x3F) ^ expandedKey[n4 + 0]] ^ DESCrypt.s1p[(n5 >> 4 & 0x3F) ^ expandedKey[n4 + 1]] ^ DESCrypt.s2p[(n5 >> 8 & 0x3F) ^ expandedKey[n4 + 2]] ^ DESCrypt.s3p[(n5 >> 12 & 0x3F) ^ expandedKey[n4 + 3]] ^ DESCrypt.s4p[(n5 >> 16 & 0x3F) ^ expandedKey[n4 + 4]] ^ DESCrypt.s5p[(n5 >> 20 & 0x3F) ^ expandedKey[n4 + 5]] ^ DESCrypt.s6p[(n5 >> 24 & 0x3F) ^ expandedKey[n4 + 6]]) ^ DESCrypt.s7p[((initialPermutationRight & 0x1) << 5 | (initialPermutationRight >> 27 & 0x1F)) ^ expandedKey[n4 + 7]];
            initialPermutationLeft = initialPermutationRight;
            initialPermutationRight = n6;
            n4 -= n3;
        }
        perm(initialPermutationRight, initialPermutationLeft, array2, n2);
    }
    
    private static void perm(final int n, final int n2, final byte[] array, final int n3) {
        final int n4 = DESCrypt.permRight0[n & 0xF];
        final int n5 = n >> 4;
        final int n6 = DESCrypt.permLeft1[n5 & 0xF];
        final int n7 = n5 >> 4;
        final int n8 = n4 | DESCrypt.permRight2[n7 & 0xF];
        final int n9 = n7 >> 4;
        final int n10 = n6 | DESCrypt.permLeft3[n9 & 0xF];
        final int n11 = n9 >> 4;
        final int n12 = n8 | DESCrypt.permRight4[n11 & 0xF];
        final int n13 = n11 >> 4;
        final int n14 = n10 | DESCrypt.permLeft5[n13 & 0xF];
        final int n15 = n13 >> 4;
        final int n16 = n12 | DESCrypt.permRight6[n15 & 0xF];
        final int n17 = n14 | DESCrypt.permLeft7[n15 >> 4 & 0xF];
        final int n18 = n16 | DESCrypt.permRight8[n2 & 0xF];
        final int n19 = n2 >> 4;
        final int n20 = n17 | DESCrypt.permLeft9[n19 & 0xF];
        final int n21 = n19 >> 4;
        final int n22 = n18 | DESCrypt.permRightA[n21 & 0xF];
        final int n23 = n21 >> 4;
        final int n24 = n20 | DESCrypt.permLeftB[n23 & 0xF];
        final int n25 = n23 >> 4;
        final int n26 = n22 | DESCrypt.permRightC[n25 & 0xF];
        final int n27 = n25 >> 4;
        final int n28 = n24 | DESCrypt.permLeftD[n27 & 0xF];
        final int n29 = n27 >> 4;
        final int n30 = n26 | DESCrypt.permRightE[n29 & 0xF];
        final int n31 = n28 | DESCrypt.permLeftF[n29 >> 4 & 0xF];
        array[n3 + 0] = (byte)n31;
        array[n3 + 1] = (byte)(n31 >> 8);
        array[n3 + 2] = (byte)(n31 >> 16);
        array[n3 + 3] = (byte)(n31 >> 24);
        array[n3 + 4] = (byte)n30;
        array[n3 + 5] = (byte)(n30 >> 8);
        array[n3 + 6] = (byte)(n30 >> 16);
        array[n3 + 7] = (byte)(n30 >> 24);
    }
    
    private static int initialPermutationLeft(final byte[] array, final int n) {
        return DESCrypt.initPermLeft1[array[n] & 0xF] | DESCrypt.initPermLeft0[array[n] >> 4 & 0xF] | DESCrypt.initPermLeft3[array[n + 1] & 0xF] | DESCrypt.initPermLeft2[array[n + 1] >> 4 & 0xF] | DESCrypt.initPermLeft5[array[n + 2] & 0xF] | DESCrypt.initPermLeft4[array[n + 2] >> 4 & 0xF] | DESCrypt.initPermLeft7[array[n + 3] & 0xF] | DESCrypt.initPermLeft6[array[n + 3] >> 4 & 0xF] | DESCrypt.initPermLeft9[array[n + 4] & 0xF] | DESCrypt.initPermLeft8[array[n + 4] >> 4 & 0xF] | DESCrypt.initPermLeftB[array[n + 5] & 0xF] | DESCrypt.initPermLeftA[array[n + 5] >> 4 & 0xF] | DESCrypt.initPermLeftD[array[n + 6] & 0xF] | DESCrypt.initPermLeftC[array[n + 6] >> 4 & 0xF] | DESCrypt.initPermLeftF[array[n + 7] & 0xF] | DESCrypt.initPermLeftE[array[n + 7] >> 4 & 0xF];
    }
    
    private static int initialPermutationRight(final byte[] array, final int n) {
        return DESCrypt.initPermRight1[array[n] & 0xF] | DESCrypt.initPermRight0[array[n] >> 4 & 0xF] | DESCrypt.initPermRight3[array[n + 1] & 0xF] | DESCrypt.initPermRight2[array[n + 1] >> 4 & 0xF] | DESCrypt.initPermRight5[array[n + 2] & 0xF] | DESCrypt.initPermRight4[array[n + 2] >> 4 & 0xF] | DESCrypt.initPermRight7[array[n + 3] & 0xF] | DESCrypt.initPermRight6[array[n + 3] >> 4 & 0xF] | DESCrypt.initPermRight9[array[n + 4] & 0xF] | DESCrypt.initPermRight8[array[n + 4] >> 4 & 0xF] | DESCrypt.initPermRightB[array[n + 5] & 0xF] | DESCrypt.initPermRightA[array[n + 5] >> 4 & 0xF] | DESCrypt.initPermRightD[array[n + 6] & 0xF] | DESCrypt.initPermRightC[array[n + 6] >> 4 & 0xF] | DESCrypt.initPermRightF[array[n + 7] & 0xF] | DESCrypt.initPermRightE[array[n + 7] >> 4 & 0xF];
    }
    
    void expandKey(final byte[] array) {
        final byte[] expandedKey = new byte[128];
        final byte b = array[0];
        if ((b & 0x80) != 0x0) {
            final byte[] array2 = expandedKey;
            final int n = 3;
            array2[n] |= 0x2;
            final byte[] array3 = expandedKey;
            final int n2 = 9;
            array3[n2] |= 0x8;
            final byte[] array4 = expandedKey;
            final int n3 = 18;
            array4[n3] |= 0x8;
            final byte[] array5 = expandedKey;
            final int n4 = 27;
            array5[n4] |= 0x20;
            final byte[] array6 = expandedKey;
            final int n5 = 33;
            array6[n5] |= 0x2;
            final byte[] array7 = expandedKey;
            final int n6 = 42;
            array7[n6] |= 0x10;
            final byte[] array8 = expandedKey;
            final int n7 = 48;
            array8[n7] |= 0x8;
            final byte[] array9 = expandedKey;
            final int n8 = 65;
            array9[n8] |= 0x10;
            final byte[] array10 = expandedKey;
            final int n9 = 74;
            array10[n9] |= 0x2;
            final byte[] array11 = expandedKey;
            final int n10 = 80;
            array11[n10] |= 0x2;
            final byte[] array12 = expandedKey;
            final int n11 = 89;
            array12[n11] |= 0x4;
            final byte[] array13 = expandedKey;
            final int n12 = 99;
            array13[n12] |= 0x10;
            final byte[] array14 = expandedKey;
            final int n13 = 104;
            array14[n13] |= 0x4;
            final byte[] array15 = expandedKey;
            final int n14 = 122;
            array15[n14] |= 0x20;
        }
        if ((b & 0x40) != 0x0) {
            final byte[] array16 = expandedKey;
            final int n15 = 1;
            array16[n15] |= 0x4;
            final byte[] array17 = expandedKey;
            final int n16 = 8;
            array17[n16] |= 0x1;
            final byte[] array18 = expandedKey;
            final int n17 = 18;
            array18[n17] |= 0x4;
            final byte[] array19 = expandedKey;
            final int n18 = 25;
            array19[n18] |= 0x20;
            final byte[] array20 = expandedKey;
            final int n19 = 34;
            array20[n19] |= 0x20;
            final byte[] array21 = expandedKey;
            final int n20 = 41;
            array21[n20] |= 0x8;
            final byte[] array22 = expandedKey;
            final int n21 = 50;
            array22[n21] |= 0x8;
            final byte[] array23 = expandedKey;
            final int n22 = 59;
            array23[n22] |= 0x20;
            final byte[] array24 = expandedKey;
            final int n23 = 64;
            array24[n23] |= 0x10;
            final byte[] array25 = expandedKey;
            final int n24 = 75;
            array25[n24] |= 0x4;
            final byte[] array26 = expandedKey;
            final int n25 = 90;
            array26[n25] |= 0x1;
            final byte[] array27 = expandedKey;
            final int n26 = 97;
            array27[n26] |= 0x10;
            final byte[] array28 = expandedKey;
            final int n27 = 106;
            array28[n27] |= 0x2;
            final byte[] array29 = expandedKey;
            final int n28 = 112;
            array29[n28] |= 0x2;
            final byte[] array30 = expandedKey;
            final int n29 = 123;
            array30[n29] |= 0x1;
        }
        if ((b & 0x20) != 0x0) {
            final byte[] array31 = expandedKey;
            final int n30 = 2;
            array31[n30] |= 0x1;
            final byte[] array32 = expandedKey;
            final int n31 = 19;
            array32[n31] |= 0x8;
            final byte[] array33 = expandedKey;
            final int n32 = 35;
            array33[n32] |= 0x1;
            final byte[] array34 = expandedKey;
            final int n33 = 40;
            array34[n33] |= 0x1;
            final byte[] array35 = expandedKey;
            final int n34 = 50;
            array35[n34] |= 0x4;
            final byte[] array36 = expandedKey;
            final int n35 = 57;
            array36[n35] |= 0x20;
            final byte[] array37 = expandedKey;
            final int n36 = 75;
            array37[n36] |= 0x2;
            final byte[] array38 = expandedKey;
            final int n37 = 80;
            array38[n37] |= 0x20;
            final byte[] array39 = expandedKey;
            final int n38 = 89;
            array39[n38] |= 0x1;
            final byte[] array40 = expandedKey;
            final int n39 = 96;
            array40[n39] |= 0x10;
            final byte[] array41 = expandedKey;
            final int n40 = 107;
            array41[n40] |= 0x4;
            final byte[] array42 = expandedKey;
            final int n41 = 120;
            array42[n41] |= 0x8;
        }
        if ((b & 0x10) != 0x0) {
            final byte[] array43 = expandedKey;
            final int n42 = 4;
            array43[n42] |= 0x20;
            final byte[] array44 = expandedKey;
            final int n43 = 20;
            array44[n43] |= 0x2;
            final byte[] array45 = expandedKey;
            final int n44 = 31;
            array45[n44] |= 0x4;
            final byte[] array46 = expandedKey;
            final int n45 = 37;
            array46[n45] |= 0x20;
            final byte[] array47 = expandedKey;
            final int n46 = 47;
            array47[n46] |= 0x1;
            final byte[] array48 = expandedKey;
            final int n47 = 54;
            array48[n47] |= 0x1;
            final byte[] array49 = expandedKey;
            final int n48 = 63;
            array49[n48] |= 0x2;
            final byte[] array50 = expandedKey;
            final int n49 = 68;
            array50[n49] |= 0x1;
            final byte[] array51 = expandedKey;
            final int n50 = 78;
            array51[n50] |= 0x4;
            final byte[] array52 = expandedKey;
            final int n51 = 84;
            array52[n51] |= 0x8;
            final byte[] array53 = expandedKey;
            final int n52 = 101;
            array53[n52] |= 0x10;
            final byte[] array54 = expandedKey;
            final int n53 = 108;
            array54[n53] |= 0x4;
            final byte[] array55 = expandedKey;
            final int n54 = 119;
            array55[n54] |= 0x10;
            final byte[] array56 = expandedKey;
            final int n55 = 126;
            array56[n55] |= 0x8;
        }
        if ((b & 0x8) != 0x0) {
            final byte[] array57 = expandedKey;
            final int n56 = 5;
            array57[n56] |= 0x4;
            final byte[] array58 = expandedKey;
            final int n57 = 15;
            array58[n57] |= 0x4;
            final byte[] array59 = expandedKey;
            final int n58 = 21;
            array59[n58] |= 0x20;
            final byte[] array60 = expandedKey;
            final int n59 = 31;
            array60[n59] |= 0x1;
            final byte[] array61 = expandedKey;
            final int n60 = 38;
            array61[n60] |= 0x1;
            final byte[] array62 = expandedKey;
            final int n61 = 47;
            array62[n61] |= 0x2;
            final byte[] array63 = expandedKey;
            final int n62 = 53;
            array63[n62] |= 0x2;
            final byte[] array64 = expandedKey;
            final int n63 = 68;
            array64[n63] |= 0x8;
            final byte[] array65 = expandedKey;
            final int n64 = 85;
            array65[n64] |= 0x10;
            final byte[] array66 = expandedKey;
            final int n65 = 92;
            array66[n65] |= 0x4;
            final byte[] array67 = expandedKey;
            final int n66 = 103;
            array67[n66] |= 0x10;
            final byte[] array68 = expandedKey;
            final int n67 = 108;
            array68[n67] |= 0x20;
            final byte[] array69 = expandedKey;
            final int n68 = 118;
            array69[n68] |= 0x20;
            final byte[] array70 = expandedKey;
            final int n69 = 124;
            array70[n69] |= 0x2;
        }
        if ((b & 0x4) != 0x0) {
            final byte[] array71 = expandedKey;
            final int n70 = 15;
            array71[n70] |= 0x2;
            final byte[] array72 = expandedKey;
            final int n71 = 21;
            array72[n71] |= 0x2;
            final byte[] array73 = expandedKey;
            final int n72 = 39;
            array73[n72] |= 0x8;
            final byte[] array74 = expandedKey;
            final int n73 = 46;
            array74[n73] |= 0x10;
            final byte[] array75 = expandedKey;
            final int n74 = 55;
            array75[n74] |= 0x20;
            final byte[] array76 = expandedKey;
            final int n75 = 61;
            array76[n75] |= 0x1;
            final byte[] array77 = expandedKey;
            final int n76 = 71;
            array77[n76] |= 0x10;
            final byte[] array78 = expandedKey;
            final int n77 = 76;
            array78[n77] |= 0x20;
            final byte[] array79 = expandedKey;
            final int n78 = 86;
            array79[n78] |= 0x20;
            final byte[] array80 = expandedKey;
            final int n79 = 93;
            array80[n79] |= 0x4;
            final byte[] array81 = expandedKey;
            final int n80 = 102;
            array81[n80] |= 0x2;
            final byte[] array82 = expandedKey;
            final int n81 = 108;
            array82[n81] |= 0x10;
            final byte[] array83 = expandedKey;
            final int n82 = 117;
            array83[n82] |= 0x8;
            final byte[] array84 = expandedKey;
            final int n83 = 126;
            array84[n83] |= 0x1;
        }
        if ((b & 0x2) != 0x0) {
            final byte[] array85 = expandedKey;
            final int n84 = 14;
            array85[n84] |= 0x10;
            final byte[] array86 = expandedKey;
            final int n85 = 23;
            array86[n85] |= 0x20;
            final byte[] array87 = expandedKey;
            final int n86 = 29;
            array87[n86] |= 0x1;
            final byte[] array88 = expandedKey;
            final int n87 = 38;
            array88[n87] |= 0x8;
            final byte[] array89 = expandedKey;
            final int n88 = 52;
            array89[n88] |= 0x2;
            final byte[] array90 = expandedKey;
            final int n89 = 63;
            array90[n89] |= 0x4;
            final byte[] array91 = expandedKey;
            final int n90 = 70;
            array91[n90] |= 0x2;
            final byte[] array92 = expandedKey;
            final int n91 = 76;
            array92[n91] |= 0x10;
            final byte[] array93 = expandedKey;
            final int n92 = 85;
            array93[n92] |= 0x8;
            final byte[] array94 = expandedKey;
            final int n93 = 100;
            array94[n93] |= 0x1;
            final byte[] array95 = expandedKey;
            final int n94 = 110;
            array95[n94] |= 0x4;
            final byte[] array96 = expandedKey;
            final int n95 = 116;
            array96[n95] |= 0x8;
            final byte[] array97 = expandedKey;
            final int n96 = 127;
            array97[n96] |= 0x8;
        }
        final byte b2 = array[1];
        if ((b2 & 0x80) != 0x0) {
            final byte[] array98 = expandedKey;
            final int n97 = 1;
            array98[n97] |= 0x8;
            final byte[] array99 = expandedKey;
            final int n98 = 8;
            array99[n98] |= 0x20;
            final byte[] array100 = expandedKey;
            final int n99 = 17;
            array100[n99] |= 0x1;
            final byte[] array101 = expandedKey;
            final int n100 = 24;
            array101[n100] |= 0x10;
            final byte[] array102 = expandedKey;
            final int n101 = 35;
            array102[n101] |= 0x4;
            final byte[] array103 = expandedKey;
            final int n102 = 50;
            array103[n102] |= 0x1;
            final byte[] array104 = expandedKey;
            final int n103 = 57;
            array104[n103] |= 0x10;
            final byte[] array105 = expandedKey;
            final int n104 = 67;
            array105[n104] |= 0x8;
            final byte[] array106 = expandedKey;
            final int n105 = 83;
            array106[n105] |= 0x1;
            final byte[] array107 = expandedKey;
            final int n106 = 88;
            array107[n106] |= 0x1;
            final byte[] array108 = expandedKey;
            final int n107 = 98;
            array108[n107] |= 0x4;
            final byte[] array109 = expandedKey;
            final int n108 = 105;
            array109[n108] |= 0x20;
            final byte[] array110 = expandedKey;
            final int n109 = 114;
            array110[n109] |= 0x20;
            final byte[] array111 = expandedKey;
            final int n110 = 123;
            array111[n110] |= 0x2;
        }
        if ((b2 & 0x40) != 0x0) {
            final byte[] array112 = expandedKey;
            final int n111 = 0;
            array112[n111] |= 0x1;
            final byte[] array113 = expandedKey;
            final int n112 = 11;
            array113[n112] |= 0x10;
            final byte[] array114 = expandedKey;
            final int n113 = 16;
            array114[n113] |= 0x4;
            final byte[] array115 = expandedKey;
            final int n114 = 35;
            array115[n114] |= 0x2;
            final byte[] array116 = expandedKey;
            final int n115 = 40;
            array116[n115] |= 0x20;
            final byte[] array117 = expandedKey;
            final int n116 = 49;
            array117[n116] |= 0x1;
            final byte[] array118 = expandedKey;
            final int n117 = 56;
            array118[n117] |= 0x10;
            final byte[] array119 = expandedKey;
            final int n118 = 65;
            array119[n118] |= 0x2;
            final byte[] array120 = expandedKey;
            final int n119 = 74;
            array120[n119] |= 0x10;
            final byte[] array121 = expandedKey;
            final int n120 = 80;
            array121[n120] |= 0x8;
            final byte[] array122 = expandedKey;
            final int n121 = 99;
            array122[n121] |= 0x8;
            final byte[] array123 = expandedKey;
            final int n122 = 115;
            array123[n122] |= 0x1;
            final byte[] array124 = expandedKey;
            final int n123 = 121;
            array124[n123] |= 0x4;
        }
        if ((b2 & 0x20) != 0x0) {
            final byte[] array125 = expandedKey;
            final int n124 = 9;
            array125[n124] |= 0x10;
            final byte[] array126 = expandedKey;
            final int n125 = 18;
            array126[n125] |= 0x2;
            final byte[] array127 = expandedKey;
            final int n126 = 24;
            array127[n126] |= 0x2;
            final byte[] array128 = expandedKey;
            final int n127 = 33;
            array128[n127] |= 0x4;
            final byte[] array129 = expandedKey;
            final int n128 = 43;
            array129[n128] |= 0x10;
            final byte[] array130 = expandedKey;
            final int n129 = 48;
            array130[n129] |= 0x4;
            final byte[] array131 = expandedKey;
            final int n130 = 66;
            array131[n130] |= 0x20;
            final byte[] array132 = expandedKey;
            final int n131 = 73;
            array132[n131] |= 0x8;
            final byte[] array133 = expandedKey;
            final int n132 = 82;
            array133[n132] |= 0x8;
            final byte[] array134 = expandedKey;
            final int n133 = 91;
            array134[n133] |= 0x20;
            final byte[] array135 = expandedKey;
            final int n134 = 97;
            array135[n134] |= 0x2;
            final byte[] array136 = expandedKey;
            final int n135 = 106;
            array136[n135] |= 0x10;
            final byte[] array137 = expandedKey;
            final int n136 = 112;
            array137[n136] |= 0x8;
            final byte[] array138 = expandedKey;
            final int n137 = 122;
            array138[n137] |= 0x1;
        }
        if ((b2 & 0x10) != 0x0) {
            final byte[] array139 = expandedKey;
            final int n138 = 14;
            array139[n138] |= 0x20;
            final byte[] array140 = expandedKey;
            final int n139 = 21;
            array140[n139] |= 0x4;
            final byte[] array141 = expandedKey;
            final int n140 = 30;
            array141[n140] |= 0x2;
            final byte[] array142 = expandedKey;
            final int n141 = 36;
            array142[n141] |= 0x10;
            final byte[] array143 = expandedKey;
            final int n142 = 45;
            array143[n142] |= 0x8;
            final byte[] array144 = expandedKey;
            final int n143 = 60;
            array144[n143] |= 0x1;
            final byte[] array145 = expandedKey;
            final int n144 = 69;
            array145[n144] |= 0x2;
            final byte[] array146 = expandedKey;
            final int n145 = 87;
            array146[n145] |= 0x8;
            final byte[] array147 = expandedKey;
            final int n146 = 94;
            array147[n146] |= 0x10;
            final byte[] array148 = expandedKey;
            final int n147 = 103;
            array148[n147] |= 0x20;
            final byte[] array149 = expandedKey;
            final int n148 = 109;
            array149[n148] |= 0x1;
            final byte[] array150 = expandedKey;
            final int n149 = 118;
            array150[n149] |= 0x8;
            final byte[] array151 = expandedKey;
            final int n150 = 124;
            array151[n150] |= 0x20;
        }
        if ((b2 & 0x8) != 0x0) {
            final byte[] array152 = expandedKey;
            final int n151 = 7;
            array152[n151] |= 0x4;
            final byte[] array153 = expandedKey;
            final int n152 = 14;
            array153[n152] |= 0x2;
            final byte[] array154 = expandedKey;
            final int n153 = 20;
            array154[n153] |= 0x10;
            final byte[] array155 = expandedKey;
            final int n154 = 29;
            array155[n154] |= 0x8;
            final byte[] array156 = expandedKey;
            final int n155 = 44;
            array156[n155] |= 0x1;
            final byte[] array157 = expandedKey;
            final int n156 = 54;
            array157[n156] |= 0x4;
            final byte[] array158 = expandedKey;
            final int n157 = 60;
            array158[n157] |= 0x8;
            final byte[] array159 = expandedKey;
            final int n158 = 71;
            array159[n158] |= 0x8;
            final byte[] array160 = expandedKey;
            final int n159 = 78;
            array160[n159] |= 0x10;
            final byte[] array161 = expandedKey;
            final int n160 = 87;
            array161[n160] |= 0x20;
            final byte[] array162 = expandedKey;
            final int n161 = 93;
            array162[n161] |= 0x1;
            final byte[] array163 = expandedKey;
            final int n162 = 102;
            array163[n162] |= 0x8;
            final byte[] array164 = expandedKey;
            final int n163 = 116;
            array164[n163] |= 0x2;
            final byte[] array165 = expandedKey;
            final int n164 = 125;
            array165[n164] |= 0x4;
        }
        if ((b2 & 0x4) != 0x0) {
            final byte[] array166 = expandedKey;
            final int n165 = 7;
            array166[n165] |= 0x2;
            final byte[] array167 = expandedKey;
            final int n166 = 12;
            array167[n166] |= 0x1;
            final byte[] array168 = expandedKey;
            final int n167 = 22;
            array168[n167] |= 0x4;
            final byte[] array169 = expandedKey;
            final int n168 = 28;
            array169[n168] |= 0x8;
            final byte[] array170 = expandedKey;
            final int n169 = 45;
            array170[n169] |= 0x10;
            final byte[] array171 = expandedKey;
            final int n170 = 52;
            array171[n170] |= 0x4;
            final byte[] array172 = expandedKey;
            final int n171 = 63;
            array172[n171] |= 0x10;
            final byte[] array173 = expandedKey;
            final int n172 = 70;
            array173[n172] |= 0x8;
            final byte[] array174 = expandedKey;
            final int n173 = 84;
            array174[n173] |= 0x2;
            final byte[] array175 = expandedKey;
            final int n174 = 95;
            array175[n174] |= 0x4;
            final byte[] array176 = expandedKey;
            final int n175 = 101;
            array176[n175] |= 0x20;
            final byte[] array177 = expandedKey;
            final int n176 = 111;
            array177[n176] |= 0x1;
            final byte[] array178 = expandedKey;
            final int n177 = 118;
            array178[n177] |= 0x1;
        }
        if ((b2 & 0x2) != 0x0) {
            final byte[] array179 = expandedKey;
            final int n178 = 6;
            array179[n178] |= 0x10;
            final byte[] array180 = expandedKey;
            final int n179 = 13;
            array180[n179] |= 0x10;
            final byte[] array181 = expandedKey;
            final int n180 = 20;
            array181[n180] |= 0x4;
            final byte[] array182 = expandedKey;
            final int n181 = 31;
            array182[n181] |= 0x10;
            final byte[] array183 = expandedKey;
            final int n182 = 36;
            array183[n182] |= 0x20;
            final byte[] array184 = expandedKey;
            final int n183 = 46;
            array184[n183] |= 0x20;
            final byte[] array185 = expandedKey;
            final int n184 = 53;
            array185[n184] |= 0x4;
            final byte[] array186 = expandedKey;
            final int n185 = 62;
            array186[n185] |= 0x2;
            final byte[] array187 = expandedKey;
            final int n186 = 69;
            array187[n186] |= 0x20;
            final byte[] array188 = expandedKey;
            final int n187 = 79;
            array188[n187] |= 0x1;
            final byte[] array189 = expandedKey;
            final int n188 = 86;
            array189[n188] |= 0x1;
            final byte[] array190 = expandedKey;
            final int n189 = 95;
            array190[n189] |= 0x2;
            final byte[] array191 = expandedKey;
            final int n190 = 101;
            array191[n190] |= 0x2;
            final byte[] array192 = expandedKey;
            final int n191 = 119;
            array192[n191] |= 0x8;
        }
        final byte b3 = array[2];
        if ((b3 & 0x80) != 0x0) {
            final byte[] array193 = expandedKey;
            final int n192 = 0;
            array193[n192] |= 0x20;
            final byte[] array194 = expandedKey;
            final int n193 = 10;
            array194[n193] |= 0x8;
            final byte[] array195 = expandedKey;
            final int n194 = 19;
            array195[n194] |= 0x20;
            final byte[] array196 = expandedKey;
            final int n195 = 25;
            array196[n195] |= 0x2;
            final byte[] array197 = expandedKey;
            final int n196 = 34;
            array197[n196] |= 0x10;
            final byte[] array198 = expandedKey;
            final int n197 = 40;
            array198[n197] |= 0x8;
            final byte[] array199 = expandedKey;
            final int n198 = 59;
            array199[n198] |= 0x8;
            final byte[] array200 = expandedKey;
            final int n199 = 66;
            array200[n199] |= 0x2;
            final byte[] array201 = expandedKey;
            final int n200 = 72;
            array201[n200] |= 0x2;
            final byte[] array202 = expandedKey;
            final int n201 = 81;
            array202[n201] |= 0x4;
            final byte[] array203 = expandedKey;
            final int n202 = 91;
            array203[n202] |= 0x10;
            final byte[] array204 = expandedKey;
            final int n203 = 96;
            array204[n203] |= 0x4;
            final byte[] array205 = expandedKey;
            final int n204 = 115;
            array205[n204] |= 0x2;
            final byte[] array206 = expandedKey;
            final int n205 = 121;
            array206[n205] |= 0x8;
        }
        if ((b3 & 0x40) != 0x0) {
            final byte[] array207 = expandedKey;
            final int n206 = 3;
            array207[n206] |= 0x10;
            final byte[] array208 = expandedKey;
            final int n207 = 10;
            array208[n207] |= 0x4;
            final byte[] array209 = expandedKey;
            final int n208 = 17;
            array209[n208] |= 0x20;
            final byte[] array210 = expandedKey;
            final int n209 = 26;
            array210[n209] |= 0x20;
            final byte[] array211 = expandedKey;
            final int n210 = 33;
            array211[n210] |= 0x8;
            final byte[] array212 = expandedKey;
            final int n211 = 42;
            array212[n211] |= 0x8;
            final byte[] array213 = expandedKey;
            final int n212 = 51;
            array213[n212] |= 0x20;
            final byte[] array214 = expandedKey;
            final int n213 = 57;
            array214[n213] |= 0x2;
            final byte[] array215 = expandedKey;
            final int n214 = 67;
            array215[n214] |= 0x4;
            final byte[] array216 = expandedKey;
            final int n215 = 82;
            array216[n215] |= 0x1;
            final byte[] array217 = expandedKey;
            final int n216 = 89;
            array217[n216] |= 0x10;
            final byte[] array218 = expandedKey;
            final int n217 = 98;
            array218[n217] |= 0x2;
            final byte[] array219 = expandedKey;
            final int n218 = 104;
            array219[n218] |= 0x2;
            final byte[] array220 = expandedKey;
            final int n219 = 113;
            array220[n219] |= 0x4;
            final byte[] array221 = expandedKey;
            final int n220 = 120;
            array221[n220] |= 0x1;
        }
        if ((b3 & 0x20) != 0x0) {
            final byte[] array222 = expandedKey;
            final int n221 = 1;
            array222[n221] |= 0x10;
            final byte[] array223 = expandedKey;
            final int n222 = 11;
            array223[n222] |= 0x8;
            final byte[] array224 = expandedKey;
            final int n223 = 27;
            array224[n223] |= 0x1;
            final byte[] array225 = expandedKey;
            final int n224 = 32;
            array225[n224] |= 0x1;
            final byte[] array226 = expandedKey;
            final int n225 = 42;
            array226[n225] |= 0x4;
            final byte[] array227 = expandedKey;
            final int n226 = 49;
            array227[n226] |= 0x20;
            final byte[] array228 = expandedKey;
            final int n227 = 58;
            array228[n227] |= 0x20;
            final byte[] array229 = expandedKey;
            final int n228 = 67;
            array229[n228] |= 0x2;
            final byte[] array230 = expandedKey;
            final int n229 = 72;
            array230[n229] |= 0x20;
            final byte[] array231 = expandedKey;
            final int n230 = 81;
            array231[n230] |= 0x1;
            final byte[] array232 = expandedKey;
            final int n231 = 88;
            array232[n231] |= 0x10;
            final byte[] array233 = expandedKey;
            final int n232 = 99;
            array233[n232] |= 0x4;
            final byte[] array234 = expandedKey;
            final int n233 = 114;
            array234[n233] |= 0x1;
        }
        if ((b3 & 0x10) != 0x0) {
            final byte[] array235 = expandedKey;
            final int n234 = 6;
            array235[n234] |= 0x20;
            final byte[] array236 = expandedKey;
            final int n235 = 12;
            array236[n235] |= 0x2;
            final byte[] array237 = expandedKey;
            final int n236 = 23;
            array237[n236] |= 0x4;
            final byte[] array238 = expandedKey;
            final int n237 = 29;
            array238[n237] |= 0x20;
            final byte[] array239 = expandedKey;
            final int n238 = 39;
            array239[n238] |= 0x1;
            final byte[] array240 = expandedKey;
            final int n239 = 46;
            array240[n239] |= 0x1;
            final byte[] array241 = expandedKey;
            final int n240 = 55;
            array241[n240] |= 0x2;
            final byte[] array242 = expandedKey;
            final int n241 = 61;
            array242[n241] |= 0x2;
            final byte[] array243 = expandedKey;
            final int n242 = 70;
            array243[n242] |= 0x4;
            final byte[] array244 = expandedKey;
            final int n243 = 76;
            array244[n243] |= 0x8;
            final byte[] array245 = expandedKey;
            final int n244 = 93;
            array245[n244] |= 0x10;
            final byte[] array246 = expandedKey;
            final int n245 = 100;
            array246[n245] |= 0x4;
            final byte[] array247 = expandedKey;
            final int n246 = 111;
            array247[n246] |= 0x10;
            final byte[] array248 = expandedKey;
            final int n247 = 116;
            array248[n247] |= 0x20;
        }
        if ((b3 & 0x8) != 0x0) {
            final byte[] array249 = expandedKey;
            final int n248 = 6;
            array249[n248] |= 0x2;
            final byte[] array250 = expandedKey;
            final int n249 = 13;
            array250[n249] |= 0x20;
            final byte[] array251 = expandedKey;
            final int n250 = 23;
            array251[n250] |= 0x1;
            final byte[] array252 = expandedKey;
            final int n251 = 30;
            array252[n251] |= 0x1;
            final byte[] array253 = expandedKey;
            final int n252 = 39;
            array253[n252] |= 0x2;
            final byte[] array254 = expandedKey;
            final int n253 = 45;
            array254[n253] |= 0x2;
            final byte[] array255 = expandedKey;
            final int n254 = 63;
            array255[n254] |= 0x8;
            final byte[] array256 = expandedKey;
            final int n255 = 77;
            array256[n255] |= 0x10;
            final byte[] array257 = expandedKey;
            final int n256 = 84;
            array257[n256] |= 0x4;
            final byte[] array258 = expandedKey;
            final int n257 = 95;
            array258[n257] |= 0x10;
            final byte[] array259 = expandedKey;
            final int n258 = 100;
            array259[n258] |= 0x20;
            final byte[] array260 = expandedKey;
            final int n259 = 110;
            array260[n259] |= 0x20;
            final byte[] array261 = expandedKey;
            final int n260 = 117;
            array261[n260] |= 0x4;
            final byte[] array262 = expandedKey;
            final int n261 = 127;
            array262[n261] |= 0x4;
        }
        if ((b3 & 0x4) != 0x0) {
            final byte[] array263 = expandedKey;
            final int n262 = 4;
            array263[n262] |= 0x1;
            final byte[] array264 = expandedKey;
            final int n263 = 13;
            array264[n263] |= 0x2;
            final byte[] array265 = expandedKey;
            final int n264 = 31;
            array265[n264] |= 0x8;
            final byte[] array266 = expandedKey;
            final int n265 = 38;
            array266[n265] |= 0x10;
            final byte[] array267 = expandedKey;
            final int n266 = 47;
            array267[n266] |= 0x20;
            final byte[] array268 = expandedKey;
            final int n267 = 53;
            array268[n267] |= 0x1;
            final byte[] array269 = expandedKey;
            final int n268 = 62;
            array269[n268] |= 0x8;
            final byte[] array270 = expandedKey;
            final int n269 = 68;
            array270[n269] |= 0x20;
            final byte[] array271 = expandedKey;
            final int n270 = 78;
            array271[n270] |= 0x20;
            final byte[] array272 = expandedKey;
            final int n271 = 85;
            array272[n271] |= 0x4;
            final byte[] array273 = expandedKey;
            final int n272 = 94;
            array273[n272] |= 0x2;
            final byte[] array274 = expandedKey;
            final int n273 = 100;
            array274[n273] |= 0x10;
            final byte[] array275 = expandedKey;
            final int n274 = 109;
            array275[n274] |= 0x8;
            final byte[] array276 = expandedKey;
            final int n275 = 127;
            array276[n275] |= 0x2;
        }
        if ((b3 & 0x2) != 0x0) {
            final byte[] array277 = expandedKey;
            final int n276 = 5;
            array277[n276] |= 0x10;
            final byte[] array278 = expandedKey;
            final int n277 = 15;
            array278[n277] |= 0x20;
            final byte[] array279 = expandedKey;
            final int n278 = 21;
            array279[n278] |= 0x1;
            final byte[] array280 = expandedKey;
            final int n279 = 30;
            array280[n279] |= 0x8;
            final byte[] array281 = expandedKey;
            final int n280 = 44;
            array281[n280] |= 0x2;
            final byte[] array282 = expandedKey;
            final int n281 = 55;
            array282[n281] |= 0x4;
            final byte[] array283 = expandedKey;
            final int n282 = 61;
            array283[n282] |= 0x20;
            final byte[] array284 = expandedKey;
            final int n283 = 68;
            array284[n283] |= 0x10;
            final byte[] array285 = expandedKey;
            final int n284 = 77;
            array285[n284] |= 0x8;
            final byte[] array286 = expandedKey;
            final int n285 = 92;
            array286[n285] |= 0x1;
            final byte[] array287 = expandedKey;
            final int n286 = 102;
            array287[n286] |= 0x4;
            final byte[] array288 = expandedKey;
            final int n287 = 108;
            array288[n287] |= 0x8;
            final byte[] array289 = expandedKey;
            final int n288 = 126;
            array289[n288] |= 0x10;
        }
        final byte b4 = array[3];
        if ((b4 & 0x80) != 0x0) {
            final byte[] array290 = expandedKey;
            final int n289 = 2;
            array290[n289] |= 0x8;
            final byte[] array291 = expandedKey;
            final int n290 = 9;
            array291[n290] |= 0x1;
            final byte[] array292 = expandedKey;
            final int n291 = 16;
            array292[n291] |= 0x10;
            final byte[] array293 = expandedKey;
            final int n292 = 27;
            array293[n292] |= 0x4;
            final byte[] array294 = expandedKey;
            final int n293 = 42;
            array294[n293] |= 0x1;
            final byte[] array295 = expandedKey;
            final int n294 = 49;
            array295[n294] |= 0x10;
            final byte[] array296 = expandedKey;
            final int n295 = 58;
            array296[n295] |= 0x2;
            final byte[] array297 = expandedKey;
            final int n296 = 75;
            array297[n296] |= 0x1;
            final byte[] array298 = expandedKey;
            final int n297 = 80;
            array298[n297] |= 0x1;
            final byte[] array299 = expandedKey;
            final int n298 = 90;
            array299[n298] |= 0x4;
            final byte[] array300 = expandedKey;
            final int n299 = 97;
            array300[n299] |= 0x20;
            final byte[] array301 = expandedKey;
            final int n300 = 106;
            array301[n300] |= 0x20;
            final byte[] array302 = expandedKey;
            final int n301 = 113;
            array302[n301] |= 0x8;
            final byte[] array303 = expandedKey;
            final int n302 = 120;
            array303[n302] |= 0x20;
        }
        if ((b4 & 0x40) != 0x0) {
            final byte[] array304 = expandedKey;
            final int n303 = 2;
            array304[n303] |= 0x4;
            final byte[] array305 = expandedKey;
            final int n304 = 8;
            array305[n304] |= 0x4;
            final byte[] array306 = expandedKey;
            final int n305 = 27;
            array306[n305] |= 0x2;
            final byte[] array307 = expandedKey;
            final int n306 = 32;
            array307[n306] |= 0x20;
            final byte[] array308 = expandedKey;
            final int n307 = 41;
            array308[n307] |= 0x1;
            final byte[] array309 = expandedKey;
            final int n308 = 48;
            array309[n308] |= 0x10;
            final byte[] array310 = expandedKey;
            final int n309 = 59;
            array310[n309] |= 0x4;
            final byte[] array311 = expandedKey;
            final int n310 = 66;
            array311[n310] |= 0x10;
            final byte[] array312 = expandedKey;
            final int n311 = 72;
            array312[n311] |= 0x8;
            final byte[] array313 = expandedKey;
            final int n312 = 91;
            array313[n312] |= 0x8;
            final byte[] array314 = expandedKey;
            final int n313 = 107;
            array314[n313] |= 0x1;
            final byte[] array315 = expandedKey;
            final int n314 = 112;
            array315[n314] |= 0x1;
            final byte[] array316 = expandedKey;
            final int n315 = 123;
            array316[n315] |= 0x10;
        }
        if ((b4 & 0x20) != 0x0) {
            final byte[] array317 = expandedKey;
            final int n316 = 3;
            array317[n316] |= 0x8;
            final byte[] array318 = expandedKey;
            final int n317 = 10;
            array318[n317] |= 0x2;
            final byte[] array319 = expandedKey;
            final int n318 = 16;
            array319[n318] |= 0x2;
            final byte[] array320 = expandedKey;
            final int n319 = 25;
            array320[n319] |= 0x4;
            final byte[] array321 = expandedKey;
            final int n320 = 35;
            array321[n320] |= 0x10;
            final byte[] array322 = expandedKey;
            final int n321 = 40;
            array322[n321] |= 0x4;
            final byte[] array323 = expandedKey;
            final int n322 = 59;
            array323[n322] |= 0x2;
            final byte[] array324 = expandedKey;
            final int n323 = 65;
            array324[n323] |= 0x8;
            final byte[] array325 = expandedKey;
            final int n324 = 74;
            array325[n324] |= 0x8;
            final byte[] array326 = expandedKey;
            final int n325 = 83;
            array326[n325] |= 0x20;
            final byte[] array327 = expandedKey;
            final int n326 = 89;
            array327[n326] |= 0x2;
            final byte[] array328 = expandedKey;
            final int n327 = 98;
            array328[n327] |= 0x10;
            final byte[] array329 = expandedKey;
            final int n328 = 104;
            array329[n328] |= 0x8;
            final byte[] array330 = expandedKey;
            final int n329 = 121;
            array330[n329] |= 0x10;
        }
        if ((b4 & 0x10) != 0x0) {
            final byte[] array331 = expandedKey;
            final int n330 = 4;
            array331[n330] |= 0x2;
            final byte[] array332 = expandedKey;
            final int n331 = 13;
            array332[n331] |= 0x4;
            final byte[] array333 = expandedKey;
            final int n332 = 22;
            array333[n332] |= 0x2;
            final byte[] array334 = expandedKey;
            final int n333 = 28;
            array334[n333] |= 0x10;
            final byte[] array335 = expandedKey;
            final int n334 = 37;
            array335[n334] |= 0x8;
            final byte[] array336 = expandedKey;
            final int n335 = 52;
            array336[n335] |= 0x1;
            final byte[] array337 = expandedKey;
            final int n336 = 62;
            array337[n336] |= 0x4;
            final byte[] array338 = expandedKey;
            final int n337 = 79;
            array338[n337] |= 0x8;
            final byte[] array339 = expandedKey;
            final int n338 = 86;
            array339[n338] |= 0x10;
            final byte[] array340 = expandedKey;
            final int n339 = 95;
            array340[n339] |= 0x20;
            final byte[] array341 = expandedKey;
            final int n340 = 101;
            array341[n340] |= 0x1;
            final byte[] array342 = expandedKey;
            final int n341 = 110;
            array342[n341] |= 0x8;
            final byte[] array343 = expandedKey;
            final int n342 = 126;
            array343[n342] |= 0x20;
        }
        if ((b4 & 0x8) != 0x0) {
            final byte[] array344 = expandedKey;
            final int n343 = 5;
            array344[n343] |= 0x20;
            final byte[] array345 = expandedKey;
            final int n344 = 12;
            array345[n344] |= 0x10;
            final byte[] array346 = expandedKey;
            final int n345 = 21;
            array346[n345] |= 0x8;
            final byte[] array347 = expandedKey;
            final int n346 = 36;
            array347[n346] |= 0x1;
            final byte[] array348 = expandedKey;
            final int n347 = 46;
            array348[n347] |= 0x4;
            final byte[] array349 = expandedKey;
            final int n348 = 52;
            array349[n348] |= 0x8;
            final byte[] array350 = expandedKey;
            final int n349 = 70;
            array350[n349] |= 0x10;
            final byte[] array351 = expandedKey;
            final int n350 = 79;
            array351[n350] |= 0x20;
            final byte[] array352 = expandedKey;
            final int n351 = 85;
            array352[n351] |= 0x1;
            final byte[] array353 = expandedKey;
            final int n352 = 94;
            array353[n352] |= 0x8;
            final byte[] array354 = expandedKey;
            final int n353 = 108;
            array354[n353] |= 0x2;
            final byte[] array355 = expandedKey;
            final int n354 = 119;
            array355[n354] |= 0x4;
            final byte[] array356 = expandedKey;
            final int n355 = 126;
            array356[n355] |= 0x2;
        }
        if ((b4 & 0x4) != 0x0) {
            final byte[] array357 = expandedKey;
            final int n356 = 5;
            array357[n356] |= 0x2;
            final byte[] array358 = expandedKey;
            final int n357 = 14;
            array358[n357] |= 0x4;
            final byte[] array359 = expandedKey;
            final int n358 = 20;
            array359[n358] |= 0x8;
            final byte[] array360 = expandedKey;
            final int n359 = 37;
            array360[n359] |= 0x10;
            final byte[] array361 = expandedKey;
            final int n360 = 44;
            array361[n360] |= 0x4;
            final byte[] array362 = expandedKey;
            final int n361 = 55;
            array362[n361] |= 0x10;
            final byte[] array363 = expandedKey;
            final int n362 = 60;
            array363[n362] |= 0x20;
            final byte[] array364 = expandedKey;
            final int n363 = 76;
            array364[n363] |= 0x2;
            final byte[] array365 = expandedKey;
            final int n364 = 87;
            array365[n364] |= 0x4;
            final byte[] array366 = expandedKey;
            final int n365 = 93;
            array366[n365] |= 0x20;
            final byte[] array367 = expandedKey;
            final int n366 = 103;
            array367[n366] |= 0x1;
            final byte[] array368 = expandedKey;
            final int n367 = 110;
            array368[n367] |= 0x1;
            final byte[] array369 = expandedKey;
            final int n368 = 119;
            array369[n368] |= 0x2;
            final byte[] array370 = expandedKey;
            final int n369 = 124;
            array370[n369] |= 0x1;
        }
        if ((b4 & 0x2) != 0x0) {
            final byte[] array371 = expandedKey;
            final int n370 = 7;
            array371[n370] |= 0x20;
            final byte[] array372 = expandedKey;
            final int n371 = 12;
            array372[n371] |= 0x4;
            final byte[] array373 = expandedKey;
            final int n372 = 23;
            array373[n372] |= 0x10;
            final byte[] array374 = expandedKey;
            final int n373 = 28;
            array374[n373] |= 0x20;
            final byte[] array375 = expandedKey;
            final int n374 = 38;
            array375[n374] |= 0x20;
            final byte[] array376 = expandedKey;
            final int n375 = 45;
            array376[n375] |= 0x4;
            final byte[] array377 = expandedKey;
            final int n376 = 54;
            array377[n376] |= 0x2;
            final byte[] array378 = expandedKey;
            final int n377 = 60;
            array378[n377] |= 0x10;
            final byte[] array379 = expandedKey;
            final int n378 = 71;
            array379[n378] |= 0x1;
            final byte[] array380 = expandedKey;
            final int n379 = 78;
            array380[n379] |= 0x1;
            final byte[] array381 = expandedKey;
            final int n380 = 87;
            array381[n380] |= 0x2;
            final byte[] array382 = expandedKey;
            final int n381 = 93;
            array382[n381] |= 0x2;
            final byte[] array383 = expandedKey;
            final int n382 = 111;
            array383[n382] |= 0x8;
            final byte[] array384 = expandedKey;
            final int n383 = 118;
            array384[n383] |= 0x10;
            final byte[] array385 = expandedKey;
            final int n384 = 125;
            array385[n384] |= 0x10;
        }
        final byte b5 = array[4];
        if ((b5 & 0x80) != 0x0) {
            final byte[] array386 = expandedKey;
            final int n385 = 1;
            array386[n385] |= 0x1;
            final byte[] array387 = expandedKey;
            final int n386 = 11;
            array387[n386] |= 0x20;
            final byte[] array388 = expandedKey;
            final int n387 = 17;
            array388[n387] |= 0x2;
            final byte[] array389 = expandedKey;
            final int n388 = 26;
            array389[n388] |= 0x10;
            final byte[] array390 = expandedKey;
            final int n389 = 32;
            array390[n389] |= 0x8;
            final byte[] array391 = expandedKey;
            final int n390 = 51;
            array391[n390] |= 0x8;
            final byte[] array392 = expandedKey;
            final int n391 = 64;
            array392[n391] |= 0x2;
            final byte[] array393 = expandedKey;
            final int n392 = 73;
            array393[n392] |= 0x4;
            final byte[] array394 = expandedKey;
            final int n393 = 83;
            array394[n393] |= 0x10;
            final byte[] array395 = expandedKey;
            final int n394 = 88;
            array395[n394] |= 0x4;
            final byte[] array396 = expandedKey;
            final int n395 = 107;
            array396[n395] |= 0x2;
            final byte[] array397 = expandedKey;
            final int n396 = 112;
            array397[n396] |= 0x20;
            final byte[] array398 = expandedKey;
            final int n397 = 122;
            array398[n397] |= 0x8;
        }
        if ((b5 & 0x40) != 0x0) {
            final byte[] array399 = expandedKey;
            final int n398 = 0;
            array399[n398] |= 0x4;
            final byte[] array400 = expandedKey;
            final int n399 = 9;
            array400[n399] |= 0x20;
            final byte[] array401 = expandedKey;
            final int n400 = 18;
            array401[n400] |= 0x20;
            final byte[] array402 = expandedKey;
            final int n401 = 25;
            array402[n401] |= 0x8;
            final byte[] array403 = expandedKey;
            final int n402 = 34;
            array403[n402] |= 0x8;
            final byte[] array404 = expandedKey;
            final int n403 = 43;
            array404[n403] |= 0x20;
            final byte[] array405 = expandedKey;
            final int n404 = 49;
            array405[n404] |= 0x2;
            final byte[] array406 = expandedKey;
            final int n405 = 58;
            array406[n405] |= 0x10;
            final byte[] array407 = expandedKey;
            final int n406 = 74;
            array407[n406] |= 0x1;
            final byte[] array408 = expandedKey;
            final int n407 = 81;
            array408[n407] |= 0x10;
            final byte[] array409 = expandedKey;
            final int n408 = 90;
            array409[n408] |= 0x2;
            final byte[] array410 = expandedKey;
            final int n409 = 96;
            array410[n409] |= 0x2;
            final byte[] array411 = expandedKey;
            final int n410 = 105;
            array411[n410] |= 0x4;
            final byte[] array412 = expandedKey;
            final int n411 = 115;
            array412[n411] |= 0x10;
            final byte[] array413 = expandedKey;
            final int n412 = 122;
            array413[n412] |= 0x4;
        }
        if ((b5 & 0x20) != 0x0) {
            final byte[] array414 = expandedKey;
            final int n413 = 2;
            array414[n413] |= 0x2;
            final byte[] array415 = expandedKey;
            final int n414 = 19;
            array415[n414] |= 0x1;
            final byte[] array416 = expandedKey;
            final int n415 = 24;
            array416[n415] |= 0x1;
            final byte[] array417 = expandedKey;
            final int n416 = 34;
            array417[n416] |= 0x4;
            final byte[] array418 = expandedKey;
            final int n417 = 41;
            array418[n417] |= 0x20;
            final byte[] array419 = expandedKey;
            final int n418 = 50;
            array419[n418] |= 0x20;
            final byte[] array420 = expandedKey;
            final int n419 = 57;
            array420[n419] |= 0x8;
            final byte[] array421 = expandedKey;
            final int n420 = 64;
            array421[n420] |= 0x20;
            final byte[] array422 = expandedKey;
            final int n421 = 73;
            array422[n421] |= 0x1;
            final byte[] array423 = expandedKey;
            final int n422 = 80;
            array423[n422] |= 0x10;
            final byte[] array424 = expandedKey;
            final int n423 = 91;
            array424[n423] |= 0x4;
            final byte[] array425 = expandedKey;
            final int n424 = 106;
            array425[n424] |= 0x1;
            final byte[] array426 = expandedKey;
            final int n425 = 113;
            array426[n425] |= 0x10;
            final byte[] array427 = expandedKey;
            final int n426 = 123;
            array427[n426] |= 0x8;
        }
        if ((b5 & 0x10) != 0x0) {
            final byte[] array428 = expandedKey;
            final int n427 = 3;
            array428[n427] |= 0x4;
            final byte[] array429 = expandedKey;
            final int n428 = 10;
            array429[n428] |= 0x10;
            final byte[] array430 = expandedKey;
            final int n429 = 16;
            array430[n429] |= 0x8;
            final byte[] array431 = expandedKey;
            final int n430 = 35;
            array431[n430] |= 0x8;
            final byte[] array432 = expandedKey;
            final int n431 = 51;
            array432[n431] |= 0x1;
            final byte[] array433 = expandedKey;
            final int n432 = 56;
            array433[n432] |= 0x1;
            final byte[] array434 = expandedKey;
            final int n433 = 67;
            array434[n433] |= 0x10;
            final byte[] array435 = expandedKey;
            final int n434 = 72;
            array435[n434] |= 0x4;
            final byte[] array436 = expandedKey;
            final int n435 = 91;
            array436[n435] |= 0x2;
            final byte[] array437 = expandedKey;
            final int n436 = 96;
            array437[n436] |= 0x20;
            final byte[] array438 = expandedKey;
            final int n437 = 105;
            array438[n437] |= 0x1;
            final byte[] array439 = expandedKey;
            final int n438 = 112;
            array439[n438] |= 0x10;
            final byte[] array440 = expandedKey;
            final int n439 = 121;
            array440[n439] |= 0x2;
        }
        if ((b5 & 0x8) != 0x0) {
            final byte[] array441 = expandedKey;
            final int n440 = 4;
            array441[n440] |= 0x10;
            final byte[] array442 = expandedKey;
            final int n441 = 15;
            array442[n441] |= 0x1;
            final byte[] array443 = expandedKey;
            final int n442 = 22;
            array443[n442] |= 0x1;
            final byte[] array444 = expandedKey;
            final int n443 = 31;
            array444[n443] |= 0x2;
            final byte[] array445 = expandedKey;
            final int n444 = 37;
            array445[n444] |= 0x2;
            final byte[] array446 = expandedKey;
            final int n445 = 55;
            array446[n445] |= 0x8;
            final byte[] array447 = expandedKey;
            final int n446 = 62;
            array447[n446] |= 0x10;
            final byte[] array448 = expandedKey;
            final int n447 = 69;
            array448[n447] |= 0x10;
            final byte[] array449 = expandedKey;
            final int n448 = 76;
            array449[n448] |= 0x4;
            final byte[] array450 = expandedKey;
            final int n449 = 87;
            array450[n449] |= 0x10;
            final byte[] array451 = expandedKey;
            final int n450 = 92;
            array451[n450] |= 0x20;
            final byte[] array452 = expandedKey;
            final int n451 = 102;
            array452[n451] |= 0x20;
            final byte[] array453 = expandedKey;
            final int n452 = 109;
            array453[n452] |= 0x4;
            final byte[] array454 = expandedKey;
            final int n453 = 118;
            array454[n453] |= 0x2;
            final byte[] array455 = expandedKey;
            final int n454 = 125;
            array455[n454] |= 0x20;
        }
        if ((b5 & 0x4) != 0x0) {
            final byte[] array456 = expandedKey;
            final int n455 = 6;
            array456[n455] |= 0x4;
            final byte[] array457 = expandedKey;
            final int n456 = 23;
            array457[n456] |= 0x8;
            final byte[] array458 = expandedKey;
            final int n457 = 30;
            array458[n457] |= 0x10;
            final byte[] array459 = expandedKey;
            final int n458 = 39;
            array459[n458] |= 0x20;
            final byte[] array460 = expandedKey;
            final int n459 = 45;
            array460[n459] |= 0x1;
            final byte[] array461 = expandedKey;
            final int n460 = 54;
            array461[n460] |= 0x8;
            final byte[] array462 = expandedKey;
            final int n461 = 70;
            array462[n461] |= 0x20;
            final byte[] array463 = expandedKey;
            final int n462 = 77;
            array463[n462] |= 0x4;
            final byte[] array464 = expandedKey;
            final int n463 = 86;
            array464[n463] |= 0x2;
            final byte[] array465 = expandedKey;
            final int n464 = 92;
            array465[n464] |= 0x10;
            final byte[] array466 = expandedKey;
            final int n465 = 101;
            array466[n465] |= 0x8;
            final byte[] array467 = expandedKey;
            final int n466 = 116;
            array467[n466] |= 0x1;
            final byte[] array468 = expandedKey;
            final int n467 = 125;
            array468[n467] |= 0x2;
        }
        if ((b5 & 0x2) != 0x0) {
            final byte[] array469 = expandedKey;
            final int n468 = 4;
            array469[n468] |= 0x4;
            final byte[] array470 = expandedKey;
            final int n469 = 13;
            array470[n469] |= 0x1;
            final byte[] array471 = expandedKey;
            final int n470 = 22;
            array471[n470] |= 0x8;
            final byte[] array472 = expandedKey;
            final int n471 = 36;
            array472[n471] |= 0x2;
            final byte[] array473 = expandedKey;
            final int n472 = 47;
            array473[n472] |= 0x4;
            final byte[] array474 = expandedKey;
            final int n473 = 53;
            array474[n473] |= 0x20;
            final byte[] array475 = expandedKey;
            final int n474 = 63;
            array475[n474] |= 0x1;
            final byte[] array476 = expandedKey;
            final int n475 = 69;
            array476[n475] |= 0x8;
            final byte[] array477 = expandedKey;
            final int n476 = 84;
            array477[n476] |= 0x1;
            final byte[] array478 = expandedKey;
            final int n477 = 94;
            array478[n477] |= 0x4;
            final byte[] array479 = expandedKey;
            final int n478 = 100;
            array479[n478] |= 0x8;
            final byte[] array480 = expandedKey;
            final int n479 = 117;
            array480[n479] |= 0x10;
            final byte[] array481 = expandedKey;
            final int n480 = 127;
            array481[n480] |= 0x20;
        }
        final byte b6 = array[5];
        if ((b6 & 0x80) != 0x0) {
            final byte[] array482 = expandedKey;
            final int n481 = 3;
            array482[n481] |= 0x20;
            final byte[] array483 = expandedKey;
            final int n482 = 8;
            array483[n482] |= 0x10;
            final byte[] array484 = expandedKey;
            final int n483 = 19;
            array484[n483] |= 0x4;
            final byte[] array485 = expandedKey;
            final int n484 = 34;
            array485[n484] |= 0x1;
            final byte[] array486 = expandedKey;
            final int n485 = 41;
            array486[n485] |= 0x10;
            final byte[] array487 = expandedKey;
            final int n486 = 50;
            array487[n486] |= 0x2;
            final byte[] array488 = expandedKey;
            final int n487 = 56;
            array488[n487] |= 0x2;
            final byte[] array489 = expandedKey;
            final int n488 = 67;
            array489[n488] |= 0x1;
            final byte[] array490 = expandedKey;
            final int n489 = 72;
            array490[n489] |= 0x1;
            final byte[] array491 = expandedKey;
            final int n490 = 82;
            array491[n490] |= 0x4;
            final byte[] array492 = expandedKey;
            final int n491 = 89;
            array492[n491] |= 0x20;
            final byte[] array493 = expandedKey;
            final int n492 = 98;
            array493[n492] |= 0x20;
            final byte[] array494 = expandedKey;
            final int n493 = 105;
            array494[n493] |= 0x8;
            final byte[] array495 = expandedKey;
            final int n494 = 114;
            array495[n494] |= 0x8;
            final byte[] array496 = expandedKey;
            final int n495 = 121;
            array496[n495] |= 0x1;
        }
        if ((b6 & 0x40) != 0x0) {
            final byte[] array497 = expandedKey;
            final int n496 = 1;
            array497[n496] |= 0x20;
            final byte[] array498 = expandedKey;
            final int n497 = 19;
            array498[n497] |= 0x2;
            final byte[] array499 = expandedKey;
            final int n498 = 24;
            array499[n498] |= 0x20;
            final byte[] array500 = expandedKey;
            final int n499 = 33;
            array500[n499] |= 0x1;
            final byte[] array501 = expandedKey;
            final int n500 = 40;
            array501[n500] |= 0x10;
            final byte[] array502 = expandedKey;
            final int n501 = 51;
            array502[n501] |= 0x4;
            final byte[] array503 = expandedKey;
            final int n502 = 64;
            array503[n502] |= 0x8;
            final byte[] array504 = expandedKey;
            final int n503 = 83;
            array504[n503] |= 0x8;
            final byte[] array505 = expandedKey;
            final int n504 = 99;
            array505[n504] |= 0x1;
            final byte[] array506 = expandedKey;
            final int n505 = 104;
            array506[n505] |= 0x1;
            final byte[] array507 = expandedKey;
            final int n506 = 114;
            array507[n506] |= 0x4;
            final byte[] array508 = expandedKey;
            final int n507 = 120;
            array508[n507] |= 0x4;
        }
        if ((b6 & 0x20) != 0x0) {
            final byte[] array509 = expandedKey;
            final int n508 = 8;
            array509[n508] |= 0x2;
            final byte[] array510 = expandedKey;
            final int n509 = 17;
            array510[n509] |= 0x4;
            final byte[] array511 = expandedKey;
            final int n510 = 27;
            array511[n510] |= 0x10;
            final byte[] array512 = expandedKey;
            final int n511 = 32;
            array512[n511] |= 0x4;
            final byte[] array513 = expandedKey;
            final int n512 = 51;
            array513[n512] |= 0x2;
            final byte[] array514 = expandedKey;
            final int n513 = 56;
            array514[n513] |= 0x20;
            final byte[] array515 = expandedKey;
            final int n514 = 66;
            array515[n514] |= 0x8;
            final byte[] array516 = expandedKey;
            final int n515 = 75;
            array516[n515] |= 0x20;
            final byte[] array517 = expandedKey;
            final int n516 = 81;
            array517[n516] |= 0x2;
            final byte[] array518 = expandedKey;
            final int n517 = 90;
            array518[n517] |= 0x10;
            final byte[] array519 = expandedKey;
            final int n518 = 96;
            array519[n518] |= 0x8;
            final byte[] array520 = expandedKey;
            final int n519 = 115;
            array520[n519] |= 0x8;
            final byte[] array521 = expandedKey;
            final int n520 = 122;
            array521[n520] |= 0x2;
        }
        if ((b6 & 0x10) != 0x0) {
            final byte[] array522 = expandedKey;
            final int n521 = 2;
            array522[n521] |= 0x10;
            final byte[] array523 = expandedKey;
            final int n522 = 18;
            array523[n522] |= 0x1;
            final byte[] array524 = expandedKey;
            final int n523 = 25;
            array524[n523] |= 0x10;
            final byte[] array525 = expandedKey;
            final int n524 = 34;
            array525[n524] |= 0x2;
            final byte[] array526 = expandedKey;
            final int n525 = 40;
            array526[n525] |= 0x2;
            final byte[] array527 = expandedKey;
            final int n526 = 49;
            array527[n526] |= 0x4;
            final byte[] array528 = expandedKey;
            final int n527 = 59;
            array528[n527] |= 0x10;
            final byte[] array529 = expandedKey;
            final int n528 = 66;
            array529[n528] |= 0x4;
            final byte[] array530 = expandedKey;
            final int n529 = 73;
            array530[n529] |= 0x20;
            final byte[] array531 = expandedKey;
            final int n530 = 82;
            array531[n530] |= 0x20;
            final byte[] array532 = expandedKey;
            final int n531 = 89;
            array532[n531] |= 0x8;
            final byte[] array533 = expandedKey;
            final int n532 = 98;
            array533[n532] |= 0x8;
            final byte[] array534 = expandedKey;
            final int n533 = 107;
            array534[n533] |= 0x20;
            final byte[] array535 = expandedKey;
            final int n534 = 113;
            array535[n534] |= 0x2;
            final byte[] array536 = expandedKey;
            final int n535 = 123;
            array536[n535] |= 0x4;
        }
        if ((b6 & 0x8) != 0x0) {
            final byte[] array537 = expandedKey;
            final int n536 = 7;
            array537[n536] |= 0x1;
            final byte[] array538 = expandedKey;
            final int n537 = 13;
            array538[n537] |= 0x8;
            final byte[] array539 = expandedKey;
            final int n538 = 28;
            array539[n538] |= 0x1;
            final byte[] array540 = expandedKey;
            final int n539 = 38;
            array540[n539] |= 0x4;
            final byte[] array541 = expandedKey;
            final int n540 = 44;
            array541[n540] |= 0x8;
            final byte[] array542 = expandedKey;
            final int n541 = 61;
            array542[n541] |= 0x10;
            final byte[] array543 = expandedKey;
            final int n542 = 71;
            array543[n542] |= 0x20;
            final byte[] array544 = expandedKey;
            final int n543 = 77;
            array544[n543] |= 0x1;
            final byte[] array545 = expandedKey;
            final int n544 = 86;
            array545[n544] |= 0x8;
            final byte[] array546 = expandedKey;
            final int n545 = 100;
            array546[n545] |= 0x2;
            final byte[] array547 = expandedKey;
            final int n546 = 111;
            array547[n546] |= 0x4;
            final byte[] array548 = expandedKey;
            final int n547 = 117;
            array548[n547] |= 0x20;
            final byte[] array549 = expandedKey;
            final int n548 = 124;
            array549[n548] |= 0x10;
        }
        if ((b6 & 0x4) != 0x0) {
            final byte[] array550 = expandedKey;
            final int n549 = 12;
            array550[n549] |= 0x8;
            final byte[] array551 = expandedKey;
            final int n550 = 29;
            array551[n550] |= 0x10;
            final byte[] array552 = expandedKey;
            final int n551 = 36;
            array552[n551] |= 0x4;
            final byte[] array553 = expandedKey;
            final int n552 = 47;
            array553[n552] |= 0x10;
            final byte[] array554 = expandedKey;
            final int n553 = 52;
            array554[n553] |= 0x20;
            final byte[] array555 = expandedKey;
            final int n554 = 62;
            array555[n554] |= 0x20;
            final byte[] array556 = expandedKey;
            final int n555 = 68;
            array556[n555] |= 0x2;
            final byte[] array557 = expandedKey;
            final int n556 = 79;
            array557[n556] |= 0x4;
            final byte[] array558 = expandedKey;
            final int n557 = 85;
            array558[n557] |= 0x20;
            final byte[] array559 = expandedKey;
            final int n558 = 95;
            array559[n558] |= 0x1;
            final byte[] array560 = expandedKey;
            final int n559 = 102;
            array560[n559] |= 0x1;
            final byte[] array561 = expandedKey;
            final int n560 = 111;
            array561[n560] |= 0x2;
            final byte[] array562 = expandedKey;
            final int n561 = 117;
            array562[n561] |= 0x2;
            final byte[] array563 = expandedKey;
            final int n562 = 126;
            array563[n562] |= 0x4;
        }
        if ((b6 & 0x2) != 0x0) {
            final byte[] array564 = expandedKey;
            final int n563 = 5;
            array564[n563] |= 0x1;
            final byte[] array565 = expandedKey;
            final int n564 = 15;
            array565[n564] |= 0x10;
            final byte[] array566 = expandedKey;
            final int n565 = 20;
            array566[n565] |= 0x20;
            final byte[] array567 = expandedKey;
            final int n566 = 30;
            array567[n566] |= 0x20;
            final byte[] array568 = expandedKey;
            final int n567 = 37;
            array568[n567] |= 0x4;
            final byte[] array569 = expandedKey;
            final int n568 = 46;
            array569[n568] |= 0x2;
            final byte[] array570 = expandedKey;
            final int n569 = 52;
            array570[n569] |= 0x10;
            final byte[] array571 = expandedKey;
            final int n570 = 61;
            array571[n570] |= 0x8;
            final byte[] array572 = expandedKey;
            final int n571 = 70;
            array572[n571] |= 0x1;
            final byte[] array573 = expandedKey;
            final int n572 = 79;
            array573[n572] |= 0x2;
            final byte[] array574 = expandedKey;
            final int n573 = 85;
            array574[n573] |= 0x2;
            final byte[] array575 = expandedKey;
            final int n574 = 103;
            array575[n574] |= 0x8;
            final byte[] array576 = expandedKey;
            final int n575 = 110;
            array576[n575] |= 0x10;
            final byte[] array577 = expandedKey;
            final int n576 = 119;
            array577[n576] |= 0x20;
            final byte[] array578 = expandedKey;
            final int n577 = 124;
            array578[n577] |= 0x4;
        }
        final byte b7 = array[6];
        if ((b7 & 0x80) != 0x0) {
            final byte[] array579 = expandedKey;
            final int n578 = 0;
            array579[n578] |= 0x10;
            final byte[] array580 = expandedKey;
            final int n579 = 9;
            array580[n579] |= 0x2;
            final byte[] array581 = expandedKey;
            final int n580 = 18;
            array581[n580] |= 0x10;
            final byte[] array582 = expandedKey;
            final int n581 = 24;
            array582[n581] |= 0x8;
            final byte[] array583 = expandedKey;
            final int n582 = 43;
            array583[n582] |= 0x8;
            final byte[] array584 = expandedKey;
            final int n583 = 59;
            array584[n583] |= 0x1;
            final byte[] array585 = expandedKey;
            final int n584 = 65;
            array585[n584] |= 0x4;
            final byte[] array586 = expandedKey;
            final int n585 = 75;
            array586[n585] |= 0x10;
            final byte[] array587 = expandedKey;
            final int n586 = 80;
            array587[n586] |= 0x4;
            final byte[] array588 = expandedKey;
            final int n587 = 99;
            array588[n587] |= 0x2;
            final byte[] array589 = expandedKey;
            final int n588 = 104;
            array589[n588] |= 0x20;
            final byte[] array590 = expandedKey;
            final int n589 = 113;
            array590[n589] |= 0x1;
            final byte[] array591 = expandedKey;
            final int n590 = 123;
            array591[n590] |= 0x20;
        }
        if ((b7 & 0x40) != 0x0) {
            final byte[] array592 = expandedKey;
            final int n591 = 10;
            array592[n591] |= 0x20;
            final byte[] array593 = expandedKey;
            final int n592 = 17;
            array593[n592] |= 0x8;
            final byte[] array594 = expandedKey;
            final int n593 = 26;
            array594[n593] |= 0x8;
            final byte[] array595 = expandedKey;
            final int n594 = 35;
            array595[n594] |= 0x20;
            final byte[] array596 = expandedKey;
            final int n595 = 41;
            array596[n595] |= 0x2;
            final byte[] array597 = expandedKey;
            final int n596 = 50;
            array597[n596] |= 0x10;
            final byte[] array598 = expandedKey;
            final int n597 = 56;
            array598[n597] |= 0x8;
            final byte[] array599 = expandedKey;
            final int n598 = 66;
            array599[n598] |= 0x1;
            final byte[] array600 = expandedKey;
            final int n599 = 73;
            array600[n599] |= 0x10;
            final byte[] array601 = expandedKey;
            final int n600 = 82;
            array601[n600] |= 0x2;
            final byte[] array602 = expandedKey;
            final int n601 = 88;
            array602[n601] |= 0x2;
            final byte[] array603 = expandedKey;
            final int n602 = 97;
            array603[n602] |= 0x4;
            final byte[] array604 = expandedKey;
            final int n603 = 107;
            array604[n603] |= 0x10;
            final byte[] array605 = expandedKey;
            final int n604 = 112;
            array605[n604] |= 0x4;
            final byte[] array606 = expandedKey;
            final int n605 = 121;
            array606[n605] |= 0x20;
        }
        if ((b7 & 0x20) != 0x0) {
            final byte[] array607 = expandedKey;
            final int n606 = 0;
            array607[n606] |= 0x2;
            final byte[] array608 = expandedKey;
            final int n607 = 11;
            array608[n607] |= 0x1;
            final byte[] array609 = expandedKey;
            final int n608 = 16;
            array609[n608] |= 0x1;
            final byte[] array610 = expandedKey;
            final int n609 = 26;
            array610[n609] |= 0x4;
            final byte[] array611 = expandedKey;
            final int n610 = 33;
            array611[n610] |= 0x20;
            final byte[] array612 = expandedKey;
            final int n611 = 42;
            array612[n611] |= 0x20;
            final byte[] array613 = expandedKey;
            final int n612 = 49;
            array613[n612] |= 0x8;
            final byte[] array614 = expandedKey;
            final int n613 = 58;
            array614[n613] |= 0x8;
            final byte[] array615 = expandedKey;
            final int n614 = 65;
            array615[n614] |= 0x1;
            final byte[] array616 = expandedKey;
            final int n615 = 72;
            array616[n615] |= 0x10;
            final byte[] array617 = expandedKey;
            final int n616 = 83;
            array617[n616] |= 0x4;
            final byte[] array618 = expandedKey;
            final int n617 = 98;
            array618[n617] |= 0x1;
            final byte[] array619 = expandedKey;
            final int n618 = 105;
            array619[n618] |= 0x10;
            final byte[] array620 = expandedKey;
            final int n619 = 114;
            array620[n619] |= 0x2;
        }
        if ((b7 & 0x10) != 0x0) {
            final byte[] array621 = expandedKey;
            final int n620 = 8;
            array621[n620] |= 0x8;
            final byte[] array622 = expandedKey;
            final int n621 = 27;
            array622[n621] |= 0x8;
            final byte[] array623 = expandedKey;
            final int n622 = 43;
            array623[n622] |= 0x1;
            final byte[] array624 = expandedKey;
            final int n623 = 48;
            array624[n623] |= 0x1;
            final byte[] array625 = expandedKey;
            final int n624 = 58;
            array625[n624] |= 0x4;
            final byte[] array626 = expandedKey;
            final int n625 = 64;
            array626[n625] |= 0x4;
            final byte[] array627 = expandedKey;
            final int n626 = 83;
            array627[n626] |= 0x2;
            final byte[] array628 = expandedKey;
            final int n627 = 88;
            array628[n627] |= 0x20;
            final byte[] array629 = expandedKey;
            final int n628 = 97;
            array629[n628] |= 0x1;
            final byte[] array630 = expandedKey;
            final int n629 = 104;
            array630[n629] |= 0x10;
            final byte[] array631 = expandedKey;
            final int n630 = 115;
            array631[n630] |= 0x4;
            final byte[] array632 = expandedKey;
            final int n631 = 122;
            array632[n631] |= 0x10;
        }
        if ((b7 & 0x8) != 0x0) {
            final byte[] array633 = expandedKey;
            final int n632 = 5;
            array633[n632] |= 0x8;
            final byte[] array634 = expandedKey;
            final int n633 = 14;
            array634[n633] |= 0x1;
            final byte[] array635 = expandedKey;
            final int n634 = 23;
            array635[n634] |= 0x2;
            final byte[] array636 = expandedKey;
            final int n635 = 29;
            array636[n635] |= 0x2;
            final byte[] array637 = expandedKey;
            final int n636 = 47;
            array637[n636] |= 0x8;
            final byte[] array638 = expandedKey;
            final int n637 = 54;
            array638[n637] |= 0x10;
            final byte[] array639 = expandedKey;
            final int n638 = 63;
            array639[n638] |= 0x20;
            final byte[] array640 = expandedKey;
            final int n639 = 68;
            array640[n639] |= 0x4;
            final byte[] array641 = expandedKey;
            final int n640 = 79;
            array641[n640] |= 0x10;
            final byte[] array642 = expandedKey;
            final int n641 = 84;
            array642[n641] |= 0x20;
            final byte[] array643 = expandedKey;
            final int n642 = 94;
            array643[n642] |= 0x20;
            final byte[] array644 = expandedKey;
            final int n643 = 101;
            array644[n643] |= 0x4;
            final byte[] array645 = expandedKey;
            final int n644 = 110;
            array645[n644] |= 0x2;
            final byte[] array646 = expandedKey;
            final int n645 = 116;
            array646[n645] |= 0x10;
            final byte[] array647 = expandedKey;
            final int n646 = 127;
            array647[n646] |= 0x1;
        }
        if ((b7 & 0x4) != 0x0) {
            final byte[] array648 = expandedKey;
            final int n647 = 4;
            array648[n647] |= 0x8;
            final byte[] array649 = expandedKey;
            final int n648 = 15;
            array649[n648] |= 0x8;
            final byte[] array650 = expandedKey;
            final int n649 = 22;
            array650[n649] |= 0x10;
            final byte[] array651 = expandedKey;
            final int n650 = 31;
            array651[n650] |= 0x20;
            final byte[] array652 = expandedKey;
            final int n651 = 37;
            array652[n651] |= 0x1;
            final byte[] array653 = expandedKey;
            final int n652 = 46;
            array653[n652] |= 0x8;
            final byte[] array654 = expandedKey;
            final int n653 = 60;
            array654[n653] |= 0x2;
            final byte[] array655 = expandedKey;
            final int n654 = 69;
            array655[n654] |= 0x4;
            final byte[] array656 = expandedKey;
            final int n655 = 78;
            array656[n655] |= 0x2;
            final byte[] array657 = expandedKey;
            final int n656 = 84;
            array657[n656] |= 0x10;
            final byte[] array658 = expandedKey;
            final int n657 = 93;
            array658[n657] |= 0x8;
            final byte[] array659 = expandedKey;
            final int n658 = 108;
            array659[n658] |= 0x1;
            final byte[] array660 = expandedKey;
            final int n659 = 118;
            array660[n659] |= 0x4;
        }
        if ((b7 & 0x2) != 0x0) {
            final byte[] array661 = expandedKey;
            final int n660 = 7;
            array661[n660] |= 0x10;
            final byte[] array662 = expandedKey;
            final int n661 = 14;
            array662[n661] |= 0x8;
            final byte[] array663 = expandedKey;
            final int n662 = 28;
            array663[n662] |= 0x2;
            final byte[] array664 = expandedKey;
            final int n663 = 39;
            array664[n663] |= 0x4;
            final byte[] array665 = expandedKey;
            final int n664 = 45;
            array665[n664] |= 0x20;
            final byte[] array666 = expandedKey;
            final int n665 = 55;
            array666[n665] |= 0x1;
            final byte[] array667 = expandedKey;
            final int n666 = 62;
            array667[n666] |= 0x1;
            final byte[] array668 = expandedKey;
            final int n667 = 76;
            array668[n667] |= 0x1;
            final byte[] array669 = expandedKey;
            final int n668 = 86;
            array669[n668] |= 0x4;
            final byte[] array670 = expandedKey;
            final int n669 = 92;
            array670[n669] |= 0x8;
            final byte[] array671 = expandedKey;
            final int n670 = 109;
            array671[n670] |= 0x10;
            final byte[] array672 = expandedKey;
            final int n671 = 116;
            array672[n671] |= 0x4;
            final byte[] array673 = expandedKey;
            final int n672 = 125;
            array673[n672] |= 0x1;
        }
        final byte b8 = array[7];
        if ((b8 & 0x80) != 0x0) {
            final byte[] array674 = expandedKey;
            final int n673 = 1;
            array674[n673] |= 0x2;
            final byte[] array675 = expandedKey;
            final int n674 = 11;
            array675[n674] |= 0x4;
            final byte[] array676 = expandedKey;
            final int n675 = 26;
            array676[n675] |= 0x1;
            final byte[] array677 = expandedKey;
            final int n676 = 33;
            array677[n676] |= 0x10;
            final byte[] array678 = expandedKey;
            final int n677 = 42;
            array678[n677] |= 0x2;
            final byte[] array679 = expandedKey;
            final int n678 = 48;
            array679[n678] |= 0x2;
            final byte[] array680 = expandedKey;
            final int n679 = 57;
            array680[n679] |= 0x4;
            final byte[] array681 = expandedKey;
            final int n680 = 64;
            array681[n680] |= 0x1;
            final byte[] array682 = expandedKey;
            final int n681 = 74;
            array682[n681] |= 0x4;
            final byte[] array683 = expandedKey;
            final int n682 = 81;
            array683[n682] |= 0x20;
            final byte[] array684 = expandedKey;
            final int n683 = 90;
            array684[n683] |= 0x20;
            final byte[] array685 = expandedKey;
            final int n684 = 97;
            array685[n684] |= 0x8;
            final byte[] array686 = expandedKey;
            final int n685 = 106;
            array686[n685] |= 0x8;
            final byte[] array687 = expandedKey;
            final int n686 = 115;
            array687[n686] |= 0x20;
            final byte[] array688 = expandedKey;
            final int n687 = 120;
            array688[n687] |= 0x10;
        }
        if ((b8 & 0x40) != 0x0) {
            final byte[] array689 = expandedKey;
            final int n688 = 2;
            array689[n688] |= 0x20;
            final byte[] array690 = expandedKey;
            final int n689 = 11;
            array690[n689] |= 0x2;
            final byte[] array691 = expandedKey;
            final int n690 = 16;
            array691[n690] |= 0x20;
            final byte[] array692 = expandedKey;
            final int n691 = 25;
            array692[n691] |= 0x1;
            final byte[] array693 = expandedKey;
            final int n692 = 32;
            array693[n692] |= 0x10;
            final byte[] array694 = expandedKey;
            final int n693 = 43;
            array694[n693] |= 0x4;
            final byte[] array695 = expandedKey;
            final int n694 = 58;
            array695[n694] |= 0x1;
            final byte[] array696 = expandedKey;
            final int n695 = 75;
            array696[n695] |= 0x8;
            final byte[] array697 = expandedKey;
            final int n696 = 91;
            array697[n696] |= 0x1;
            final byte[] array698 = expandedKey;
            final int n697 = 96;
            array698[n697] |= 0x1;
            final byte[] array699 = expandedKey;
            final int n698 = 106;
            array699[n698] |= 0x4;
            final byte[] array700 = expandedKey;
            final int n699 = 113;
            array700[n699] |= 0x20;
        }
        if ((b8 & 0x20) != 0x0) {
            final byte[] array701 = expandedKey;
            final int n700 = 3;
            array701[n700] |= 0x1;
            final byte[] array702 = expandedKey;
            final int n701 = 9;
            array702[n701] |= 0x4;
            final byte[] array703 = expandedKey;
            final int n702 = 19;
            array703[n702] |= 0x10;
            final byte[] array704 = expandedKey;
            final int n703 = 24;
            array704[n703] |= 0x4;
            final byte[] array705 = expandedKey;
            final int n704 = 43;
            array705[n704] |= 0x2;
            final byte[] array706 = expandedKey;
            final int n705 = 48;
            array706[n705] |= 0x20;
            final byte[] array707 = expandedKey;
            final int n706 = 57;
            array707[n706] |= 0x1;
            final byte[] array708 = expandedKey;
            final int n707 = 67;
            array708[n707] |= 0x20;
            final byte[] array709 = expandedKey;
            final int n708 = 73;
            array709[n708] |= 0x2;
            final byte[] array710 = expandedKey;
            final int n709 = 82;
            array710[n709] |= 0x10;
            final byte[] array711 = expandedKey;
            final int n710 = 88;
            array711[n710] |= 0x8;
            final byte[] array712 = expandedKey;
            final int n711 = 107;
            array712[n711] |= 0x8;
            final byte[] array713 = expandedKey;
            final int n712 = 120;
            array713[n712] |= 0x2;
        }
        if ((b8 & 0x10) != 0x0) {
            final byte[] array714 = expandedKey;
            final int n713 = 0;
            array714[n713] |= 0x8;
            final byte[] array715 = expandedKey;
            final int n714 = 10;
            array715[n714] |= 0x1;
            final byte[] array716 = expandedKey;
            final int n715 = 17;
            array716[n715] |= 0x10;
            final byte[] array717 = expandedKey;
            final int n716 = 26;
            array717[n716] |= 0x2;
            final byte[] array718 = expandedKey;
            final int n717 = 32;
            array718[n717] |= 0x2;
            final byte[] array719 = expandedKey;
            final int n718 = 41;
            array719[n718] |= 0x4;
            final byte[] array720 = expandedKey;
            final int n719 = 51;
            array720[n719] |= 0x10;
            final byte[] array721 = expandedKey;
            final int n720 = 56;
            array721[n720] |= 0x4;
            final byte[] array722 = expandedKey;
            final int n721 = 65;
            array722[n721] |= 0x20;
            final byte[] array723 = expandedKey;
            final int n722 = 74;
            array723[n722] |= 0x20;
            final byte[] array724 = expandedKey;
            final int n723 = 81;
            array724[n723] |= 0x8;
            final byte[] array725 = expandedKey;
            final int n724 = 90;
            array725[n724] |= 0x8;
            final byte[] array726 = expandedKey;
            final int n725 = 99;
            array726[n725] |= 0x20;
            final byte[] array727 = expandedKey;
            final int n726 = 105;
            array727[n726] |= 0x2;
            final byte[] array728 = expandedKey;
            final int n727 = 114;
            array728[n727] |= 0x10;
        }
        if ((b8 & 0x8) != 0x0) {
            final byte[] array729 = expandedKey;
            final int n728 = 6;
            array729[n728] |= 0x1;
            final byte[] array730 = expandedKey;
            final int n729 = 20;
            array730[n729] |= 0x1;
            final byte[] array731 = expandedKey;
            final int n730 = 30;
            array731[n730] |= 0x4;
            final byte[] array732 = expandedKey;
            final int n731 = 36;
            array732[n731] |= 0x8;
            final byte[] array733 = expandedKey;
            final int n732 = 53;
            array733[n732] |= 0x10;
            final byte[] array734 = expandedKey;
            final int n733 = 60;
            array734[n733] |= 0x4;
            final byte[] array735 = expandedKey;
            final int n734 = 69;
            array735[n734] |= 0x1;
            final byte[] array736 = expandedKey;
            final int n735 = 78;
            array736[n735] |= 0x8;
            final byte[] array737 = expandedKey;
            final int n736 = 92;
            array737[n736] |= 0x2;
            final byte[] array738 = expandedKey;
            final int n737 = 103;
            array738[n737] |= 0x4;
            final byte[] array739 = expandedKey;
            final int n738 = 109;
            array739[n738] |= 0x20;
            final byte[] array740 = expandedKey;
            final int n739 = 119;
            array740[n739] |= 0x1;
            final byte[] array741 = expandedKey;
            final int n740 = 125;
            array741[n740] |= 0x8;
        }
        if ((b8 & 0x4) != 0x0) {
            final byte[] array742 = expandedKey;
            final int n741 = 7;
            array742[n741] |= 0x8;
            final byte[] array743 = expandedKey;
            final int n742 = 21;
            array743[n742] |= 0x10;
            final byte[] array744 = expandedKey;
            final int n743 = 28;
            array744[n743] |= 0x4;
            final byte[] array745 = expandedKey;
            final int n744 = 39;
            array745[n744] |= 0x10;
            final byte[] array746 = expandedKey;
            final int n745 = 44;
            array746[n745] |= 0x20;
            final byte[] array747 = expandedKey;
            final int n746 = 54;
            array747[n746] |= 0x20;
            final byte[] array748 = expandedKey;
            final int n747 = 61;
            array748[n747] |= 0x4;
            final byte[] array749 = expandedKey;
            final int n748 = 71;
            array749[n748] |= 0x4;
            final byte[] array750 = expandedKey;
            final int n749 = 77;
            array750[n749] |= 0x20;
            final byte[] array751 = expandedKey;
            final int n750 = 87;
            array751[n750] |= 0x1;
            final byte[] array752 = expandedKey;
            final int n751 = 94;
            array752[n751] |= 0x1;
            final byte[] array753 = expandedKey;
            final int n752 = 103;
            array753[n752] |= 0x2;
            final byte[] array754 = expandedKey;
            final int n753 = 109;
            array754[n753] |= 0x2;
            final byte[] array755 = expandedKey;
            final int n754 = 124;
            array755[n754] |= 0x8;
        }
        if ((b8 & 0x2) != 0x0) {
            final byte[] array756 = expandedKey;
            final int n755 = 6;
            array756[n755] |= 0x8;
            final byte[] array757 = expandedKey;
            final int n756 = 12;
            array757[n756] |= 0x20;
            final byte[] array758 = expandedKey;
            final int n757 = 22;
            array758[n757] |= 0x20;
            final byte[] array759 = expandedKey;
            final int n758 = 29;
            array759[n758] |= 0x4;
            final byte[] array760 = expandedKey;
            final int n759 = 38;
            array760[n759] |= 0x2;
            final byte[] array761 = expandedKey;
            final int n760 = 44;
            array761[n760] |= 0x10;
            final byte[] array762 = expandedKey;
            final int n761 = 53;
            array762[n761] |= 0x8;
            final byte[] array763 = expandedKey;
            final int n762 = 71;
            array763[n762] |= 0x2;
            final byte[] array764 = expandedKey;
            final int n763 = 77;
            array764[n763] |= 0x2;
            final byte[] array765 = expandedKey;
            final int n764 = 95;
            array765[n764] |= 0x8;
            final byte[] array766 = expandedKey;
            final int n765 = 102;
            array766[n765] |= 0x10;
            final byte[] array767 = expandedKey;
            final int n766 = 111;
            array767[n766] |= 0x20;
            final byte[] array768 = expandedKey;
            final int n767 = 117;
            array768[n767] |= 0x1;
            final byte[] array769 = expandedKey;
            final int n768 = 127;
            array769[n768] |= 0x10;
        }
        this.expandedKey = expandedKey;
    }
    
    static {
        s0p = new int[] { 4260096, 65536, 1077936128, 1078001920, 4194304, 1073807616, 1073807360, 1077936128, 1073807616, 4260096, 4259840, 1073742080, 1077936384, 4194304, 0, 1073807360, 65536, 1073741824, 4194560, 65792, 1078001920, 4259840, 1073742080, 4194560, 1073741824, 256, 65792, 1078001664, 256, 1077936384, 1078001664, 0, 0, 1078001920, 4194560, 1073807360, 4260096, 65536, 1073742080, 4194560, 1078001664, 256, 65792, 1077936128, 1073807616, 1073741824, 1077936128, 4259840, 1078001920, 65792, 4259840, 1077936384, 4194304, 1073742080, 1073807360, 0, 65536, 4194304, 1077936384, 4260096, 1073741824, 1078001664, 256, 1073807616 };
        s1p = new int[] { 134352898, 0, 135168, 134348800, 134217730, 4098, 134221824, 135168, 4096, 134348802, 2, 134221824, 131074, 134352896, 134348800, 2, 131072, 134221826, 134348802, 4096, 135170, 134217728, 0, 131074, 134221826, 135170, 134352896, 134217730, 134217728, 131072, 4098, 134352898, 131074, 134352896, 134221824, 135170, 134352898, 131074, 134217730, 0, 134217728, 4098, 131072, 134348802, 4096, 134217728, 135170, 134221826, 134352896, 4096, 0, 134217730, 2, 134352898, 135168, 134348800, 134348802, 131072, 4098, 134221824, 134221826, 2, 134348800, 135168 };
        s2p = new int[] { 545259520, 8421408, 32, 545259552, 536903680, 8388608, 545259552, 32800, 8388640, 32768, 8421376, 536870912, 545292320, 536870944, 536870912, 545292288, 0, 536903680, 8421408, 32, 536870944, 545292320, 32768, 545259520, 545292288, 8388640, 536903712, 8421376, 32800, 0, 8388608, 536903712, 8421408, 32, 536870912, 32768, 536870944, 536903680, 8421376, 545259552, 0, 8421408, 32800, 545292288, 536903680, 8388608, 545292320, 536870912, 536903712, 545259520, 8388608, 545292320, 32768, 8388640, 545259552, 32800, 8388640, 0, 545292288, 536870944, 545259520, 536903712, 32, 8421376 };
        s3p = new int[] { 524801, 33554944, 1, 34079233, 0, 34078720, 33554945, 524289, 34079232, 33554433, 33554432, 513, 33554433, 524801, 524288, 33554432, 34078721, 524800, 512, 1, 524800, 33554945, 34078720, 512, 513, 0, 524289, 34079232, 33554944, 34078721, 34079233, 524288, 34078721, 513, 524288, 33554433, 524800, 33554944, 1, 34078720, 33554945, 0, 512, 524289, 0, 34078721, 34079232, 512, 33554432, 34079233, 524801, 524288, 34079233, 1, 33554944, 524801, 524289, 524800, 34078720, 33554945, 513, 33554432, 33554433, 34079232 };
        s4p = new int[] { 16777216, 8192, 128, 16785540, 16785412, 16777344, 8324, 16785408, 8192, 4, 16777220, 8320, 16777348, 16785412, 16785536, 0, 8320, 16777216, 8196, 132, 16777344, 8324, 0, 16777220, 4, 16777348, 16785540, 8196, 16785408, 128, 132, 16785536, 16785536, 16777348, 8196, 16785408, 8192, 4, 16777220, 16777344, 16777216, 8320, 16785540, 0, 8324, 16777216, 128, 8196, 16777348, 128, 0, 16785540, 16785412, 16785536, 132, 8192, 8320, 16785412, 16777344, 132, 4, 8324, 16785408, 16777220 };
        s5p = new int[] { 268435464, 262152, 0, 268698624, 262152, 1024, 268436488, 262144, 1032, 268698632, 263168, 268435456, 268436480, 268435464, 268697600, 263176, 262144, 268436488, 268697608, 0, 1024, 8, 268698624, 268697608, 268698632, 268697600, 268435456, 1032, 8, 263168, 263176, 268436480, 1032, 268435456, 268436480, 263176, 268698624, 262152, 0, 268436480, 268435456, 1024, 268697608, 262144, 262152, 268698632, 263168, 8, 268698632, 263168, 262144, 268436488, 268435464, 268697600, 263176, 0, 1024, 268435464, 268436488, 268698624, 268697600, 1032, 8, 268697608 };
        s6p = new int[] { 2048, 64, 2097216, -2145386496, -2145384384, -2147481600, 2112, 0, 2097152, -2145386432, -2147483584, 2099200, Integer.MIN_VALUE, 2099264, 2099200, -2147483584, -2145386432, 2048, -2147481600, -2145384384, 0, 2097216, -2145386496, 2112, -2145384448, -2147481536, 2099264, Integer.MIN_VALUE, -2147481536, -2145384448, 64, 2097152, -2147481536, 2099200, -2145384448, -2147483584, 2048, 64, 2097152, -2145384448, -2145386432, -2147481536, 2112, 0, 64, -2145386496, Integer.MIN_VALUE, 2097216, 0, -2145386432, 2097216, 2112, -2147483584, 2048, -2145384384, 2097152, 2099264, Integer.MIN_VALUE, -2147481600, -2145384384, -2145386496, 2099264, 2099200, -2147481600 };
        s7p = new int[] { 68157456, 68173824, 16400, 0, 67125248, 1048592, 68157440, 68173840, 16, 67108864, 1064960, 16400, 1064976, 67125264, 67108880, 68157440, 16384, 1064976, 1048592, 67125248, 68173840, 67108880, 0, 1064960, 67108864, 1048576, 67125264, 68157456, 1048576, 16384, 68173824, 16, 1048576, 16384, 67108880, 68173840, 16400, 67108864, 0, 1064960, 68157456, 67125264, 67125248, 1048592, 68173824, 16, 1048592, 67125248, 68173840, 1048576, 68157440, 67108880, 1064960, 16400, 67125264, 68157440, 16, 68173824, 1064976, 0, 67108864, 68157456, 16384, 1064976 };
        permRight0 = new int[] { 0, 1073741824, 4194304, 1077936128, 16384, 1073758208, 4210688, 1077952512, 64, 1073741888, 4194368, 1077936192, 16448, 1073758272, 4210752, 1077952576 };
        permLeft1 = new int[] { 0, 1073741824, 4194304, 1077936128, 16384, 1073758208, 4210688, 1077952512, 64, 1073741888, 4194368, 1077936192, 16448, 1073758272, 4210752, 1077952576 };
        permRight2 = new int[] { 0, 268435456, 1048576, 269484032, 4096, 268439552, 1052672, 269488128, 16, 268435472, 1048592, 269484048, 4112, 268439568, 1052688, 269488144 };
        permLeft3 = new int[] { 0, 268435456, 1048576, 269484032, 4096, 268439552, 1052672, 269488128, 16, 268435472, 1048592, 269484048, 4112, 268439568, 1052688, 269488144 };
        permRight4 = new int[] { 0, 67108864, 262144, 67371008, 1024, 67109888, 263168, 67372032, 4, 67108868, 262148, 67371012, 1028, 67109892, 263172, 67372036 };
        permLeft5 = new int[] { 0, 67108864, 262144, 67371008, 1024, 67109888, 263168, 67372032, 4, 67108868, 262148, 67371012, 1028, 67109892, 263172, 67372036 };
        permRight6 = new int[] { 0, 16777216, 65536, 16842752, 256, 16777472, 65792, 16843008, 1, 16777217, 65537, 16842753, 257, 16777473, 65793, 16843009 };
        permLeft7 = new int[] { 0, 16777216, 65536, 16842752, 256, 16777472, 65792, 16843008, 1, 16777217, 65537, 16842753, 257, 16777473, 65793, 16843009 };
        permRight8 = new int[] { 0, Integer.MIN_VALUE, 8388608, -2139095040, 32768, -2147450880, 8421376, -2139062272, 128, -2147483520, 8388736, -2139094912, 32896, -2147450752, 8421504, -2139062144 };
        permLeft9 = new int[] { 0, Integer.MIN_VALUE, 8388608, -2139095040, 32768, -2147450880, 8421376, -2139062272, 128, -2147483520, 8388736, -2139094912, 32896, -2147450752, 8421504, -2139062144 };
        permRightA = new int[] { 0, 536870912, 2097152, 538968064, 8192, 536879104, 2105344, 538976256, 32, 536870944, 2097184, 538968096, 8224, 536879136, 2105376, 538976288 };
        permLeftB = new int[] { 0, 536870912, 2097152, 538968064, 8192, 536879104, 2105344, 538976256, 32, 536870944, 2097184, 538968096, 8224, 536879136, 2105376, 538976288 };
        permRightC = new int[] { 0, 134217728, 524288, 134742016, 2048, 134219776, 526336, 134744064, 8, 134217736, 524296, 134742024, 2056, 134219784, 526344, 134744072 };
        permLeftD = new int[] { 0, 134217728, 524288, 134742016, 2048, 134219776, 526336, 134744064, 8, 134217736, 524296, 134742024, 2056, 134219784, 526344, 134744072 };
        permRightE = new int[] { 0, 33554432, 131072, 33685504, 512, 33554944, 131584, 33686016, 2, 33554434, 131074, 33685506, 514, 33554946, 131586, 33686018 };
        permLeftF = new int[] { 0, 33554432, 131072, 33685504, 512, 33554944, 131584, 33686016, 2, 33554434, 131074, 33685506, 514, 33554946, 131586, 33686018 };
        initPermLeft0 = new int[] { 0, 32768, 0, 32768, 128, 32896, 128, 32896, 0, 32768, 0, 32768, 128, 32896, 128, 32896 };
        initPermRight0 = new int[] { 0, 0, 32768, 32768, 0, 0, 32768, 32768, 128, 128, 32896, 32896, 128, 128, 32896, 32896 };
        initPermLeft1 = new int[] { 0, Integer.MIN_VALUE, 0, Integer.MIN_VALUE, 8388608, -2139095040, 8388608, -2139095040, 0, Integer.MIN_VALUE, 0, Integer.MIN_VALUE, 8388608, -2139095040, 8388608, -2139095040 };
        initPermRight1 = new int[] { 0, 0, Integer.MIN_VALUE, Integer.MIN_VALUE, 0, 0, Integer.MIN_VALUE, Integer.MIN_VALUE, 8388608, 8388608, -2139095040, -2139095040, 8388608, 8388608, -2139095040, -2139095040 };
        initPermLeft2 = new int[] { 0, 16384, 0, 16384, 64, 16448, 64, 16448, 0, 16384, 0, 16384, 64, 16448, 64, 16448 };
        initPermRight2 = new int[] { 0, 0, 16384, 16384, 0, 0, 16384, 16384, 64, 64, 16448, 16448, 64, 64, 16448, 16448 };
        initPermLeft3 = new int[] { 0, 1073741824, 0, 1073741824, 4194304, 1077936128, 4194304, 1077936128, 0, 1073741824, 0, 1073741824, 4194304, 1077936128, 4194304, 1077936128 };
        initPermRight3 = new int[] { 0, 0, 1073741824, 1073741824, 0, 0, 1073741824, 1073741824, 4194304, 4194304, 1077936128, 1077936128, 4194304, 4194304, 1077936128, 1077936128 };
        initPermLeft4 = new int[] { 0, 8192, 0, 8192, 32, 8224, 32, 8224, 0, 8192, 0, 8192, 32, 8224, 32, 8224 };
        initPermRight4 = new int[] { 0, 0, 8192, 8192, 0, 0, 8192, 8192, 32, 32, 8224, 8224, 32, 32, 8224, 8224 };
        initPermLeft5 = new int[] { 0, 536870912, 0, 536870912, 2097152, 538968064, 2097152, 538968064, 0, 536870912, 0, 536870912, 2097152, 538968064, 2097152, 538968064 };
        initPermRight5 = new int[] { 0, 0, 536870912, 536870912, 0, 0, 536870912, 536870912, 2097152, 2097152, 538968064, 538968064, 2097152, 2097152, 538968064, 538968064 };
        initPermLeft6 = new int[] { 0, 4096, 0, 4096, 16, 4112, 16, 4112, 0, 4096, 0, 4096, 16, 4112, 16, 4112 };
        initPermRight6 = new int[] { 0, 0, 4096, 4096, 0, 0, 4096, 4096, 16, 16, 4112, 4112, 16, 16, 4112, 4112 };
        initPermLeft7 = new int[] { 0, 268435456, 0, 268435456, 1048576, 269484032, 1048576, 269484032, 0, 268435456, 0, 268435456, 1048576, 269484032, 1048576, 269484032 };
        initPermRight7 = new int[] { 0, 0, 268435456, 268435456, 0, 0, 268435456, 268435456, 1048576, 1048576, 269484032, 269484032, 1048576, 1048576, 269484032, 269484032 };
        initPermLeft8 = new int[] { 0, 2048, 0, 2048, 8, 2056, 8, 2056, 0, 2048, 0, 2048, 8, 2056, 8, 2056 };
        initPermRight8 = new int[] { 0, 0, 2048, 2048, 0, 0, 2048, 2048, 8, 8, 2056, 2056, 8, 8, 2056, 2056 };
        initPermLeft9 = new int[] { 0, 134217728, 0, 134217728, 524288, 134742016, 524288, 134742016, 0, 134217728, 0, 134217728, 524288, 134742016, 524288, 134742016 };
        initPermRight9 = new int[] { 0, 0, 134217728, 134217728, 0, 0, 134217728, 134217728, 524288, 524288, 134742016, 134742016, 524288, 524288, 134742016, 134742016 };
        initPermLeftA = new int[] { 0, 1024, 0, 1024, 4, 1028, 4, 1028, 0, 1024, 0, 1024, 4, 1028, 4, 1028 };
        initPermRightA = new int[] { 0, 0, 1024, 1024, 0, 0, 1024, 1024, 4, 4, 1028, 1028, 4, 4, 1028, 1028 };
        initPermLeftB = new int[] { 0, 67108864, 0, 67108864, 262144, 67371008, 262144, 67371008, 0, 67108864, 0, 67108864, 262144, 67371008, 262144, 67371008 };
        initPermRightB = new int[] { 0, 0, 67108864, 67108864, 0, 0, 67108864, 67108864, 262144, 262144, 67371008, 67371008, 262144, 262144, 67371008, 67371008 };
        initPermLeftC = new int[] { 0, 512, 0, 512, 2, 514, 2, 514, 0, 512, 0, 512, 2, 514, 2, 514 };
        initPermRightC = new int[] { 0, 0, 512, 512, 0, 0, 512, 512, 2, 2, 514, 514, 2, 2, 514, 514 };
        initPermLeftD = new int[] { 0, 33554432, 0, 33554432, 131072, 33685504, 131072, 33685504, 0, 33554432, 0, 33554432, 131072, 33685504, 131072, 33685504 };
        initPermRightD = new int[] { 0, 0, 33554432, 33554432, 0, 0, 33554432, 33554432, 131072, 131072, 33685504, 33685504, 131072, 131072, 33685504, 33685504 };
        initPermLeftE = new int[] { 0, 256, 0, 256, 1, 257, 1, 257, 0, 256, 0, 256, 1, 257, 1, 257 };
        initPermRightE = new int[] { 0, 0, 256, 256, 0, 0, 256, 256, 1, 1, 257, 257, 1, 1, 257, 257 };
        initPermLeftF = new int[] { 0, 16777216, 0, 16777216, 65536, 16842752, 65536, 16842752, 0, 16777216, 0, 16777216, 65536, 16842752, 65536, 16842752 };
        initPermRightF = new int[] { 0, 0, 16777216, 16777216, 0, 0, 16777216, 16777216, 65536, 65536, 16842752, 16842752, 65536, 65536, 16842752, 16842752 };
    }
}
