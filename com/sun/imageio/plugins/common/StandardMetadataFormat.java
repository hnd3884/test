package com.sun.imageio.plugins.common;

import javax.imageio.ImageTypeSpecifier;
import java.util.List;
import java.util.ArrayList;
import javax.imageio.metadata.IIOMetadataFormatImpl;

public class StandardMetadataFormat extends IIOMetadataFormatImpl
{
    private void addSingleAttributeElement(final String s, final String s2, final int n) {
        this.addElement(s, s2, 0);
        this.addAttribute(s, "value", n, true, null);
    }
    
    public StandardMetadataFormat() {
        super("javax_imageio_1.0", 2);
        this.addElement("Chroma", "javax_imageio_1.0", 2);
        this.addElement("ColorSpaceType", "Chroma", 0);
        final ArrayList list = new ArrayList();
        list.add("XYZ");
        list.add("Lab");
        list.add("Luv");
        list.add("YCbCr");
        list.add("Yxy");
        list.add("YCCK");
        list.add("PhotoYCC");
        list.add("RGB");
        list.add("GRAY");
        list.add("HSV");
        list.add("HLS");
        list.add("CMYK");
        list.add("CMY");
        list.add("2CLR");
        list.add("3CLR");
        list.add("4CLR");
        list.add("5CLR");
        list.add("6CLR");
        list.add("7CLR");
        list.add("8CLR");
        list.add("9CLR");
        list.add("ACLR");
        list.add("BCLR");
        list.add("CCLR");
        list.add("DCLR");
        list.add("ECLR");
        list.add("FCLR");
        this.addAttribute("ColorSpaceType", "name", 0, true, null, list);
        this.addElement("NumChannels", "Chroma", 0);
        this.addAttribute("NumChannels", "value", 2, true, 0, Integer.MAX_VALUE);
        this.addElement("Gamma", "Chroma", 0);
        this.addAttribute("Gamma", "value", 3, true, null);
        this.addElement("BlackIsZero", "Chroma", 0);
        this.addBooleanAttribute("BlackIsZero", "value", true, true);
        this.addElement("Palette", "Chroma", 0, Integer.MAX_VALUE);
        this.addElement("PaletteEntry", "Palette", 0);
        this.addAttribute("PaletteEntry", "index", 2, true, null);
        this.addAttribute("PaletteEntry", "red", 2, true, null);
        this.addAttribute("PaletteEntry", "green", 2, true, null);
        this.addAttribute("PaletteEntry", "blue", 2, true, null);
        this.addAttribute("PaletteEntry", "alpha", 2, false, "255");
        this.addElement("BackgroundIndex", "Chroma", 0);
        this.addAttribute("BackgroundIndex", "value", 2, true, null);
        this.addElement("BackgroundColor", "Chroma", 0);
        this.addAttribute("BackgroundColor", "red", 2, true, null);
        this.addAttribute("BackgroundColor", "green", 2, true, null);
        this.addAttribute("BackgroundColor", "blue", 2, true, null);
        this.addElement("Compression", "javax_imageio_1.0", 2);
        this.addSingleAttributeElement("CompressionTypeName", "Compression", 0);
        this.addElement("Lossless", "Compression", 0);
        this.addBooleanAttribute("Lossless", "value", true, true);
        this.addSingleAttributeElement("NumProgressiveScans", "Compression", 2);
        this.addSingleAttributeElement("BitRate", "Compression", 3);
        this.addElement("Data", "javax_imageio_1.0", 2);
        this.addElement("PlanarConfiguration", "Data", 0);
        final ArrayList list2 = new ArrayList();
        list2.add("PixelInterleaved");
        list2.add("PlaneInterleaved");
        list2.add("LineInterleaved");
        list2.add("TileInterleaved");
        this.addAttribute("PlanarConfiguration", "value", 0, true, null, list2);
        this.addElement("SampleFormat", "Data", 0);
        final ArrayList list3 = new ArrayList();
        list3.add("SignedIntegral");
        list3.add("UnsignedIntegral");
        list3.add("Real");
        list3.add("Index");
        this.addAttribute("SampleFormat", "value", 0, true, null, list3);
        this.addElement("BitsPerSample", "Data", 0);
        this.addAttribute("BitsPerSample", "value", 2, true, 1, Integer.MAX_VALUE);
        this.addElement("SignificantBitsPerSample", "Data", 0);
        this.addAttribute("SignificantBitsPerSample", "value", 2, true, 1, Integer.MAX_VALUE);
        this.addElement("SampleMSB", "Data", 0);
        this.addAttribute("SampleMSB", "value", 2, true, 1, Integer.MAX_VALUE);
        this.addElement("Dimension", "javax_imageio_1.0", 2);
        this.addSingleAttributeElement("PixelAspectRatio", "Dimension", 3);
        this.addElement("ImageOrientation", "Dimension", 0);
        final ArrayList list4 = new ArrayList();
        list4.add("Normal");
        list4.add("Rotate90");
        list4.add("Rotate180");
        list4.add("Rotate270");
        list4.add("FlipH");
        list4.add("FlipV");
        list4.add("FlipHRotate90");
        list4.add("FlipVRotate90");
        this.addAttribute("ImageOrientation", "value", 0, true, null, list4);
        this.addSingleAttributeElement("HorizontalPixelSize", "Dimension", 3);
        this.addSingleAttributeElement("VerticalPixelSize", "Dimension", 3);
        this.addSingleAttributeElement("HorizontalPhysicalPixelSpacing", "Dimension", 3);
        this.addSingleAttributeElement("VerticalPhysicalPixelSpacing", "Dimension", 3);
        this.addSingleAttributeElement("HorizontalPosition", "Dimension", 3);
        this.addSingleAttributeElement("VerticalPosition", "Dimension", 3);
        this.addSingleAttributeElement("HorizontalPixelOffset", "Dimension", 2);
        this.addSingleAttributeElement("VerticalPixelOffset", "Dimension", 2);
        this.addSingleAttributeElement("HorizontalScreenSize", "Dimension", 2);
        this.addSingleAttributeElement("VerticalScreenSize", "Dimension", 2);
        this.addElement("Document", "javax_imageio_1.0", 2);
        this.addElement("FormatVersion", "Document", 0);
        this.addAttribute("FormatVersion", "value", 0, true, null);
        this.addElement("SubimageInterpretation", "Document", 0);
        final ArrayList list5 = new ArrayList();
        list5.add("Standalone");
        list5.add("SinglePage");
        list5.add("FullResolution");
        list5.add("ReducedResolution");
        list5.add("PyramidLayer");
        list5.add("Preview");
        list5.add("VolumeSlice");
        list5.add("ObjectView");
        list5.add("Panorama");
        list5.add("AnimationFrame");
        list5.add("TransparencyMask");
        list5.add("CompositingLayer");
        list5.add("SpectralSlice");
        list5.add("Unknown");
        this.addAttribute("SubimageInterpretation", "value", 0, true, null, list5);
        this.addElement("ImageCreationTime", "Document", 0);
        this.addAttribute("ImageCreationTime", "year", 2, true, null);
        this.addAttribute("ImageCreationTime", "month", 2, true, null, "1", "12", true, true);
        this.addAttribute("ImageCreationTime", "day", 2, true, null, "1", "31", true, true);
        this.addAttribute("ImageCreationTime", "hour", 2, false, "0", "0", "23", true, true);
        this.addAttribute("ImageCreationTime", "minute", 2, false, "0", "0", "59", true, true);
        this.addAttribute("ImageCreationTime", "second", 2, false, "0", "0", "60", true, true);
        this.addElement("ImageModificationTime", "Document", 0);
        this.addAttribute("ImageModificationTime", "year", 2, true, null);
        this.addAttribute("ImageModificationTime", "month", 2, true, null, "1", "12", true, true);
        this.addAttribute("ImageModificationTime", "day", 2, true, null, "1", "31", true, true);
        this.addAttribute("ImageModificationTime", "hour", 2, false, "0", "0", "23", true, true);
        this.addAttribute("ImageModificationTime", "minute", 2, false, "0", "0", "59", true, true);
        this.addAttribute("ImageModificationTime", "second", 2, false, "0", "0", "60", true, true);
        this.addElement("Text", "javax_imageio_1.0", 0, Integer.MAX_VALUE);
        this.addElement("TextEntry", "Text", 0);
        this.addAttribute("TextEntry", "keyword", 0, false, null);
        this.addAttribute("TextEntry", "value", 0, true, null);
        this.addAttribute("TextEntry", "language", 0, false, null);
        this.addAttribute("TextEntry", "encoding", 0, false, null);
        final ArrayList list6 = new ArrayList();
        list6.add("none");
        list6.add("lzw");
        list6.add("zip");
        list6.add("bzip");
        list6.add("other");
        this.addAttribute("TextEntry", "compression", 0, false, "none", list6);
        this.addElement("Transparency", "javax_imageio_1.0", 2);
        this.addElement("Alpha", "Transparency", 0);
        final ArrayList list7 = new ArrayList();
        list7.add("none");
        list7.add("premultiplied");
        list7.add("nonpremultiplied");
        this.addAttribute("Alpha", "value", 0, false, "none", list7);
        this.addSingleAttributeElement("TransparentIndex", "Transparency", 2);
        this.addElement("TransparentColor", "Transparency", 0);
        this.addAttribute("TransparentColor", "value", 2, true, 0, Integer.MAX_VALUE);
        this.addElement("TileTransparencies", "Transparency", 0, Integer.MAX_VALUE);
        this.addElement("TransparentTile", "TileTransparencies", 0);
        this.addAttribute("TransparentTile", "x", 2, true, null);
        this.addAttribute("TransparentTile", "y", 2, true, null);
        this.addElement("TileOpacities", "Transparency", 0, Integer.MAX_VALUE);
        this.addElement("OpaqueTile", "TileOpacities", 0);
        this.addAttribute("OpaqueTile", "x", 2, true, null);
        this.addAttribute("OpaqueTile", "y", 2, true, null);
    }
    
    @Override
    public boolean canNodeAppear(final String s, final ImageTypeSpecifier imageTypeSpecifier) {
        return true;
    }
}
