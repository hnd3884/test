package com.adventnet.swissqlapi.sql.functions.reports;

import java.util.Vector;
import com.adventnet.swissqlapi.sql.statement.select.SelectColumn;
import com.adventnet.swissqlapi.sql.exception.ConvertException;
import com.adventnet.swissqlapi.sql.statement.select.SelectQueryStatement;
import com.adventnet.swissqlapi.sql.functions.FunctionCalls;

public class startWeek extends FunctionCalls
{
    @Override
    public void toTeradata(final SelectQueryStatement to_sqs, final SelectQueryStatement from_sqs) throws ConvertException {
    }
    
    @Override
    public void toVectorWise(final SelectQueryStatement to_sqs, final SelectQueryStatement from_sqs) throws ConvertException {
        final StringBuffer[] argu = new StringBuffer[3];
        for (int i_count = 0; i_count < this.functionArguments.size(); ++i_count) {
            argu[i_count] = new StringBuffer();
            if (this.functionArguments.elementAt(i_count) instanceof SelectColumn) {
                argu[i_count].append(this.functionArguments.elementAt(i_count).toVectorWiseSelect(to_sqs, from_sqs));
            }
            else {
                argu[i_count].append(this.functionArguments.elementAt(i_count));
            }
        }
        String qry = "";
        if (this.functionName.getColumnName().equalsIgnoreCase("ZR_WeekYearDtNwkStrtDay")) {
            qry = "cast(  CASE    WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR(" + (Object)argu[0] + "), '-01-01'))+5),7) + " + (Object)argu[1] + "), 7) -3) * - 1  >= DAYOFYEAR(" + (Object)argu[0] + ") THEN CONCAT(YEAR(" + (Object)argu[0] + ") -1, SUBSTRING((100 + CEILING(((MOD((mod(int(dayofweek(CONCAT(YEAR(" + (Object)argu[0] + ") -1, '-01-01'))+5),7) + " + (Object)argu[1] + "), 7) -3) + DAYOFYEAR(CONCAT(YEAR(" + (Object)argu[0] + ") -1, '-12-31')) + DAYOFYEAR(" + (Object)argu[0] + ")) / (if(7=0,null,7)*1.0))), 2))    ELSE     CASE      WHEN (DAYOFYEAR(" + (Object)argu[0] + ") + (MOD((mod(int(dayofweek(CONCAT(YEAR(" + (Object)argu[0] + "), '-01-01'))+5),7) + " + (Object)argu[1] + "), 7) -3))  > 364 THEN       CASE        WHEN ((DAYOFYEAR(CONCAT(YEAR(" + (Object)argu[0] + "), '-12-31')) + (MOD((mod(int(dayofweek(CONCAT(YEAR(" + (Object)argu[0] + "), '-01-01'))+5),7) + " + (Object)argu[1] + "), 7) -3)) -364)  > 3 THEN CONCAT(YEAR(" + (Object)argu[0] + "), '53')        ELSE CONCAT(YEAR(" + (Object)argu[0] + ") + 1, '01')       END      ELSE CONCAT(YEAR(" + (Object)argu[0] + "), SUBSTRING((100 + CEILING((DAYOFYEAR(" + (Object)argu[0] + ") + (MOD((mod(int(dayofweek(CONCAT(YEAR(" + (Object)argu[0] + "), '-01-01'))+5),7) + " + (Object)argu[1] + "), 7) -3)) / (if(7=0,null,7)*1.0))), 2)) END   END as INTEGER)";
        }
        else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_WeekDtNwkStrtDay")) {
            qry = "CAST(if((((mod(dayofweek(date(concat(year(date(" + (Object)argu[0] + ")),'-01-01')))+5+" + (Object)argu[1] + ",7)-3)*(-1)) >= doy(date(" + (Object)argu[0] + "))),(ceil(((mod(dayofweek(date(concat(year(date(" + (Object)argu[0] + ")),'-01-01')))+5+" + (Object)argu[1] + ",7)-3)+doy(date(concat((year(date(" + (Object)argu[0] + "))-1),'-12-31')))+doy(date(" + (Object)argu[0] + ")))/7.0)),(if(((doy(date(" + (Object)argu[0] + "))+(mod(dayofweek(date(concat(year(date(" + (Object)argu[0] + ")),'-01-01')))+5+" + (Object)argu[1] + ",7)-3))>364),(if(((doy(date(concat((year(date(" + (Object)argu[0] + "))-1),'-12-31')))+(mod(dayofweek(date(concat(year(date(" + (Object)argu[0] + ")),'-01-01')))+5+" + (Object)argu[1] + ",7)-3))-364) > 3,53,1)),(ceil((doy(date(" + (Object)argu[0] + "))+(mod(dayofweek(date(concat(year(date(" + (Object)argu[0] + ")),'-01-01')))+5+" + (Object)argu[1] + ",7)-3))/7.0))))) AS INTEGER)";
        }
        else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_WeekYearIntrvalNwkStrtDay")) {
            qry = "CAST(if((((mod(dayofweek(date(concat(year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000))),'-01-01')))+5+" + (Object)argu[1] + ",7)-3)*(-1)) >= doy(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000)))),concat(year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000)))-1,substring((100+ceil(((mod((dayofweek(date(concat(year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000)))-1,'-01-01')))+5+" + (Object)argu[1] + "),7)-3)+doy(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000))))/7.0)),2)),if((doy(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000)))+(mod((dayofweek(date(concat(year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000)))-1,'-01-01')))+5+" + (Object)argu[1] + "),7)-3))>364,if(((doy(date(concat((year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000)))-1),'-12-31')))+(mod((dayofweek(date(concat(year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000)))-1,'-01-01')))+" + (Object)argu[1] + "),7)-3))-364)>3,concat(year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000))),'53') , concat(year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000))+1),'01')),concat(year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000)))-1,substring((100+ceil(((mod((dayofweek(date(concat(year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000)))-1,'-01-01')))+5+" + (Object)argu[1] + "),7)-3)+doy(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000))))/7.0)),2)))) AS INTEGER)";
        }
        else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_WeekIntrvalNwkStrtDay")) {
            qry = "CAST(if((((mod(dayofweek(date(concat(year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000))),'-01-01')))+5+" + (Object)argu[1] + ",7)-3)*(-1)) >= doy(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000)))),(ceil(((mod(dayofweek(date(concat(year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000))),'-01-01')))+5+" + (Object)argu[1] + ",7)-3)+doy(date(concat((year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000)))-1),'-12-31')))+doy(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000))))/7.0)),(if(((doy(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000)))+(mod(dayofweek(date(concat(year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000))),'-01-01')))+5+" + (Object)argu[1] + ",7)-3))>364),(if(((doy(date(concat((year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000)))-1),'-12-31')))+(mod(dayofweek(date(concat(year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000))),'-01-01')))+5+" + (Object)argu[1] + ",7)-3))-364) > 3,53,1)),(ceil((doy(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000)))+(mod(dayofweek(date(concat(year(date(from_unixtime(0)+interval '1' second * (" + (Object)argu[0] + "/1000))),'-01-01')))+5+" + (Object)argu[1] + ",7)-3))/7.0))))) AS INTEGER)";
        }
        else {
            qry = "";
        }
        this.functionName.setColumnName(qry);
        this.setOpenBracesForFunctionNameRequired(false);
        this.functionArguments = new Vector();
    }
    
    @Override
    public void toPostgreSQL(final SelectQueryStatement to_sqs, final SelectQueryStatement from_sqs) throws ConvertException {
        final Vector arguments = new Vector();
        for (int i_count = 0; i_count < this.functionArguments.size(); ++i_count) {
            if (this.functionArguments.elementAt(i_count) instanceof SelectColumn) {
                arguments.addElement(this.functionArguments.elementAt(i_count).toPostgreSQLSelect(to_sqs, from_sqs));
            }
            else {
                arguments.addElement(this.functionArguments.elementAt(i_count));
            }
        }
        this.setFunctionArguments(arguments);
        if (from_sqs != null && from_sqs.isAmazonRedShift()) {
            String qry = "";
            if (this.functionName.getColumnName().equalsIgnoreCase("ZR_WeekYearDtNwkStrtDay")) {
                qry = "cast(  CASE    WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3) * - 1  >=  cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) THEN (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || SUBSTRING((100 + CEIL(((MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3) +  cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) +  cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int)) / ((case when 7=0 then null else 7 end)*1.0))),2))    ELSE     CASE      WHEN ( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3))  > 364 THEN       CASE        WHEN (( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '-12-31')::DATE) as int) + (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3)) -364)  > 3 THEN (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '53')        ELSE (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  + 1 || '01')       END      ELSE (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || SUBSTRING((100 + CEIL(( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3)) / ((case when 7=0 then null else 7 end)*1.0))),2))     END   END as INTEGER) ";
            }
            else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_WeekDtNwkStrtDay")) {
                qry = "CAST((CASE      WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3) * - 1  >=  cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) THEN CEIL(((MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3) +  cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) +  cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int)) / ((case when 7=0 then null else 7 end)*1.0))      ELSE       CASE        WHEN ( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3))  > 364 THEN         CASE          WHEN (( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '-12-31')::DATE) as int) + (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3)) -364)  > 3 THEN 53          ELSE 1         END        ELSE CEIL(( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3)) / ((case when 7=0 then null else 7 end)*1.0))       END     END) AS INTEGER)";
            }
            else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_WeekYearIntrvalNwkStrtDay")) {
                qry = "cast(  CASE    WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3) * - 1  >=  cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) THEN (cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || SUBSTRING((100 + CEIL(((MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3) +  cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) +  cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int)) / ((case when 7=0 then null else 7 end)*1.0))),2))    ELSE     CASE      WHEN ( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3))  > 364 THEN       CASE        WHEN (( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || '-12-31')::DATE) as int) + (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3)) -364)  > 3 THEN (cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || '53')        ELSE (cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  + 1 || '01')       END      ELSE (cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || SUBSTRING((100 + CEIL(( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3)) / ((case when 7=0 then null else 7 end)*1.0))),2))     END   END as INTEGER)";
            }
            else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_WeekIntrvalNwkStrtDay")) {
                qry = "CAST((CASE      WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3) * - 1  >=  cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) THEN CEIL(((MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3) +  cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) +  cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int)) / ((case when 7=0 then null else 7 end)*1.0))      ELSE       CASE        WHEN ( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3))  > 364 THEN         CASE          WHEN (( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || '-12-31')::DATE) as int) + (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3)) -364)  > 3 THEN 53          ELSE 1         END        ELSE CEIL(( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || '-01-01')::DATE) as int) +6, 7) + " + arguments.get(1).toString() + "), 7) -3)) / ((case when 7=0 then null else 7 end)*1.0))       END     END) AS INTEGER) ";
            }
            this.functionName.setColumnName(qry);
            this.setOpenBracesForFunctionNameRequired(false);
            this.functionArguments = new Vector();
        }
    }
    
    @Override
    public void toMSSQLServer(final SelectQueryStatement to_sqs, final SelectQueryStatement from_sqs) throws ConvertException {
        final Vector arguments = new Vector();
        for (int i_count = 0; i_count < this.functionArguments.size(); ++i_count) {
            if (this.functionArguments.elementAt(i_count) instanceof SelectColumn) {
                arguments.addElement(this.functionArguments.elementAt(i_count).toMSSQLServerSelect(to_sqs, from_sqs));
            }
            else {
                arguments.addElement(this.functionArguments.elementAt(i_count));
            }
        }
        String qry = "";
        final String dateArg = arguments.get(0).toString();
        final String wkStartDay = arguments.get(1).toString();
        if (this.functionName.getColumnName().equalsIgnoreCase("ZR_WeekYearDtNwkStrtDay")) {
            qry = "CAST(CASE  WHEN (((((datepart(dw,concat(YEAR(" + dateArg + "), '-01-01'))+6)%7 + " + wkStartDay + ")) % ( 7 )) -3) * - 1  >= DATEPART(dy, " + dateArg + ") THEN CONCAT(YEAR(" + dateArg + ") -1, SUBSTRING(Cast((100 + CEILING((((( ((datepart(dw,concat(YEAR(" + dateArg + ") -1, '-01-01'))+6)%7 + " + wkStartDay + ") ) % ( 7 )) -3) + DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) + DATEPART(dy, " + dateArg + ")) / CONVERT(FLOAT, 7)))AS VARCHAR), 2, LEN((100 + CEILING((((( ((datepart(dw,concat(YEAR(" + dateArg + ") -1, '-01-01'))+6)%7 + " + wkStartDay + ") ) % ( 7 )) -3) + DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) + DATEPART(dy, " + dateArg + ")) / CONVERT(FLOAT, 7)))) -1))      ELSE       CASE        WHEN ((DATEPART(dy, " + dateArg + ") + ((( ((datepart(dw,concat(YEAR(" + dateArg + "), '-01-01'))+6)%7 + " + wkStartDay + ") ) % ( 7 )) -3))  > 364) THEN CASE  WHEN (((DATEPART(dy, concat(YEAR(" + dateArg + "), '-12-31')) + ((( ((datepart(dw,concat(YEAR(" + dateArg + "), '-01-01'))+6)%7 + " + wkStartDay + ") ) % ( 7 )) -3)) -364)  > 3) THEN CONCAT(YEAR(" + dateArg + "), '53')  ELSE CONCAT(YEAR(" + dateArg + ") + 1, '01') END    ELSE CONCAT(YEAR(" + dateArg + "), SUBSTRING(CAST((100 + CEILING((DATEPART(dy, " + dateArg + ") + ((( ((datepart(dw,concat(YEAR(" + dateArg + "), '-01-01'))+6)%7 + " + wkStartDay + ") ) % ( 7 )) -3)) / CONVERT(FLOAT, 7)))AS VARCHAR), 2, LEN((100 + CEILING((DATEPART(dy, " + dateArg + ") + ((( ((datepart(dw,concat(YEAR(" + dateArg + "), '-01-01'))+6)%7 + " + wkStartDay + ") ) % ( 7 )) -3)) / CONVERT(FLOAT, 7)))) -1))       END     END as BIGINT)";
        }
        else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_WeekDtNwkStrtDay")) {
            qry = "CASE  WHEN (((((datepart(dw,concat(YEAR(" + dateArg + "), '-01-01'))+6)%7 + " + wkStartDay + ")) % ( 7 )) -3) * - 1  >= DATEPART(dy, " + dateArg + ") THEN CEILING((((( ((datepart(dw,concat(YEAR(" + dateArg + ") -1, '-01-01'))+6)%7 + " + wkStartDay + ") ) % ( 7 )) -3) + DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) + DATEPART(dy, " + dateArg + ")) / CONVERT(FLOAT, 7))      ELSE       CASE        WHEN ((DATEPART(dy, " + dateArg + ") + ((( ((datepart(dw,concat(YEAR(" + dateArg + "), '-01-01'))+6)%7 + " + wkStartDay + ") ) % ( 7 )) -3))  > 364) THEN         CASE          WHEN (((DATEPART(dy, concat(YEAR(" + dateArg + "), '-12-31')) + ((( ((datepart(dw,concat(YEAR(" + dateArg + "), '-01-01'))+6)%7 + " + wkStartDay + ") ) % ( 7 )) -3)) -364)  > 3) THEN 53          ELSE 1         END        ELSE CEILING((DATEPART(dy, " + dateArg + ") + ((( ((datepart(dw,concat(YEAR(" + dateArg + "), '-01-01'))+6)%7 + " + wkStartDay + ") ) % ( 7 )) -3)) / CONVERT(FLOAT, 7)) END END";
        }
        this.functionName.setColumnName(qry);
        this.setOpenBracesForFunctionNameRequired(false);
        this.functionArguments = new Vector();
    }
}
