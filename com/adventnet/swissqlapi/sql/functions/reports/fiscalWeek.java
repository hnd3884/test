package com.adventnet.swissqlapi.sql.functions.reports;

import com.adventnet.swissqlapi.sql.exception.ConvertException;
import java.util.Vector;
import com.adventnet.swissqlapi.sql.statement.select.SelectColumn;
import com.adventnet.swissqlapi.sql.statement.select.SelectQueryStatement;
import com.adventnet.swissqlapi.sql.functions.FunctionCalls;

public class fiscalWeek extends FunctionCalls
{
    private static final int[] WEEKDAY_MAP;
    
    private static String getWeekDayYr(final int startDay, final String colName, final String startDate) {
        final int wkStartDay = fiscalWeek.WEEKDAY_MAP[startDay];
        String weekdayQry = "mod(int(dayofweek(CONCAT(YEAR(" + colName + "), '" + startDate + "'))+5),7)";
        if (wkStartDay != 0) {
            weekdayQry = "MOD((" + weekdayQry + "+" + wkStartDay + "),7)";
        }
        return weekdayQry;
    }
    
    private static String getWeekDayYrPrv(final int startDay, final String colName, final String startDate) {
        final int wkStartDay = fiscalWeek.WEEKDAY_MAP[startDay];
        String weekdayQry = "mod(int(dayofweek(CONCAT(YEAR(" + colName + ") -1, '" + startDate + "'))+5),7)";
        if (wkStartDay != 0) {
            weekdayQry = "MOD((" + weekdayQry + "+" + wkStartDay + "),7)";
        }
        return weekdayQry;
    }
    
    private static String getWeekDay(final int startDay, final String colName) {
        final int wkStartDay = fiscalWeek.WEEKDAY_MAP[startDay];
        String weekdayQry = "mod(int(dayofweek(" + colName + ")+5),7)";
        if (wkStartDay != 0) {
            weekdayQry = "MOD((" + weekdayQry + "+" + wkStartDay + "),7)";
        }
        return weekdayQry;
    }
    
    @Override
    public void toVectorWise(final SelectQueryStatement to_sqs, final SelectQueryStatement from_sqs) throws ConvertException {
        if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fweek")) {
            final StringBuffer[] argu = new StringBuffer[4];
            String qry = "";
            String startDate = "";
            for (int i_count = 0; i_count < this.functionArguments.size(); ++i_count) {
                argu[i_count] = new StringBuffer();
                if (this.functionArguments.elementAt(i_count) instanceof SelectColumn) {
                    argu[i_count].append(this.functionArguments.elementAt(i_count).toVectorWiseSelect(to_sqs, from_sqs));
                }
                else {
                    argu[i_count].append(this.functionArguments.elementAt(i_count));
                }
            }
            final int fYrAdd = argu[2].toString().equals("1") ? 100 : 0;
            startDate = ((Integer.parseInt(argu[1].toString()) < 10) ? ("-0" + (Object)argu[1] + "-01") : ("-" + (Object)argu[1] + "-01"));
            final int startDay = Integer.parseInt(argu[3].toString());
            final String weekQry = getWeekDay(Integer.parseInt(argu[3].toString()), argu[1].toString());
            final String colName = argu[0].toString().replaceAll("\"", "");
            qry = "CEILING((    CASE      WHEN MONTH(" + colName + ")  < " + (Object)argu[1] + " THEN       CASE        WHEN ((DAYOFYEAR(CONCAT(YEAR(" + colName + "), '" + startDate + "')) - DAYOFYEAR(" + colName + ")  < 7)        AND (" + getWeekDay(startDay, colName) + ")  < " + getWeekDayYr(startDay, colName, startDate) + ") THEN         CASE          WHEN (" + getWeekDayYr(startDay, colName, startDate) + "  < 4) THEN 1          ELSE           CASE            WHEN (" + getWeekDayYrPrv(startDay, colName, startDate) + "  < 4) THEN (DAYOFYEAR(" + colName + ") + DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '" + startDate + "')) + 1 + " + getWeekDayYrPrv(startDay, colName, startDate) + ")            ELSE (DAYOFYEAR(" + colName + ") + DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '" + startDate + "')) + 1 -(7 -" + getWeekDayYrPrv(startDay, colName, startDate) + "))           END         END        ELSE         CASE          WHEN (" + getWeekDayYrPrv(startDay, colName, startDate) + "  < 4) THEN (DAYOFYEAR(" + colName + ") + DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '" + startDate + "')) + 1 + " + getWeekDayYrPrv(startDay, colName, startDate) + ")          ELSE (DAYOFYEAR(" + colName + ") + DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '" + startDate + "')) + 1 -(7 -" + getWeekDayYrPrv(startDay, colName, startDate) + "))         END       END      ELSE       CASE        WHEN ((DAYOFYEAR(" + colName + ") - DAYOFYEAR(CONCAT(YEAR(" + colName + "), '" + startDate + "'))  < 7)        AND (" + getWeekDay(startDay, colName) + "  >= " + getWeekDayYr(startDay, colName, startDate) + ")) THEN         CASE          WHEN (" + getWeekDayYr(startDay, colName, startDate) + "  < 4) THEN 1          ELSE           CASE            WHEN (" + getWeekDayYrPrv(startDay, colName, startDate) + "  < 4) THEN (DAYOFYEAR(" + colName + ") + DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '" + startDate + "')) + 1 + " + getWeekDayYrPrv(startDay, colName, startDate) + " )           ELSE (DAYOFYEAR(" + colName + ") + DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '" + startDate + "')) + 1 -(7 -" + getWeekDayYrPrv(startDay, colName, startDate) + ") )          END         END        ELSE         CASE          WHEN (" + getWeekDayYr(startDay, colName, startDate) + "  < 4) THEN ((DAYOFYEAR(" + colName + ") -DAYOFYEAR(CONCAT(YEAR(" + colName + "), '" + startDate + "')) + 1) + " + getWeekDayYr(startDay, colName, startDate) + "  )        ELSE ((DAYOFYEAR(" + colName + ") -DAYOFYEAR(CONCAT(YEAR(" + colName + "), '" + startDate + "')) + 1) -(7 -" + getWeekDayYr(startDay, colName, startDate) + "  ))       END       END     END) / 7.0) ";
            this.functionName.setColumnName(qry);
            this.setOpenBracesForFunctionNameRequired(false);
            this.functionArguments = new Vector();
        }
        else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fweekyear")) {
            final StringBuffer[] argu = new StringBuffer[4];
            String qry2 = "";
            String startDate = "";
            for (int i_count = 0; i_count < this.functionArguments.size(); ++i_count) {
                argu[i_count] = new StringBuffer();
                if (this.functionArguments.elementAt(i_count) instanceof SelectColumn) {
                    argu[i_count].append(this.functionArguments.elementAt(i_count).toVectorWiseSelect(to_sqs, from_sqs));
                }
                else {
                    argu[i_count].append(this.functionArguments.elementAt(i_count));
                }
            }
            int fYrAdd2 = argu[2].toString().equals("1") ? 100 : 0;
            startDate = ((Integer.parseInt(argu[1].toString()) < 10) ? ("-0" + (Object)argu[1] + "-01") : ("-" + (Object)argu[1] + "-01"));
            final int startDay = Integer.parseInt(argu[3].toString());
            final String weekQry = getWeekDay(Integer.parseInt(argu[3].toString()), argu[1].toString());
            final String colName = argu[0].toString().replaceAll("\"", "");
            fYrAdd2 = (argu[2].toString().equals("1") ? 100 : 0);
            qry2 = "cast(CEILING(CASE    WHEN MONTH(" + colName + ")  < " + (Object)argu[1] + " THEN     CASE      WHEN ((DAYOFYEAR(CONCAT(YEAR(" + colName + "), '" + startDate + "')) - DAYOFYEAR(" + colName + ")  < 7)      AND (" + getWeekDay(startDay, colName) + "  < " + getWeekDayYr(startDay, colName, startDate) + ")) THEN       CASE        WHEN (" + getWeekDayYr(startDay, colName, startDate) + "  < 4) THEN CONCAT(YEAR(" + colName + "), '01')        ELSE         CASE          WHEN (" + getWeekDayYrPrv(startDay, colName, startDate) + "  < 4) THEN CONCAT(YEAR(" + colName + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '" + startDate + "')) + 1 + " + getWeekDayYrPrv(startDay, colName, startDate) + "))) / 7.0)), 2))          ELSE CONCAT(YEAR(" + colName + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '" + startDate + "')) + 1 -(7 -" + getWeekDayYrPrv(startDay, colName, startDate) + ")))) / 7.0)), 2))         END       END      ELSE       CASE        WHEN (" + getWeekDayYrPrv(startDay, colName, startDate) + "  < 4) THEN CONCAT(YEAR(" + colName + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '" + startDate + "')) + 1 + " + getWeekDayYrPrv(startDay, colName, startDate) + "))) / 7.0)), 2))        ELSE CONCAT(YEAR(" + colName + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '" + startDate + "')) + 1 -(7 -" + getWeekDayYrPrv(startDay, colName, startDate) + ")))) / 7.0)), 2))       END     END    ELSE     CASE      WHEN ((DAYOFYEAR(" + colName + ") - DAYOFYEAR(CONCAT(YEAR(" + colName + "), '" + startDate + "'))  < 7)      AND (" + getWeekDay(startDay, colName) + "  >= " + getWeekDayYr(startDay, colName, startDate) + ")) THEN       CASE        WHEN (" + getWeekDayYr(startDay, colName, startDate) + "  < 4) THEN CONCAT(YEAR(" + colName + "), '01')        ELSE         CASE          WHEN (" + getWeekDayYrPrv(startDay, colName, startDate) + "  < 4) THEN CONCAT(YEAR(" + colName + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '" + startDate + "')) + 1 + " + getWeekDayYrPrv(startDay, colName, startDate) + "))) / 7.0)), 2))          ELSE CONCAT(YEAR(" + colName + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName + ") -1, '" + startDate + "')) + 1 -(7 -" + getWeekDayYrPrv(startDay, colName, startDate) + ")))) / 7.0)), 2))         END       END      ELSE       CASE        WHEN (" + getWeekDayYr(startDay, colName, startDate) + "  < 4) THEN CONCAT(YEAR(" + colName + "), SUBSTRING((100 + CEILING((((DAYOFYEAR(" + colName + ") -DAYOFYEAR(CONCAT(YEAR(" + colName + "), '" + startDate + "')) + 1) + " + getWeekDayYr(startDay, colName, startDate) + ")) / 7.0)), 2))        ELSE CONCAT(YEAR(" + colName + "), SUBSTRING((100 + CEILING((((DAYOFYEAR(" + colName + ") -DAYOFYEAR(CONCAT(YEAR(" + colName + "), '" + startDate + "')) + 1) -(7 -" + getWeekDayYr(startDay, colName, startDate) + "))) / 7.0)), 2))       END     END   END + " + fYrAdd2 + ") as INTEGER)";
            this.functionName.setColumnName(qry2);
            this.setOpenBracesForFunctionNameRequired(false);
            this.functionArguments = new Vector();
        }
        else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fweekdtNwkstrtday")) {
            final StringBuffer[] argu = new StringBuffer[4];
            String qry2 = "";
            String startDate2 = "";
            for (int i_count2 = 0; i_count2 < this.functionArguments.size(); ++i_count2) {
                argu[i_count2] = new StringBuffer();
                if (this.functionArguments.elementAt(i_count2) instanceof SelectColumn) {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2).toVectorWiseSelect(to_sqs, from_sqs));
                }
                else {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2));
                }
            }
            startDate2 = argu[2].toString();
            final String wkStartDay = argu[3].toString();
            final String colName2 = argu[0].toString().replaceAll("\"", "");
            qry2 = "CAST(CEILING((    CASE      WHEN MONTH(" + colName2 + ")  < " + (Object)argu[1] + " THEN       CASE        WHEN ((DAYOFYEAR(CONCAT(YEAR(" + colName2 + "), " + startDate2 + ")) - DAYOFYEAR(" + colName2 + ")  < 7)        AND (MOD((mod(int(dayofweek(" + colName2 + ")+5),7)+" + wkStartDay + "),7))  < MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + "), " + startDate2 + "))+5),7)+" + wkStartDay + "),7)) THEN         CASE          WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + "), " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  < 4) THEN 1          ELSE           CASE            WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  < 4) THEN (DAYOFYEAR(" + colName2 + ") + DAYOFYEAR(CONCAT(YEAR(" + colName2 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + ")) + 1 + MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7))            ELSE (DAYOFYEAR(" + colName2 + ") + DAYOFYEAR(CONCAT(YEAR(" + colName2 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + ")) + 1 -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7)))           END         END        ELSE         CASE          WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  < 4) THEN (DAYOFYEAR(" + colName2 + ") + DAYOFYEAR(CONCAT(YEAR(" + colName2 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + ")) + 1 + MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7))          ELSE (DAYOFYEAR(" + colName2 + ") + DAYOFYEAR(CONCAT(YEAR(" + colName2 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + ")) + 1 -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7)))         END       END      ELSE       CASE        WHEN ((DAYOFYEAR(" + colName2 + ") - DAYOFYEAR(CONCAT(YEAR(" + colName2 + "), " + startDate2 + "))  < 7)        AND (MOD((mod(int(dayofweek(" + colName2 + ")+5),7)+" + wkStartDay + "),7)  >= MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + "), " + startDate2 + "))+5),7)+" + wkStartDay + "),7))) THEN         CASE          WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + "), " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  < 4) THEN 1          ELSE           CASE            WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  < 4) THEN (DAYOFYEAR(" + colName2 + ") + DAYOFYEAR(CONCAT(YEAR(" + colName2 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + ")) + 1 + MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7) )           ELSE (DAYOFYEAR(" + colName2 + ") + DAYOFYEAR(CONCAT(YEAR(" + colName2 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + ")) + 1 -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7)) )          END         END        ELSE         CASE          WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + "), " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  < 4) THEN ((DAYOFYEAR(" + colName2 + ") -DAYOFYEAR(CONCAT(YEAR(" + colName2 + "), " + startDate2 + ")) + 1) + MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + "), " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  )        ELSE ((DAYOFYEAR(" + colName2 + ") -DAYOFYEAR(CONCAT(YEAR(" + colName2 + "), " + startDate2 + ")) + 1) -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName2 + "), " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  ))       END       END     END) / 7.0) AS INTEGER)";
            this.functionName.setColumnName(qry2);
            this.setOpenBracesForFunctionNameRequired(false);
            this.functionArguments = new Vector();
        }
        else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fweekintrvalNwkstrtday")) {
            final StringBuffer[] argu = new StringBuffer[4];
            String qry2 = "";
            String startDate2 = "";
            for (int i_count2 = 0; i_count2 < this.functionArguments.size(); ++i_count2) {
                argu[i_count2] = new StringBuffer();
                if (this.functionArguments.elementAt(i_count2) instanceof SelectColumn) {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2).toVectorWiseSelect(to_sqs, from_sqs));
                }
                else {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2));
                }
            }
            startDate2 = argu[2].toString();
            final String wkStartDay = argu[3].toString();
            final String colName2 = argu[0].toString().replaceAll("\"", "");
            qry2 = "CAST(CEILING((    CASE      WHEN MONTH((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000)))  < " + (Object)argu[1] + " THEN       CASE        WHEN ((DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))), " + startDate2 + ")) - DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000)))  < 7)        AND (MOD((mod(int(dayofweek((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000)))+5),7)+" + wkStartDay + "),7))  < MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))), " + startDate2 + "))+5),7)+" + wkStartDay + "),7)) THEN         CASE          WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))), " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  < 4) THEN 1          ELSE           CASE            WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  < 4) THEN (DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) + DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + ")) + 1 + MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7))            ELSE (DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) + DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + ")) + 1 -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7)))           END         END        ELSE         CASE          WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  < 4) THEN (DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) + DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + ")) + 1 + MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7))          ELSE (DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) + DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + ")) + 1 -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7)))         END       END      ELSE       CASE        WHEN ((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) - DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))), " + startDate2 + "))  < 7)        AND (MOD((mod(int(dayofweek((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000)))+5),7)+" + wkStartDay + "),7)  >= MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))), " + startDate2 + "))+5),7)+" + wkStartDay + "),7))) THEN         CASE          WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))), " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  < 4) THEN 1          ELSE           CASE            WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  < 4) THEN (DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) + DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + ")) + 1 + MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7) )           ELSE (DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) + DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + ")) + 1 -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay + "),7)) )          END         END        ELSE         CASE          WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))), " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  < 4) THEN ((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))), " + startDate2 + ")) + 1) + MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))), " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  )        ELSE ((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))), " + startDate2 + ")) + 1) -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName2 + " / 1000))), " + startDate2 + "))+5),7)+" + wkStartDay + "),7)  ))       END       END     END) / 7.0) AS INTEGER)";
            this.functionName.setColumnName(qry2);
            this.setOpenBracesForFunctionNameRequired(false);
            this.functionArguments = new Vector();
        }
        else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fweekdt")) {
            final StringBuffer[] argu = new StringBuffer[3];
            String qry2 = "";
            String startDate2 = "";
            for (int i_count2 = 0; i_count2 < this.functionArguments.size(); ++i_count2) {
                argu[i_count2] = new StringBuffer();
                if (this.functionArguments.elementAt(i_count2) instanceof SelectColumn) {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2).toVectorWiseSelect(to_sqs, from_sqs));
                }
                else {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2));
                }
            }
            startDate2 = argu[2].toString();
            final String colName3 = argu[0].toString().replaceAll("\"", "");
            qry2 = "CAST(CEILING((    CASE      WHEN MONTH(" + colName3 + ")  < " + (Object)argu[1] + " THEN       CASE        WHEN ((DAYOFYEAR(CONCAT(YEAR(" + colName3 + "), " + startDate2 + ")) - DAYOFYEAR(" + colName3 + ")  < 7)        AND (mod(int(dayofweek(" + colName3 + ")+5),7))  < mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)) THEN         CASE          WHEN (mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)  < 4) THEN 1          ELSE           CASE            WHEN (mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)  < 4) THEN (DAYOFYEAR(" + colName3 + ") + DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 + mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7))            ELSE (DAYOFYEAR(" + colName3 + ") + DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 -(7 -mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)))           END         END        ELSE         CASE          WHEN (mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)  < 4) THEN (DAYOFYEAR(" + colName3 + ") + DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 + mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7))          ELSE (DAYOFYEAR(" + colName3 + ") + DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 -(7 -mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)))         END       END      ELSE       CASE        WHEN ((DAYOFYEAR(" + colName3 + ") - DAYOFYEAR(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))  < 7)        AND (mod(int(dayofweek(" + colName3 + ")+5),7)  >= mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7))) THEN         CASE          WHEN (mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)  < 4) THEN 1          ELSE           CASE            WHEN (mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)  < 4) THEN (DAYOFYEAR(" + colName3 + ") + DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 + mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7) )           ELSE (DAYOFYEAR(" + colName3 + ") + DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 -(7 -mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)) )          END         END        ELSE         CASE          WHEN (mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)  < 4) THEN ((DAYOFYEAR(" + colName3 + ") -DAYOFYEAR(CONCAT(YEAR(" + colName3 + "), " + startDate2 + ")) + 1) + mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)  )        ELSE ((DAYOFYEAR(" + colName3 + ") -DAYOFYEAR(CONCAT(YEAR(" + colName3 + "), " + startDate2 + ")) + 1) -(7 -mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)  ))       END       END     END) / 7.0) AS INTEGER)";
            this.functionName.setColumnName(qry2);
            this.setOpenBracesForFunctionNameRequired(false);
            this.functionArguments = new Vector();
        }
        else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fweekintrval")) {
            final StringBuffer[] argu = new StringBuffer[3];
            String qry2 = "";
            String startDate2 = "";
            for (int i_count2 = 0; i_count2 < this.functionArguments.size(); ++i_count2) {
                argu[i_count2] = new StringBuffer();
                if (this.functionArguments.elementAt(i_count2) instanceof SelectColumn) {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2).toVectorWiseSelect(to_sqs, from_sqs));
                }
                else {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2));
                }
            }
            startDate2 = argu[2].toString();
            final String colName3 = argu[0].toString().replaceAll("\"", "");
            qry2 = "CEILING((    CASE      WHEN MONTH((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000)))  < " + (Object)argu[1] + " THEN       CASE        WHEN ((DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + ")) - DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000)))  < 7)        AND (mod(int(dayofweek((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000)))+5),7))  < mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)) THEN         CASE          WHEN (mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)  < 4) THEN 1          ELSE           CASE            WHEN (mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)  < 4) THEN (DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 + mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7))            ELSE (DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 -(7 -mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)))           END         END        ELSE         CASE          WHEN (mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)  < 4) THEN (DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 + mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7))          ELSE (DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 -(7 -mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)))         END       END      ELSE       CASE        WHEN ((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) - DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))  < 7)        AND (mod(int(dayofweek((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000)))+5),7)  >= mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7))) THEN         CASE          WHEN (mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)  < 4) THEN 1          ELSE           CASE            WHEN (mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)  < 4) THEN (DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 + mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7) )           ELSE (DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 -(7 -mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)) )          END         END        ELSE         CASE          WHEN (mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)  < 4) THEN ((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + ")) + 1) + mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)  )        ELSE ((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + ")) + 1) -(7 -mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)  ))       END       END     END) / 7.0) ";
            this.functionName.setColumnName(qry2);
            this.setOpenBracesForFunctionNameRequired(false);
            this.functionArguments = new Vector();
        }
        else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fweekyeardtNwkstrtday")) {
            final StringBuffer[] argu = new StringBuffer[5];
            String qry2 = "";
            String startDate2 = "";
            for (int i_count2 = 0; i_count2 < this.functionArguments.size(); ++i_count2) {
                argu[i_count2] = new StringBuffer();
                if (this.functionArguments.elementAt(i_count2) instanceof SelectColumn) {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2).toVectorWiseSelect(to_sqs, from_sqs));
                }
                else {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2));
                }
            }
            startDate2 = argu[2].toString();
            final String colName3 = argu[0].toString().replaceAll("\"", "");
            final String wkStartDay2 = argu[3].toString();
            final String addValue = argu[4].toString();
            qry2 = "cast(CEILING(CASE    WHEN MONTH(" + colName3 + ")  < " + (Object)argu[1] + " THEN     CASE      WHEN ((DAYOFYEAR(CONCAT(YEAR(" + colName3 + "), " + startDate2 + ")) - DAYOFYEAR(" + colName3 + ")  < 7)      AND (MOD((mod(int(dayofweek(" + colName3 + ")+5),7)+" + wkStartDay2 + "),7)  < MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7))) THEN       CASE        WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)  < 4) THEN CONCAT(YEAR(" + colName3 + "), '01')        ELSE         CASE          WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)  < 4) THEN CONCAT(YEAR(" + colName3 + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName3 + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 + MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)))) / 7.0)), 2))          ELSE CONCAT(YEAR(" + colName3 + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName3 + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7))))) / 7.0)), 2))         END       END      ELSE       CASE        WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)  < 4) THEN CONCAT(YEAR(" + colName3 + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName3 + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 + MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)))) / 7.0)), 2))        ELSE CONCAT(YEAR(" + colName3 + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName3 + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7))))) / 7.0)), 2))       END     END    ELSE     CASE      WHEN ((DAYOFYEAR(" + colName3 + ") - DAYOFYEAR(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))  < 7)      AND (MOD((mod(int(dayofweek(" + colName3 + ")+5),7)+" + wkStartDay2 + "),7)  >= MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7))) THEN       CASE        WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)  < 4) THEN CONCAT(YEAR(" + colName3 + "), '01')        ELSE         CASE          WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)  < 4) THEN CONCAT(YEAR(" + colName3 + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName3 + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 + MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)))) / 7.0)), 2))          ELSE CONCAT(YEAR(" + colName3 + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName3 + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7))))) / 7.0)), 2))         END       END      ELSE       CASE        WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)  < 4) THEN CONCAT(YEAR(" + colName3 + "), SUBSTRING((100 + CEILING((((DAYOFYEAR(" + colName3 + ") -DAYOFYEAR(CONCAT(YEAR(" + colName3 + "), " + startDate2 + ")) + 1) + MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7))) / 7.0)), 2))        ELSE CONCAT(YEAR(" + colName3 + "), SUBSTRING((100 + CEILING((((DAYOFYEAR(" + colName3 + ") -DAYOFYEAR(CONCAT(YEAR(" + colName3 + "), " + startDate2 + ")) + 1) -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)))) / 7.0)), 2))       END     END   END + " + addValue + ") as INTEGER)";
            this.functionName.setColumnName(qry2);
            this.setOpenBracesForFunctionNameRequired(false);
            this.functionArguments = new Vector();
        }
        else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fweekyearintrvalNwkstrtday")) {
            final StringBuffer[] argu = new StringBuffer[5];
            String qry2 = "";
            String startDate2 = "";
            for (int i_count2 = 0; i_count2 < this.functionArguments.size(); ++i_count2) {
                argu[i_count2] = new StringBuffer();
                if (this.functionArguments.elementAt(i_count2) instanceof SelectColumn) {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2).toVectorWiseSelect(to_sqs, from_sqs));
                }
                else {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2));
                }
            }
            startDate2 = argu[2].toString();
            final String colName3 = argu[0].toString().replaceAll("\"", "");
            final String wkStartDay2 = argu[3].toString();
            final String addValue = argu[4].toString();
            qry2 = "cast(CEILING(CASE    WHEN MONTH((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000)))  < " + (Object)argu[1] + " THEN     CASE      WHEN ((DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + ")) - DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000)))  < 7)      AND (MOD((mod(int(dayofweek((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000)))+5),7)+" + wkStartDay2 + "),7)  < MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7))) THEN       CASE        WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)  < 4) THEN CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), '01')        ELSE         CASE          WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)  < 4) THEN CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, SUBSTRING((100 + CEILING(((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + (DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 + MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)))) / 7)), 2))          ELSE CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, SUBSTRING((100 + CEILING(((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + (DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7))))) / 7)), 2))         END       END      ELSE       CASE        WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)  < 4) THEN CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, SUBSTRING((100 + CEILING(((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + (DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 + MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)))) / 7)), 2))        ELSE CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, SUBSTRING((100 + CEILING(((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + (DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7))))) / 7)), 2))       END     END    ELSE     CASE      WHEN ((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) - DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))  < 7)      AND (MOD((mod(int(dayofweek((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000)))+5),7)+" + wkStartDay2 + "),7)  >= MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7))) THEN       CASE        WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)  < 4) THEN CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), '01')        ELSE         CASE          WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)  < 4) THEN CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, SUBSTRING((100 + CEILING(((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + (DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 + MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)))) / 7)), 2))          ELSE CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, SUBSTRING((100 + CEILING(((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + (DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7))))) / 7)), 2))         END       END      ELSE       CASE        WHEN (MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)  < 4) THEN CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), SUBSTRING((100 + CEILING((((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + ")) + 1) + MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7))) / 7)), 2))        ELSE CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), SUBSTRING((100 + CEILING((((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + ")) + 1) -(7 -MOD((mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)+" + wkStartDay2 + "),7)))) / 7)), 2))       END     END   END + " + addValue + ") as INTEGER)";
            this.functionName.setColumnName(qry2);
            this.setOpenBracesForFunctionNameRequired(false);
            this.functionArguments = new Vector();
        }
        else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fweekyeardt")) {
            final StringBuffer[] argu = new StringBuffer[4];
            String qry2 = "";
            String startDate2 = "";
            for (int i_count2 = 0; i_count2 < this.functionArguments.size(); ++i_count2) {
                argu[i_count2] = new StringBuffer();
                if (this.functionArguments.elementAt(i_count2) instanceof SelectColumn) {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2).toVectorWiseSelect(to_sqs, from_sqs));
                }
                else {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2));
                }
            }
            startDate2 = argu[2].toString();
            final String colName3 = argu[0].toString().replaceAll("\"", "");
            final String addValue2 = argu[3].toString();
            qry2 = "cast(CEILING(CASE    WHEN MONTH(" + colName3 + ")  < " + (Object)argu[1] + " THEN     CASE      WHEN ((DAYOFYEAR(CONCAT(YEAR(" + colName3 + "), " + startDate2 + ")) - DAYOFYEAR(" + colName3 + ")  < 7)      AND (mod(int(dayofweek(" + colName3 + ")+5),7)  < mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7))) THEN       CASE        WHEN (mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)  < 4) THEN CONCAT(YEAR(" + colName3 + "), '01')        ELSE         CASE          WHEN (mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)  < 4) THEN CONCAT(YEAR(" + colName3 + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName3 + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 + mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)))) / 7.0)), 2))          ELSE CONCAT(YEAR(" + colName3 + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName3 + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 -(7 -mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7))))) / 7.0)), 2))         END       END      ELSE       CASE        WHEN (mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)  < 4) THEN CONCAT(YEAR(" + colName3 + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName3 + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 + mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)))) / 7.0)), 2))        ELSE CONCAT(YEAR(" + colName3 + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName3 + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 -(7 -mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7))))) / 7.0)), 2))       END     END    ELSE     CASE      WHEN ((DAYOFYEAR(" + colName3 + ") - DAYOFYEAR(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))  < 7)      AND (mod(int(dayofweek(" + colName3 + ")+5),7)  >= mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7))) THEN       CASE        WHEN (mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)  < 4) THEN CONCAT(YEAR(" + colName3 + "), '01')        ELSE         CASE          WHEN (mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)  < 4) THEN CONCAT(YEAR(" + colName3 + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName3 + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 + mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7)))) / 7.0)), 2))          ELSE CONCAT(YEAR(" + colName3 + ") -1, SUBSTRING((100 + CEILING(((DAYOFYEAR(" + colName3 + ") + (DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + ")) + 1 -(7 -mod(int(dayofweek(CONCAT(YEAR(" + colName3 + ") -1, " + startDate2 + "))+5),7))))) / 7.0)), 2))         END       END      ELSE       CASE        WHEN (mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)  < 4) THEN CONCAT(YEAR(" + colName3 + "), SUBSTRING((100 + CEILING((((DAYOFYEAR(" + colName3 + ") -DAYOFYEAR(CONCAT(YEAR(" + colName3 + "), " + startDate2 + ")) + 1) + mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7))) / 7.0)), 2))        ELSE CONCAT(YEAR(" + colName3 + "), SUBSTRING((100 + CEILING((((DAYOFYEAR(" + colName3 + ") -DAYOFYEAR(CONCAT(YEAR(" + colName3 + "), " + startDate2 + ")) + 1) -(7 -mod(int(dayofweek(CONCAT(YEAR(" + colName3 + "), " + startDate2 + "))+5),7)))) / 7.0)), 2))       END     END   END + " + addValue2 + ") as INTEGER)";
            this.functionName.setColumnName(qry2);
            this.setOpenBracesForFunctionNameRequired(false);
            this.functionArguments = new Vector();
        }
        else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fweekyearintrval")) {
            final StringBuffer[] argu = new StringBuffer[4];
            String qry2 = "";
            String startDate2 = "";
            for (int i_count2 = 0; i_count2 < this.functionArguments.size(); ++i_count2) {
                argu[i_count2] = new StringBuffer();
                if (this.functionArguments.elementAt(i_count2) instanceof SelectColumn) {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2).toVectorWiseSelect(to_sqs, from_sqs));
                }
                else {
                    argu[i_count2].append(this.functionArguments.elementAt(i_count2));
                }
            }
            startDate2 = argu[2].toString();
            final String colName3 = argu[0].toString().replaceAll("\"", "");
            final String addValue2 = argu[3].toString();
            qry2 = "cast(CEILING(CASE    WHEN MONTH((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000)))  < " + (Object)argu[1] + " THEN     CASE      WHEN ((DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + ")) - DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000)))  < 7)      AND (mod(int(dayofweek((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000)))+5),7)  < mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7))) THEN       CASE        WHEN (mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)  < 4) THEN CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), '01')        ELSE         CASE          WHEN (mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)  < 4) THEN CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, SUBSTRING((100 + CEILING(((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + (DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 + mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)))) / 7.0)), 2))          ELSE CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, SUBSTRING((100 + CEILING(((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + (DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 -(7 -mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7))))) / 7.0)), 2))         END       END      ELSE       CASE        WHEN (mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)  < 4) THEN CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, SUBSTRING((100 + CEILING(((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + (DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 + mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)))) / 7.0)), 2))        ELSE CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, SUBSTRING((100 + CEILING(((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + (DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 -(7 -mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7))))) / 7.0)), 2))       END     END    ELSE     CASE      WHEN ((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) - DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))  < 7)      AND (mod(int(dayofweek((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000)))+5),7)  >= mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7))) THEN       CASE        WHEN (mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)  < 4) THEN CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), '01')        ELSE         CASE          WHEN (mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)  < 4) THEN CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, SUBSTRING((100 + CEILING(((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + (DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 + mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7)))) / 7.0)), 2))          ELSE CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, SUBSTRING((100 + CEILING(((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) + (DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, '-12-31')) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + ")) + 1 -(7 -mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -1, " + startDate2 + "))+5),7))))) / 7.0)), 2))         END       END      ELSE       CASE        WHEN (mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)  < 4) THEN CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), SUBSTRING((100 + CEILING((((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + ")) + 1) + mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7))) / 7.0)), 2))        ELSE CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), SUBSTRING((100 + CEILING((((DAYOFYEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))) -DAYOFYEAR(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + ")) + 1) -(7 -mod(int(dayofweek(CONCAT(YEAR((FROM_UNIXTIME(0)+interval  '1'  second * (" + colName3 + " / 1000))), " + startDate2 + "))+5),7)))) / 7.0)), 2))       END     END   END + " + addValue2 + ") as INTEGER)";
            this.functionName.setColumnName(qry2);
            this.setOpenBracesForFunctionNameRequired(false);
            this.functionArguments = new Vector();
        }
    }
    
    @Override
    public void toPostgreSQL(final SelectQueryStatement to_sqs, final SelectQueryStatement from_sqs) throws ConvertException {
        final Vector arguments = new Vector();
        for (int i_count = 0; i_count < this.functionArguments.size(); ++i_count) {
            if (this.functionArguments.elementAt(i_count) instanceof SelectColumn) {
                arguments.addElement(this.functionArguments.elementAt(i_count).toPostgreSQLSelect(to_sqs, from_sqs));
            }
            else {
                arguments.addElement(this.functionArguments.elementAt(i_count));
            }
        }
        this.setFunctionArguments(arguments);
        if (from_sqs != null && from_sqs.isAmazonRedShift()) {
            String qry = "";
            if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fweekdtNwkstrtday")) {
                qry = "CAST(CEIL((    CASE      WHEN  cast(EXTRACT(MONTH FROM CAST(" + arguments.get(0).toString() + " AS DATE)) as int)  < " + arguments.get(1).toString() + " THEN       CASE        WHEN (( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) -  cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int)  < 7)        AND (MOD(( mod(cast(date_part('dow' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))) THEN         CASE          WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN 1          ELSE           CASE            WHEN (MOD(( mod(cast(date_part('dow' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN ( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || '-12-31')::DATE) as int) - cast(date_part('doy' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) + 1 + MOD(( mod(cast(date_part('dow' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))            ELSE ( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || '-12-31')::DATE) as int) - cast(date_part('doy' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 -MOD(( mod(cast(date_part('dow' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))))           END         END        ELSE         CASE          WHEN (MOD(( mod(cast(date_part('dow' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN ( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || '-12-31')::DATE) as int) - cast(date_part('doy' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) + 1 + MOD(( mod(cast(date_part('dow' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))          ELSE ( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || '-12-31')::DATE) as int) - cast(date_part('doy' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 -MOD(( mod(cast(date_part('dow' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))))         END       END      ELSE       CASE        WHEN (( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) -  cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int)  < 7)        AND (MOD(( mod(cast(date_part('dow' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  >= MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))) THEN         CASE          WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN 1          ELSE           CASE            WHEN (MOD(( mod(cast(date_part('dow' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN ( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || '-12-31')::DATE) as int) - cast(date_part('doy' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) + 1 + MOD(( mod(cast(date_part('dow' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))            ELSE ( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || '-12-31')::DATE) as int) - cast(date_part('doy' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 -MOD(( mod(cast(date_part('dow' ,((cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1) || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))))           END         END        ELSE         CASE          WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN (( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) + 1) + MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))          ELSE (( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) + 1) -(7 -MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))         END       END     END) / ((case when 7=0 then null else 7 end)*1.0)) AS INTEGER)";
            }
            else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fWeekIntrvalNwkStrtDay")) {
                qry = "CAST(CEIL((    CASE      WHEN  cast(EXTRACT(MONTH FROM (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int)  < " + arguments.get(1).toString() + " THEN       CASE        WHEN (( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) -  cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int)  < 7)        AND (MOD(( mod(cast(date_part('dow' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))) THEN         CASE          WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN 1          ELSE           CASE            WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN ( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 + MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))            ELSE ( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 -MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))))           END         END        ELSE         CASE          WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN ( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 + MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))          ELSE ( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 -MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))))         END       END      ELSE       CASE        WHEN (( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) -  cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int)  < 7)        AND (MOD(( mod(cast(date_part('dow' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  >= MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))) THEN         CASE          WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN 1          ELSE           CASE            WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN ( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 + MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))            ELSE ( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 -MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))))           END         END        ELSE         CASE          WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN (( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) + 1) + MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))          ELSE (( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) + 1) -(7 -MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))         END       END     END) / ((case when 7=0 then null else 7 end)*1.0)) AS INTEGER)";
            }
            else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fWeekDt")) {
                qry = "CAST(CEIL((    CASE      WHEN  cast(EXTRACT(MONTH FROM CAST(" + arguments.get(0).toString() + " AS DATE)) as int)  < " + arguments.get(1).toString() + " THEN       CASE        WHEN (( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) -  cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int)  < 7)        AND ( mod(cast(date_part('dow' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) +6, 7)  <  mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))) THEN         CASE          WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN 1          ELSE           CASE            WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN ( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 +  mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)))            ELSE ( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 - mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))))           END         END        ELSE         CASE          WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN ( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 +  mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)))          ELSE ( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 - mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))))         END       END      ELSE       CASE        WHEN (( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) -  cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int)  < 7)        AND ( mod(cast(date_part('dow' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) +6, 7)  >=  mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))) THEN         CASE          WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN 1          ELSE           CASE            WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN ( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 +  mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)))            ELSE ( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 - mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))))           END         END        ELSE         CASE          WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN (( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) + 1) +  mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))          ELSE (( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) + 1) -(7 - mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)))         END       END     END) / ((case when 7=0 then null else 7 end)*1.0)) AS INTEGER)";
            }
            else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fWeekIntrval")) {
                qry = "CAST(CEIL((    CASE      WHEN  cast(EXTRACT(MONTH FROM (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int)  < " + arguments.get(1).toString() + " THEN       CASE        WHEN (( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) -  cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int)  < 7)        AND ( mod(cast(date_part('dow' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) +6, 7)  <  mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))) THEN         CASE          WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN 1          ELSE           CASE            WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN ( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 +  mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)))            ELSE ( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 - mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))))           END         END        ELSE         CASE          WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN ( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 +  mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)))          ELSE ( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 - mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))))         END       END      ELSE       CASE        WHEN (( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) -  cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int)  < 7)        AND ( mod(cast(date_part('dow' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) +6, 7)  >=  mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))) THEN         CASE          WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN 1          ELSE           CASE            WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN ( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 +  mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)))            ELSE ( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 - mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))))           END         END        ELSE         CASE          WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN (( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) + 1) +  mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))          ELSE (( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) + 1) -(7 - mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)))         END       END     END) / ((case when 7=0 then null else 7 end)*1.0)) AS INTEGER)";
            }
            else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fWeekYearDtNwkStrtDay")) {
                qry = "cast(CEIL(cast(CASE    WHEN  cast(EXTRACT(MONTH FROM CAST(" + arguments.get(0).toString() + " AS DATE)) as int)  < " + arguments.get(1).toString() + " THEN     CASE      WHEN (( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) -  cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int)  < 7)      AND (MOD(( mod(cast(date_part('dow' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))) THEN       CASE        WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '01')        ELSE         CASE          WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 + MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))) / ((case when 7=0 then null else 7 end)*1.0))),2))          ELSE (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 -MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))))) / ((case when 7=0 then null else 7 end)*1.0))),2))         END       END      ELSE       CASE        WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 + MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))) / ((case when 7=0 then null else 7 end)*1.0))),2))        ELSE (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 -MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))))) / ((case when 7=0 then null else 7 end)*1.0))),2))       END     END    ELSE     CASE      WHEN (( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) -  cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int)  < 7)      AND (MOD(( mod(cast(date_part('dow' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  >= MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))) THEN       CASE        WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '01')        ELSE         CASE          WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 + MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))) / ((case when 7=0 then null else 7 end)*1.0))),2))          ELSE (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 -MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))))) / ((case when 7=0 then null else 7 end)*1.0))),2))         END       END      ELSE       CASE        WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || SUBSTRING((100 + CEIL(((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) + 1) + MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))) / ((case when 7=0 then null else 7 end)*1.0))),2))        ELSE (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || SUBSTRING((100 + CEIL(((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) + 1) -(7 -MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))) / ((case when 7=0 then null else 7 end)*1.0))),2))       END     END   END as numeric) + " + arguments.get(4).toString() + ") as INTEGER) ";
            }
            else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fWeekYearIntrvalNwkStrtDay")) {
                qry = "cast(CEIL(cast(CASE    WHEN  cast(EXTRACT(MONTH FROM (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int)  < " + arguments.get(1).toString() + " THEN     CASE      WHEN (( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) -  cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int)  < 7)      AND (MOD(( mod(cast(date_part('dow' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))) THEN       CASE        WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN (cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || '01')        ELSE         CASE          WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN (cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 + MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))) / ((case when 7=0 then null else 7 end)*1.0))),2))          ELSE (cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 -MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))))) / ((case when 7=0 then null else 7 end)*1.0))),2))         END       END      ELSE       CASE        WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN (cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 + MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))) / ((case when 7=0 then null else 7 end)*1.0))),2))        ELSE (cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 -MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))))) / ((case when 7=0 then null else 7 end)*1.0))),2))       END     END    ELSE     CASE      WHEN (( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) -  cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int)  < 7)      AND (MOD(( mod(cast(date_part('dow' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  >= MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))) THEN       CASE        WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN (cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || '01')        ELSE         CASE          WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN (cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 + MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))) / ((case when 7=0 then null else 7 end)*1.0))),2))          ELSE (cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) + ( cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 -MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))))) / ((case when 7=0 then null else 7 end)*1.0))),2))         END       END      ELSE       CASE        WHEN (MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)  < 4) THEN (cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || SUBSTRING((100 + CEIL(((( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) + 1) + MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7))) / ((case when 7=0 then null else 7 end)*1.0))),2))        ELSE (cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || SUBSTRING((100 + CEIL(((( cast(date_part('doy' ,(TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000))) as int) - cast(date_part('doy' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) + 1) -(7 -MOD(( mod(cast(date_part('dow' ,(cast(extract (year from  (TO_TIMESTAMP(0) + INTERVAL  '1'  second * (" + arguments.get(0).toString() + " / 1000)) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7) + " + arguments.get(3).toString() + "), 7)))) / ((case when 7=0 then null else 7 end)*1.0))),2))       END     END   END as numeric) + " + arguments.get(4).toString() + ") as INTEGER)";
            }
            else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fWeekYearDt")) {
                qry = "cast(CEIL(cast(CASE    WHEN  cast(EXTRACT(MONTH FROM CAST(" + arguments.get(0).toString() + " AS DATE)) as int)  < " + arguments.get(1).toString() + " THEN     CASE      WHEN (( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) -  cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int)  < 7)      AND ( mod(cast(date_part('dow' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) +6, 7)  <  mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))) THEN       CASE        WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '01')        ELSE         CASE          WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 +  mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)))) / ((case when 7=0 then null else 7 end)*1.0))),2))          ELSE (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 - mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))))) / ((case when 7=0 then null else 7 end)*1.0))),2))         END       END      ELSE       CASE        WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 +  mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)))) / ((case when 7=0 then null else 7 end)*1.0))),2))        ELSE (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 - mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))))) / ((case when 7=0 then null else 7 end)*1.0))),2))       END     END    ELSE     CASE      WHEN (( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) -  cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int)  < 7)      AND ( mod(cast(date_part('dow' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) +6, 7)  >=  mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))) THEN       CASE        WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || '01')        ELSE         CASE          WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 +  mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)))) / ((case when 7=0 then null else 7 end)*1.0))),2))          ELSE (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || SUBSTRING((100 + CEIL((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) + ( cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || '-12-31')::DATE) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) + 1 -(7 - mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  -1 || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))))) / ((case when 7=0 then null else 7 end)*1.0))),2))         END       END      ELSE       CASE        WHEN ( mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)  < 4) THEN (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || SUBSTRING((100 + CEIL(((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) + 1) +  mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7))) / ((case when 7=0 then null else 7 end)*1.0))),2))        ELSE (cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || SUBSTRING((100 + CEIL(((( cast(date_part('doy' ,CAST(" + arguments.get(0).toString() + " AS DATE)) as int) - cast(date_part('doy' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) + 1) -(7 - mod(cast(date_part('dow' ,(cast(extract (year from  CAST(" + arguments.get(0).toString() + " AS DATE) ) as int)  || " + arguments.get(2).toString() + ")::DATE) as int) +6, 7)))) / ((case when 7=0 then null else 7 end)*1.0))),2))       END     END   END as numeric)+ " + arguments.get(3).toString() + ") as INTEGER)";
            }
            this.functionName.setColumnName(qry);
            this.setOpenBracesForFunctionNameRequired(false);
            this.functionArguments = new Vector();
        }
    }
    
    @Override
    public void toMSSQLServer(final SelectQueryStatement to_sqs, final SelectQueryStatement from_sqs) throws ConvertException {
        final Vector arguments = new Vector();
        for (int i_count = 0; i_count < this.functionArguments.size(); ++i_count) {
            if (this.functionArguments.elementAt(i_count) instanceof SelectColumn) {
                arguments.addElement(this.functionArguments.elementAt(i_count).toMSSQLServerSelect(to_sqs, from_sqs));
            }
            else {
                arguments.addElement(this.functionArguments.elementAt(i_count));
            }
        }
        String qry = "";
        final String dateArg = arguments.get(0).toString();
        final String monthStart = arguments.get(1).toString();
        final String startDate = arguments.get(2).toString();
        final String wkStartDay = arguments.get(3).toString();
        if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fWeekDt")) {
            qry = "CEILING((CASE  WHEN MONTH(" + dateArg + ")< " + monthStart + " THEN CASE  WHEN ((DATEPART(dy, concat(YEAR(" + dateArg + "), " + startDate + ")) - DATEPART(dy, " + dateArg + ")  < 7) AND ((datepart(dw," + dateArg + ")+6)%7  < (datepart(dw,concat(YEAR(" + dateArg + "), " + startDate + "))+6)%7)) THEN  CASE  WHEN ((datepart(dw,concat(YEAR(" + dateArg + "), " + startDate + "))+6)%7  < 4) THEN 1  ELSE CASE WHEN ((datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7  < 4) THEN (DATEPART(dy, " + dateArg + ") + (DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) -DATEPART(dy, concat(YEAR(" + dateArg + ") -1, " + startDate + ")) + 1 + (datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7)) ELSE (DATEPART(dy, " + dateArg + ") + (DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) -DATEPART(dy, concat(YEAR(" + dateArg + ") -1, " + startDate + ")) + 1 -(7 -(datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7)))  END  END  ELSE CASE  WHEN ((datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7  < 4) THEN (DATEPART(dy, " + dateArg + ") + (DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) -DATEPART(dy, concat(YEAR(" + dateArg + ") -1, " + startDate + ")) + 1 + (datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7))  ELSE (DATEPART(dy, " + dateArg + ") + (DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) -DATEPART(dy, concat(YEAR(" + dateArg + ") -1, " + startDate + ")) + 1 -(7 -(datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7))) END  END  ELSE  CASE  WHEN ((DATEPART(dy, " + dateArg + ") - DATEPART(dy, concat(YEAR(" + dateArg + "), " + startDate + "))  < 7)  AND ((datepart(dw," + dateArg + ")+6)%7  >= (datepart(dw,concat(YEAR(" + dateArg + "), " + startDate + "))+6)%7)) THEN CASE WHEN ((datepart(dw,concat(YEAR(" + dateArg + "), " + startDate + "))+6)%7  < 4) THEN 1  ELSE  CASE  WHEN ((datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7  < 4) THEN (DATEPART(dy, " + dateArg + ") + (DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) -DATEPART(dy, concat(YEAR(" + dateArg + ") -1, " + startDate + ")) + 1 + (datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7)) ELSE (DATEPART(dy, " + dateArg + ") + (DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) -DATEPART(dy, concat(YEAR(" + dateArg + ") -1, " + startDate + ")) + 1 -(7 -(datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7))) END END  ELSE  CASE WHEN ((datepart(dw,concat(YEAR(" + dateArg + "), " + startDate + "))+6)%7  < 4) THEN ((DATEPART(dy, " + dateArg + ") -DATEPART(dy, concat(YEAR(" + dateArg + "), " + startDate + ")) + 1) + (datepart(dw,concat(YEAR(" + dateArg + "), " + startDate + "))+6)%7) ELSE ((DATEPART(dy, " + dateArg + ") -DATEPART(dy, concat(YEAR(" + dateArg + "), " + startDate + ")) + 1) -(7 -(datepart(dw,concat(YEAR(" + dateArg + "), " + startDate + "))+6)%7))  END END END) / CONVERT(FLOAT, 7))";
        }
        else if (this.functionName.getColumnName().equalsIgnoreCase("ZR_fweekdtNwkstrtday")) {
            qry = "CEILING((CASE WHEN MONTH(" + dateArg + ")  < " + monthStart + " THEN CASE WHEN ((DATEPART(dy, concat(YEAR(" + dateArg + "), " + startDate + ")) - DATEPART(dy, " + dateArg + ")  < 7) AND (((((datepart(dw," + dateArg + ")+6)%7 + " + wkStartDay + ") ) % ( 7 ))  < (( ((datepart(dw,concat(YEAR(" + dateArg + "), " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 )))) THEN CASE WHEN (((((datepart(dw,concat(YEAR(" + dateArg + "), " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 ))  < 4) THEN 1 ELSE CASE WHEN ((( ((datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 ))  < 4) THEN (DATEPART(dy, " + dateArg + ") + (DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) -DATEPART(dy, concat(YEAR(" + dateArg + ") -1, " + startDate + ")) + 1 + (( ((datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 )))) ELSE (DATEPART(dy, " + dateArg + ") + (DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) -DATEPART(dy, concat(YEAR(" + dateArg + ") -1, " + startDate + ")) + 1 -(7 -(( ((datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 ))))) END  END  ELSE CASE  WHEN (((((datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 ))  < 4) THEN (DATEPART(dy, " + dateArg + ") + (DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) -DATEPART(dy, concat(YEAR(" + dateArg + ") -1, " + startDate + ")) + 1 + (( ((datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 )))) ELSE (DATEPART(dy, " + dateArg + ") + (DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) -DATEPART(dy, concat(YEAR(" + dateArg + ") -1, " + startDate + ")) + 1 -(7 -(( ((datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 ))))) END  END  ELSE  CASE WHEN ((DATEPART(dy, " + dateArg + ") - DATEPART(dy, concat(YEAR(" + dateArg + "), " + startDate + "))  < 7)  AND (((((datepart(dw," + dateArg + ")+6)%7 + " + wkStartDay + ") ) % ( 7 ))  >= ((((datepart(dw,concat(YEAR(" + dateArg + "), " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 )))) THEN  CASE  WHEN (((((datepart(dw,concat(YEAR(" + dateArg + "), " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 ))  < 4) THEN 1 ELSE  CASE  WHEN (((((datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 ))  < 4) THEN (DATEPART(dy, " + dateArg + ") + (DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) -DATEPART(dy, concat(YEAR(" + dateArg + ") -1, " + startDate + ")) + 1 + (( ((datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 )))) ELSE (DATEPART(dy, " + dateArg + ") + (DATEPART(dy, concat(YEAR(" + dateArg + ") -1, '-12-31')) -DATEPART(dy, concat(YEAR(" + dateArg + ") -1, " + startDate + ")) + 1 -(7 -(( ((datepart(dw,concat(YEAR(" + dateArg + ") -1, " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 ))))) END  END  ELSE  CASE  WHEN (((((datepart(dw,concat(YEAR(" + dateArg + "), " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 ))  < 4) THEN ((DATEPART(dy, " + dateArg + ") -DATEPART(dy, concat(YEAR(" + dateArg + "), " + startDate + ")) + 1) + (( ((datepart(dw,concat(YEAR(" + dateArg + "), " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 ))) ELSE ((DATEPART(dy, " + dateArg + ") -DATEPART(dy, concat(YEAR(" + dateArg + "), " + startDate + ")) + 1) -(7 -(( ((datepart(dw,concat(YEAR(" + dateArg + "), " + startDate + "))+6)%7 + " + wkStartDay + ") ) % ( 7 )))) END  END  END) / CONVERT(FLOAT, 7))";
        }
        this.functionName.setColumnName(qry);
        this.setOpenBracesForFunctionNameRequired(false);
        this.functionArguments = new Vector();
    }
    
    static {
        (WEEKDAY_MAP = new int[8])[1] = 1;
        fiscalWeek.WEEKDAY_MAP[7] = 2;
        fiscalWeek.WEEKDAY_MAP[6] = 3;
        fiscalWeek.WEEKDAY_MAP[5] = 4;
        fiscalWeek.WEEKDAY_MAP[4] = 5;
        fiscalWeek.WEEKDAY_MAP[3] = 6;
        fiscalWeek.WEEKDAY_MAP[2] = 0;
    }
}
