package jdk.nashorn.internal.objects;

import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;
import java.lang.invoke.MethodHandle;
import jdk.nashorn.internal.runtime.ScriptFunction;
import jdk.nashorn.internal.runtime.Property;
import java.util.Collection;
import jdk.nashorn.internal.runtime.AccessorProperty;
import java.util.ArrayList;
import jdk.nashorn.internal.runtime.PropertyMap;
import jdk.nashorn.internal.runtime.PrototypeObject;

final class NativeObject$Prototype extends PrototypeObject
{
    private Object toString;
    private Object toLocaleString;
    private Object valueOf;
    private Object hasOwnProperty;
    private Object isPrototypeOf;
    private Object propertyIsEnumerable;
    private static final PropertyMap $nasgenmap$;
    
    public Object G$toString() {
        return this.toString;
    }
    
    public void S$toString(final Object toString) {
        this.toString = toString;
    }
    
    public Object G$toLocaleString() {
        return this.toLocaleString;
    }
    
    public void S$toLocaleString(final Object toLocaleString) {
        this.toLocaleString = toLocaleString;
    }
    
    public Object G$valueOf() {
        return this.valueOf;
    }
    
    public void S$valueOf(final Object valueOf) {
        this.valueOf = valueOf;
    }
    
    public Object G$hasOwnProperty() {
        return this.hasOwnProperty;
    }
    
    public void S$hasOwnProperty(final Object hasOwnProperty) {
        this.hasOwnProperty = hasOwnProperty;
    }
    
    public Object G$isPrototypeOf() {
        return this.isPrototypeOf;
    }
    
    public void S$isPrototypeOf(final Object isPrototypeOf) {
        this.isPrototypeOf = isPrototypeOf;
    }
    
    public Object G$propertyIsEnumerable() {
        return this.propertyIsEnumerable;
    }
    
    public void S$propertyIsEnumerable(final Object propertyIsEnumerable) {
        this.propertyIsEnumerable = propertyIsEnumerable;
    }
    
    static {
        final ArrayList properties = new ArrayList(6);
        properties.add(AccessorProperty.create("toString", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_116.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_117.HANDLE));
        properties.add(AccessorProperty.create("toLocaleString", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_118.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_119.HANDLE));
        properties.add(AccessorProperty.create("valueOf", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_11a.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_11b.HANDLE));
        properties.add(AccessorProperty.create("hasOwnProperty", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_11c.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_11d.HANDLE));
        properties.add(AccessorProperty.create("isPrototypeOf", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_11e.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_11f.HANDLE));
        properties.add(AccessorProperty.create("propertyIsEnumerable", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_120.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_121.HANDLE));
        $nasgenmap$ = PropertyMap.newMap(properties);
    }
    
    NativeObject$Prototype() {
        super(NativeObject$Prototype.$nasgenmap$);
        this.toString = ScriptFunction.createBuiltin("toString", /* ldc_method_handle(!) */ProcyonConstantHelper_122.HANDLE);
        this.toLocaleString = ScriptFunction.createBuiltin("toLocaleString", /* ldc_method_handle(!) */ProcyonConstantHelper_123.HANDLE);
        this.valueOf = ScriptFunction.createBuiltin("valueOf", /* ldc_method_handle(!) */ProcyonConstantHelper_124.HANDLE);
        this.hasOwnProperty = ScriptFunction.createBuiltin("hasOwnProperty", /* ldc_method_handle(!) */ProcyonConstantHelper_125.HANDLE);
        this.isPrototypeOf = ScriptFunction.createBuiltin("isPrototypeOf", /* ldc_method_handle(!) */ProcyonConstantHelper_126.HANDLE);
        this.propertyIsEnumerable = ScriptFunction.createBuiltin("propertyIsEnumerable", /* ldc_method_handle(!) */ProcyonConstantHelper_127.HANDLE);
    }
    
    @Override
    public String getClassName() {
        return "Object";
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_116__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_116
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_116__.findVirtual(NativeObject$Prototype.class, "G$toString", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_116.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_117__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_117
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_117__.findVirtual(NativeObject$Prototype.class, "S$toString", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_117.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_118__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_118
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_118__.findVirtual(NativeObject$Prototype.class, "G$toLocaleString", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_118.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_119__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_119
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_119__.findVirtual(NativeObject$Prototype.class, "S$toLocaleString", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_119.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_11a__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_11a
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_11a__.findVirtual(NativeObject$Prototype.class, "G$valueOf", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_11a.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_11b__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_11b
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_11b__.findVirtual(NativeObject$Prototype.class, "S$valueOf", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_11b.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_11c__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_11c
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_11c__.findVirtual(NativeObject$Prototype.class, "G$hasOwnProperty", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_11c.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_11d__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_11d
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_11d__.findVirtual(NativeObject$Prototype.class, "S$hasOwnProperty", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_11d.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_11e__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_11e
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_11e__.findVirtual(NativeObject$Prototype.class, "G$isPrototypeOf", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_11e.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_11f__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_11f
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_11f__.findVirtual(NativeObject$Prototype.class, "S$isPrototypeOf", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_11f.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_120__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_120
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_120__.findVirtual(NativeObject$Prototype.class, "G$propertyIsEnumerable", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_120.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_121__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_121
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_121__.findVirtual(NativeObject$Prototype.class, "S$propertyIsEnumerable", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_121.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_122__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_122
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(String.class, Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_122__.findStatic(NativeObject.class, "toString", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_122.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_123__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_123
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_123__.findStatic(NativeObject.class, "toLocaleString", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_123.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_124__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_124
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_124__.findStatic(NativeObject.class, "valueOf", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_124.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_125__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_125
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(boolean.class, Object.class, Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_125__.findStatic(NativeObject.class, "hasOwnProperty", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_125.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_126__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_126
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(boolean.class, Object.class, Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_126__.findStatic(NativeObject.class, "isPrototypeOf", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_126.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_127__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_127
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(boolean.class, Object.class, Object.class);
            try {
                handle = NativeObject$Prototype.__PROCYON__LOOKUP_127__.findStatic(NativeObject.class, "propertyIsEnumerable", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_127.HANDLE = handle;
        }
    }
}
