package jdk.nashorn.internal.objects;

import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;
import java.lang.invoke.MethodHandle;
import jdk.nashorn.internal.runtime.ScriptFunction;
import jdk.nashorn.internal.runtime.Property;
import java.util.Collection;
import jdk.nashorn.internal.runtime.AccessorProperty;
import java.util.ArrayList;
import jdk.nashorn.internal.runtime.PropertyMap;
import jdk.nashorn.internal.runtime.PrototypeObject;

final class NativeInt32Array$Prototype extends PrototypeObject
{
    private Object set;
    private Object subarray;
    private static final PropertyMap $nasgenmap$;
    
    public Object G$set() {
        return this.set;
    }
    
    public void S$set(final Object set) {
        this.set = set;
    }
    
    public Object G$subarray() {
        return this.subarray;
    }
    
    public void S$subarray(final Object subarray) {
        this.subarray = subarray;
    }
    
    static {
        final ArrayList properties = new ArrayList(2);
        properties.add(AccessorProperty.create("set", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_a4.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_a5.HANDLE));
        properties.add(AccessorProperty.create("subarray", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_a6.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_a7.HANDLE));
        $nasgenmap$ = PropertyMap.newMap(properties);
    }
    
    NativeInt32Array$Prototype() {
        super(NativeInt32Array$Prototype.$nasgenmap$);
        this.set = ScriptFunction.createBuiltin("set", /* ldc_method_handle(!) */ProcyonConstantHelper_a8.HANDLE);
        this.subarray = ScriptFunction.createBuiltin("subarray", /* ldc_method_handle(!) */ProcyonConstantHelper_a9.HANDLE);
    }
    
    @Override
    public String getClassName() {
        return "Int32Array";
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_a4__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_a4
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeInt32Array$Prototype.__PROCYON__LOOKUP_a4__.findVirtual(NativeInt32Array$Prototype.class, "G$set", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_a4.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_a5__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_a5
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeInt32Array$Prototype.__PROCYON__LOOKUP_a5__.findVirtual(NativeInt32Array$Prototype.class, "S$set", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_a5.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_a6__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_a6
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeInt32Array$Prototype.__PROCYON__LOOKUP_a6__.findVirtual(NativeInt32Array$Prototype.class, "G$subarray", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_a6.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_a7__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_a7
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeInt32Array$Prototype.__PROCYON__LOOKUP_a7__.findVirtual(NativeInt32Array$Prototype.class, "S$subarray", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_a7.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_a8__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_a8
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class, Object.class, Object.class);
            try {
                handle = NativeInt32Array$Prototype.__PROCYON__LOOKUP_a8__.findStatic(NativeInt32Array.class, "set", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_a8.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_a9__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_a9
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(NativeInt32Array.class, Object.class, Object.class, Object.class);
            try {
                handle = NativeInt32Array$Prototype.__PROCYON__LOOKUP_a9__.findStatic(NativeInt32Array.class, "subarray", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_a9.HANDLE = handle;
        }
    }
}
