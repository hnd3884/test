package jdk.nashorn.internal.objects;

import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;
import jdk.nashorn.internal.runtime.PrototypeObject;
import jdk.nashorn.internal.runtime.Specialization;
import jdk.nashorn.internal.runtime.Property;
import java.util.Collection;
import java.lang.invoke.MethodHandle;
import jdk.nashorn.internal.runtime.AccessorProperty;
import java.util.ArrayList;
import jdk.nashorn.internal.runtime.PropertyMap;
import jdk.nashorn.internal.runtime.ScriptFunction;

final class NativeRegExp$Constructor extends ScriptFunction
{
    private static final PropertyMap $nasgenmap$;
    
    static {
        final ArrayList properties = new ArrayList(15);
        properties.add(AccessorProperty.create("input", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_13a.HANDLE, (MethodHandle)null));
        properties.add(AccessorProperty.create("multiline", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_13b.HANDLE, (MethodHandle)null));
        properties.add(AccessorProperty.create("lastMatch", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_13c.HANDLE, (MethodHandle)null));
        properties.add(AccessorProperty.create("lastParen", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_13d.HANDLE, (MethodHandle)null));
        properties.add(AccessorProperty.create("leftContext", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_13e.HANDLE, (MethodHandle)null));
        properties.add(AccessorProperty.create("rightContext", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_13f.HANDLE, (MethodHandle)null));
        properties.add(AccessorProperty.create("$1", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_140.HANDLE, (MethodHandle)null));
        properties.add(AccessorProperty.create("$2", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_141.HANDLE, (MethodHandle)null));
        properties.add(AccessorProperty.create("$3", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_142.HANDLE, (MethodHandle)null));
        properties.add(AccessorProperty.create("$4", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_143.HANDLE, (MethodHandle)null));
        properties.add(AccessorProperty.create("$5", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_144.HANDLE, (MethodHandle)null));
        properties.add(AccessorProperty.create("$6", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_145.HANDLE, (MethodHandle)null));
        properties.add(AccessorProperty.create("$7", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_146.HANDLE, (MethodHandle)null));
        properties.add(AccessorProperty.create("$8", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_147.HANDLE, (MethodHandle)null));
        properties.add(AccessorProperty.create("$9", 5, /* ldc_method_handle(!) */ProcyonConstantHelper_148.HANDLE, (MethodHandle)null));
        $nasgenmap$ = PropertyMap.newMap(properties);
    }
    
    NativeRegExp$Constructor() {
        super("RegExp", /* ldc_method_handle(!) */ProcyonConstantHelper_149.HANDLE, NativeRegExp$Constructor.$nasgenmap$, new Specialization[] { new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_14a.HANDLE, false), new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_14b.HANDLE, false), new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_14c.HANDLE, false) });
        final NativeRegExp$Prototype nativeRegExp$Prototype = new NativeRegExp$Prototype();
        PrototypeObject.setConstructor(nativeRegExp$Prototype, this);
        this.setPrototype(nativeRegExp$Prototype);
        this.setArity(2);
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_13a__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_13a
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_13a__.findStatic(NativeRegExp.class, "getLastInput", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_13a.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_13b__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_13b
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_13b__.findStatic(NativeRegExp.class, "getLastMultiline", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_13b.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_13c__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_13c
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_13c__.findStatic(NativeRegExp.class, "getLastMatch", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_13c.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_13d__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_13d
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_13d__.findStatic(NativeRegExp.class, "getLastParen", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_13d.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_13e__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_13e
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_13e__.findStatic(NativeRegExp.class, "getLeftContext", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_13e.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_13f__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_13f
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_13f__.findStatic(NativeRegExp.class, "getRightContext", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_13f.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_140__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_140
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_140__.findStatic(NativeRegExp.class, "getGroup1", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_140.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_141__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_141
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_141__.findStatic(NativeRegExp.class, "getGroup2", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_141.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_142__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_142
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_142__.findStatic(NativeRegExp.class, "getGroup3", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_142.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_143__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_143
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_143__.findStatic(NativeRegExp.class, "getGroup4", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_143.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_144__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_144
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_144__.findStatic(NativeRegExp.class, "getGroup5", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_144.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_145__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_145
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_145__.findStatic(NativeRegExp.class, "getGroup6", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_145.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_146__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_146
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_146__.findStatic(NativeRegExp.class, "getGroup7", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_146.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_147__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_147
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_147__.findStatic(NativeRegExp.class, "getGroup8", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_147.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_148__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_148
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_148__.findStatic(NativeRegExp.class, "getGroup9", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_148.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_149__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_149
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(NativeRegExp.class, boolean.class, Object.class, Object[].class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_149__.findStatic(NativeRegExp.class, "constructor", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_149.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_14a__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_14a
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(NativeRegExp.class, boolean.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_14a__.findStatic(NativeRegExp.class, "constructor", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_14a.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_14b__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_14b
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(NativeRegExp.class, boolean.class, Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_14b__.findStatic(NativeRegExp.class, "constructor", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_14b.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_14c__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_14c
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(NativeRegExp.class, boolean.class, Object.class, Object.class, Object.class);
            try {
                handle = NativeRegExp$Constructor.__PROCYON__LOOKUP_14c__.findStatic(NativeRegExp.class, "constructor", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_14c.HANDLE = handle;
        }
    }
}
