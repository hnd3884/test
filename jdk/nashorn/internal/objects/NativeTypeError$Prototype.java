package jdk.nashorn.internal.objects;

import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;
import java.lang.invoke.MethodHandle;
import jdk.nashorn.internal.runtime.Property;
import java.util.Collection;
import jdk.nashorn.internal.runtime.AccessorProperty;
import java.util.ArrayList;
import jdk.nashorn.internal.runtime.PropertyMap;
import jdk.nashorn.internal.runtime.PrototypeObject;

final class NativeTypeError$Prototype extends PrototypeObject
{
    private Object name;
    private Object message;
    private static final PropertyMap $nasgenmap$;
    
    public Object G$name() {
        return this.name;
    }
    
    public void S$name(final Object name) {
        this.name = name;
    }
    
    public Object G$message() {
        return this.message;
    }
    
    public void S$message(final Object message) {
        this.message = message;
    }
    
    static {
        final ArrayList properties = new ArrayList(2);
        properties.add(AccessorProperty.create("name", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_179.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_17a.HANDLE));
        properties.add(AccessorProperty.create("message", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_17b.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_17c.HANDLE));
        $nasgenmap$ = PropertyMap.newMap(properties);
    }
    
    NativeTypeError$Prototype() {
        super(NativeTypeError$Prototype.$nasgenmap$);
    }
    
    @Override
    public String getClassName() {
        return "Error";
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_179__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_179
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeTypeError$Prototype.__PROCYON__LOOKUP_179__.findVirtual(NativeTypeError$Prototype.class, "G$name", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_179.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_17a__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_17a
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeTypeError$Prototype.__PROCYON__LOOKUP_17a__.findVirtual(NativeTypeError$Prototype.class, "S$name", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_17a.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_17b__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_17b
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeTypeError$Prototype.__PROCYON__LOOKUP_17b__.findVirtual(NativeTypeError$Prototype.class, "G$message", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_17b.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_17c__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_17c
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeTypeError$Prototype.__PROCYON__LOOKUP_17c__.findVirtual(NativeTypeError$Prototype.class, "S$message", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_17c.HANDLE = handle;
        }
    }
}
