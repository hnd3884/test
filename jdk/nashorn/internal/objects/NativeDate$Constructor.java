package jdk.nashorn.internal.objects;

import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;
import java.lang.invoke.MethodHandle;
import jdk.nashorn.internal.runtime.PrototypeObject;
import jdk.nashorn.internal.runtime.Specialization;
import jdk.nashorn.internal.runtime.Property;
import java.util.Collection;
import jdk.nashorn.internal.runtime.AccessorProperty;
import java.util.ArrayList;
import jdk.nashorn.internal.runtime.PropertyMap;
import jdk.nashorn.internal.runtime.ScriptFunction;

final class NativeDate$Constructor extends ScriptFunction
{
    private Object parse;
    private Object UTC;
    private Object now;
    private static final PropertyMap $nasgenmap$;
    
    public Object G$parse() {
        return this.parse;
    }
    
    public void S$parse(final Object parse) {
        this.parse = parse;
    }
    
    public Object G$UTC() {
        return this.UTC;
    }
    
    public void S$UTC(final Object utc) {
        this.UTC = utc;
    }
    
    public Object G$now() {
        return this.now;
    }
    
    public void S$now(final Object now) {
        this.now = now;
    }
    
    static {
        final ArrayList properties = new ArrayList(3);
        properties.add(AccessorProperty.create("parse", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_52.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_53.HANDLE));
        properties.add(AccessorProperty.create("UTC", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_54.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_55.HANDLE));
        properties.add(AccessorProperty.create("now", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_56.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_57.HANDLE));
        $nasgenmap$ = PropertyMap.newMap(properties);
    }
    
    NativeDate$Constructor() {
        super("Date", /* ldc_method_handle(!) */ProcyonConstantHelper_58.HANDLE, NativeDate$Constructor.$nasgenmap$, new Specialization[] { new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_59.HANDLE, false) });
        this.parse = ScriptFunction.createBuiltin("parse", /* ldc_method_handle(!) */ProcyonConstantHelper_5a.HANDLE);
        final ScriptFunction builtin = ScriptFunction.createBuiltin("UTC", /* ldc_method_handle(!) */ProcyonConstantHelper_5b.HANDLE);
        builtin.setArity(7);
        this.UTC = builtin;
        this.now = ScriptFunction.createBuiltin("now", /* ldc_method_handle(!) */ProcyonConstantHelper_5c.HANDLE);
        final NativeDate$Prototype nativeDate$Prototype = new NativeDate$Prototype();
        PrototypeObject.setConstructor(nativeDate$Prototype, this);
        this.setPrototype(nativeDate$Prototype);
        this.setArity(7);
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_52__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_52
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeDate$Constructor.__PROCYON__LOOKUP_52__.findVirtual(NativeDate$Constructor.class, "G$parse", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_52.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_53__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_53
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeDate$Constructor.__PROCYON__LOOKUP_53__.findVirtual(NativeDate$Constructor.class, "S$parse", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_53.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_54__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_54
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeDate$Constructor.__PROCYON__LOOKUP_54__.findVirtual(NativeDate$Constructor.class, "G$UTC", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_54.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_55__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_55
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeDate$Constructor.__PROCYON__LOOKUP_55__.findVirtual(NativeDate$Constructor.class, "S$UTC", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_55.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_56__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_56
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeDate$Constructor.__PROCYON__LOOKUP_56__.findVirtual(NativeDate$Constructor.class, "G$now", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_56.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_57__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_57
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeDate$Constructor.__PROCYON__LOOKUP_57__.findVirtual(NativeDate$Constructor.class, "S$now", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_57.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_58__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_58
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, boolean.class, Object.class, Object[].class);
            try {
                handle = NativeDate$Constructor.__PROCYON__LOOKUP_58__.findStatic(NativeDate.class, "construct", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_58.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_59__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_59
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, boolean.class, Object.class);
            try {
                handle = NativeDate$Constructor.__PROCYON__LOOKUP_59__.findStatic(NativeDate.class, "construct", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_59.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_5a__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_5a
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(double.class, Object.class, Object.class);
            try {
                handle = NativeDate$Constructor.__PROCYON__LOOKUP_5a__.findStatic(NativeDate.class, "parse", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_5a.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_5b__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_5b
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(double.class, Object.class, Object[].class);
            try {
                handle = NativeDate$Constructor.__PROCYON__LOOKUP_5b__.findStatic(NativeDate.class, "UTC", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_5b.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_5c__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_5c
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(double.class, Object.class);
            try {
                handle = NativeDate$Constructor.__PROCYON__LOOKUP_5c__.findStatic(NativeDate.class, "now", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_5c.HANDLE = handle;
        }
    }
}
