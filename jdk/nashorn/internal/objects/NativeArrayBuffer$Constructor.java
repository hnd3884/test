package jdk.nashorn.internal.objects;

import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;
import java.lang.invoke.MethodHandle;
import jdk.nashorn.internal.runtime.PrototypeObject;
import jdk.nashorn.internal.runtime.Specialization;
import jdk.nashorn.internal.runtime.Property;
import java.util.Collection;
import jdk.nashorn.internal.runtime.AccessorProperty;
import java.util.ArrayList;
import jdk.nashorn.internal.runtime.PropertyMap;
import jdk.nashorn.internal.runtime.ScriptFunction;

final class NativeArrayBuffer$Constructor extends ScriptFunction
{
    private Object isView;
    private static final PropertyMap $nasgenmap$;
    
    public Object G$isView() {
        return this.isView;
    }
    
    public void S$isView(final Object isView) {
        this.isView = isView;
    }
    
    static {
        final ArrayList properties = new ArrayList(1);
        properties.add(AccessorProperty.create("isView", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_1e.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_1f.HANDLE));
        $nasgenmap$ = PropertyMap.newMap(properties);
    }
    
    NativeArrayBuffer$Constructor() {
        super("ArrayBuffer", /* ldc_method_handle(!) */ProcyonConstantHelper_20.HANDLE, NativeArrayBuffer$Constructor.$nasgenmap$, (Specialization[])null);
        this.isView = ScriptFunction.createBuiltin("isView", /* ldc_method_handle(!) */ProcyonConstantHelper_21.HANDLE);
        final NativeArrayBuffer$Prototype nativeArrayBuffer$Prototype = new NativeArrayBuffer$Prototype();
        PrototypeObject.setConstructor(nativeArrayBuffer$Prototype, this);
        this.setPrototype(nativeArrayBuffer$Prototype);
        this.setArity(1);
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_1e__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_1e
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeArrayBuffer$Constructor.__PROCYON__LOOKUP_1e__.findVirtual(NativeArrayBuffer$Constructor.class, "G$isView", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_1e.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_1f__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_1f
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeArrayBuffer$Constructor.__PROCYON__LOOKUP_1f__.findVirtual(NativeArrayBuffer$Constructor.class, "S$isView", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_1f.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_20__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_20
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(NativeArrayBuffer.class, boolean.class, Object.class, Object[].class);
            try {
                handle = NativeArrayBuffer$Constructor.__PROCYON__LOOKUP_20__.findStatic(NativeArrayBuffer.class, "constructor", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_20.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_21__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_21
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(boolean.class, Object.class, Object.class);
            try {
                handle = NativeArrayBuffer$Constructor.__PROCYON__LOOKUP_21__.findStatic(NativeArrayBuffer.class, "isView", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_21.HANDLE = handle;
        }
    }
}
