package jdk.nashorn.internal.objects;

import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;
import java.lang.invoke.MethodHandle;
import jdk.nashorn.internal.runtime.PrototypeObject;
import jdk.nashorn.internal.runtime.Specialization;
import jdk.nashorn.internal.runtime.Property;
import java.util.Collection;
import jdk.nashorn.internal.runtime.AccessorProperty;
import java.util.ArrayList;
import jdk.nashorn.internal.runtime.PropertyMap;
import jdk.nashorn.internal.runtime.ScriptFunction;

final class NativeString$Constructor extends ScriptFunction
{
    private Object fromCharCode;
    private static final PropertyMap $nasgenmap$;
    
    public Object G$fromCharCode() {
        return this.fromCharCode;
    }
    
    public void S$fromCharCode(final Object fromCharCode) {
        this.fromCharCode = fromCharCode;
    }
    
    static {
        final ArrayList properties = new ArrayList(1);
        properties.add(AccessorProperty.create("fromCharCode", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_15f.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_160.HANDLE));
        $nasgenmap$ = PropertyMap.newMap(properties);
    }
    
    NativeString$Constructor() {
        super("String", /* ldc_method_handle(!) */ProcyonConstantHelper_161.HANDLE, NativeString$Constructor.$nasgenmap$, new Specialization[] { new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_162.HANDLE, false), new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_163.HANDLE, false), new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_164.HANDLE, false), new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_165.HANDLE, false), new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_166.HANDLE, false), new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_167.HANDLE, false) });
        final ScriptFunction builtin = ScriptFunction.createBuiltin("fromCharCode", /* ldc_method_handle(!) */ProcyonConstantHelper_168.HANDLE, new Specialization[] { new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_169.HANDLE, false), new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_16a.HANDLE, false), new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_16b.HANDLE, false), new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_16c.HANDLE, false), new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_16d.HANDLE, false), new Specialization(/* ldc_method_handle(!) */ProcyonConstantHelper_16e.HANDLE, false) });
        builtin.setArity(1);
        this.fromCharCode = builtin;
        final NativeString$Prototype nativeString$Prototype = new NativeString$Prototype();
        PrototypeObject.setConstructor(nativeString$Prototype, this);
        this.setPrototype(nativeString$Prototype);
        this.setArity(1);
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_15f__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_15f
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_15f__.findVirtual(NativeString$Constructor.class, "G$fromCharCode", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_15f.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_160__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_160
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_160__.findVirtual(NativeString$Constructor.class, "S$fromCharCode", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_160.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_161__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_161
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, boolean.class, Object.class, Object[].class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_161__.findStatic(NativeString.class, "constructor", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_161.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_162__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_162
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, boolean.class, Object.class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_162__.findStatic(NativeString.class, "constructor", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_162.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_163__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_163
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, boolean.class, Object.class, Object.class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_163__.findStatic(NativeString.class, "constructor", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_163.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_164__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_164
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, boolean.class, Object.class, int.class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_164__.findStatic(NativeString.class, "constructor", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_164.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_165__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_165
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, boolean.class, Object.class, long.class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_165__.findStatic(NativeString.class, "constructor", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_165.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_166__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_166
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, boolean.class, Object.class, double.class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_166__.findStatic(NativeString.class, "constructor", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_166.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_167__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_167
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, boolean.class, Object.class, boolean.class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_167__.findStatic(NativeString.class, "constructor", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_167.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_168__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_168
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(String.class, Object.class, Object[].class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_168__.findStatic(NativeString.class, "fromCharCode", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_168.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_169__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_169
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class, Object.class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_169__.findStatic(NativeString.class, "fromCharCode", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_169.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_16a__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_16a
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(String.class, Object.class, int.class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_16a__.findStatic(NativeString.class, "fromCharCode", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_16a.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_16b__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_16b
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class, int.class, int.class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_16b__.findStatic(NativeString.class, "fromCharCode", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_16b.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_16c__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_16c
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class, int.class, int.class, int.class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_16c__.findStatic(NativeString.class, "fromCharCode", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_16c.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_16d__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_16d
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(String.class, Object.class, int.class, int.class, int.class, int.class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_16d__.findStatic(NativeString.class, "fromCharCode", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_16d.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_16e__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_16e
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(String.class, Object.class, double.class);
            try {
                handle = NativeString$Constructor.__PROCYON__LOOKUP_16e__.findStatic(NativeString.class, "fromCharCode", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_16e.HANDLE = handle;
        }
    }
}
