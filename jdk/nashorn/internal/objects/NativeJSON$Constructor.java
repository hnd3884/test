package jdk.nashorn.internal.objects;

import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;
import java.lang.invoke.MethodHandle;
import jdk.nashorn.internal.runtime.ScriptFunction;
import jdk.nashorn.internal.runtime.Property;
import java.util.Collection;
import jdk.nashorn.internal.runtime.AccessorProperty;
import java.util.ArrayList;
import jdk.nashorn.internal.runtime.PropertyMap;
import jdk.nashorn.internal.runtime.ScriptObject;

final class NativeJSON$Constructor extends ScriptObject
{
    private Object parse;
    private Object stringify;
    private static final PropertyMap $nasgenmap$;
    
    public Object G$parse() {
        return this.parse;
    }
    
    public void S$parse(final Object parse) {
        this.parse = parse;
    }
    
    public Object G$stringify() {
        return this.stringify;
    }
    
    public void S$stringify(final Object stringify) {
        this.stringify = stringify;
    }
    
    static {
        final ArrayList properties = new ArrayList(2);
        properties.add(AccessorProperty.create("parse", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_d6.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_d7.HANDLE));
        properties.add(AccessorProperty.create("stringify", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_d8.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_d9.HANDLE));
        $nasgenmap$ = PropertyMap.newMap(properties);
    }
    
    NativeJSON$Constructor() {
        super(NativeJSON$Constructor.$nasgenmap$);
        this.parse = ScriptFunction.createBuiltin("parse", /* ldc_method_handle(!) */ProcyonConstantHelper_da.HANDLE);
        this.stringify = ScriptFunction.createBuiltin("stringify", /* ldc_method_handle(!) */ProcyonConstantHelper_db.HANDLE);
    }
    
    @Override
    public String getClassName() {
        return "JSON";
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_d6__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_d6
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeJSON$Constructor.__PROCYON__LOOKUP_d6__.findVirtual(NativeJSON$Constructor.class, "G$parse", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_d6.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_d7__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_d7
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeJSON$Constructor.__PROCYON__LOOKUP_d7__.findVirtual(NativeJSON$Constructor.class, "S$parse", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_d7.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_d8__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_d8
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeJSON$Constructor.__PROCYON__LOOKUP_d8__.findVirtual(NativeJSON$Constructor.class, "G$stringify", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_d8.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_d9__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_d9
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeJSON$Constructor.__PROCYON__LOOKUP_d9__.findVirtual(NativeJSON$Constructor.class, "S$stringify", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_d9.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_da__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_da
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class, Object.class, Object.class);
            try {
                handle = NativeJSON$Constructor.__PROCYON__LOOKUP_da__.findStatic(NativeJSON.class, "parse", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_da.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_db__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_db
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class, Object.class, Object.class, Object.class);
            try {
                handle = NativeJSON$Constructor.__PROCYON__LOOKUP_db__.findStatic(NativeJSON.class, "stringify", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_db.HANDLE = handle;
        }
    }
}
