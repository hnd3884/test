package jdk.nashorn.internal.objects;

import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;
import java.lang.invoke.MethodHandle;
import jdk.nashorn.internal.runtime.ScriptFunction;
import jdk.nashorn.internal.runtime.Property;
import java.util.Collection;
import jdk.nashorn.internal.runtime.AccessorProperty;
import java.util.ArrayList;
import jdk.nashorn.internal.runtime.PropertyMap;
import jdk.nashorn.internal.runtime.PrototypeObject;

final class NativeError$Prototype extends PrototypeObject
{
    private Object name;
    private Object message;
    private Object printStackTrace;
    private Object getStackTrace;
    private Object toString;
    private static final PropertyMap $nasgenmap$;
    
    public Object G$name() {
        return this.name;
    }
    
    public void S$name(final Object name) {
        this.name = name;
    }
    
    public Object G$message() {
        return this.message;
    }
    
    public void S$message(final Object message) {
        this.message = message;
    }
    
    public Object G$printStackTrace() {
        return this.printStackTrace;
    }
    
    public void S$printStackTrace(final Object printStackTrace) {
        this.printStackTrace = printStackTrace;
    }
    
    public Object G$getStackTrace() {
        return this.getStackTrace;
    }
    
    public void S$getStackTrace(final Object getStackTrace) {
        this.getStackTrace = getStackTrace;
    }
    
    public Object G$toString() {
        return this.toString;
    }
    
    public void S$toString(final Object toString) {
        this.toString = toString;
    }
    
    static {
        final ArrayList properties = new ArrayList(5);
        properties.add(AccessorProperty.create("name", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_64.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_65.HANDLE));
        properties.add(AccessorProperty.create("message", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_66.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_67.HANDLE));
        properties.add(AccessorProperty.create("printStackTrace", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_68.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_69.HANDLE));
        properties.add(AccessorProperty.create("getStackTrace", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_6a.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_6b.HANDLE));
        properties.add(AccessorProperty.create("toString", 2, /* ldc_method_handle(!) */ProcyonConstantHelper_6c.HANDLE, /* ldc_method_handle(!) */ProcyonConstantHelper_6d.HANDLE));
        $nasgenmap$ = PropertyMap.newMap(properties);
    }
    
    NativeError$Prototype() {
        super(NativeError$Prototype.$nasgenmap$);
        this.printStackTrace = ScriptFunction.createBuiltin("printStackTrace", /* ldc_method_handle(!) */ProcyonConstantHelper_6e.HANDLE);
        this.getStackTrace = ScriptFunction.createBuiltin("getStackTrace", /* ldc_method_handle(!) */ProcyonConstantHelper_6f.HANDLE);
        this.toString = ScriptFunction.createBuiltin("toString", /* ldc_method_handle(!) */ProcyonConstantHelper_70.HANDLE);
    }
    
    @Override
    public String getClassName() {
        return "Error";
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_64__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_64
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeError$Prototype.__PROCYON__LOOKUP_64__.findVirtual(NativeError$Prototype.class, "G$name", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_64.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_65__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_65
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeError$Prototype.__PROCYON__LOOKUP_65__.findVirtual(NativeError$Prototype.class, "S$name", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_65.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_66__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_66
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeError$Prototype.__PROCYON__LOOKUP_66__.findVirtual(NativeError$Prototype.class, "G$message", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_66.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_67__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_67
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeError$Prototype.__PROCYON__LOOKUP_67__.findVirtual(NativeError$Prototype.class, "S$message", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_67.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_68__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_68
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeError$Prototype.__PROCYON__LOOKUP_68__.findVirtual(NativeError$Prototype.class, "G$printStackTrace", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_68.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_69__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_69
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeError$Prototype.__PROCYON__LOOKUP_69__.findVirtual(NativeError$Prototype.class, "S$printStackTrace", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_69.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_6a__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_6a
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeError$Prototype.__PROCYON__LOOKUP_6a__.findVirtual(NativeError$Prototype.class, "G$getStackTrace", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_6a.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_6b__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_6b
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeError$Prototype.__PROCYON__LOOKUP_6b__.findVirtual(NativeError$Prototype.class, "S$getStackTrace", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_6b.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_6c__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_6c
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class);
            try {
                handle = NativeError$Prototype.__PROCYON__LOOKUP_6c__.findVirtual(NativeError$Prototype.class, "G$toString", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_6c.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_6d__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_6d
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(void.class, Object.class);
            try {
                handle = NativeError$Prototype.__PROCYON__LOOKUP_6d__.findVirtual(NativeError$Prototype.class, "S$toString", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_6d.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_6e__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_6e
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeError$Prototype.__PROCYON__LOOKUP_6e__.findStatic(NativeError.class, "printStackTrace", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_6e.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_6f__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_6f
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeError$Prototype.__PROCYON__LOOKUP_6f__.findStatic(NativeError.class, "getStackTrace", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_6f.HANDLE = handle;
        }
    }
    
    private static final MethodHandles.Lookup __PROCYON__LOOKUP_70__ = MethodHandles.lookup();
    
    // This helper class was generated by Procyon to approximate the behavior of a
    // MethodHandle constant that cannot (currently) be represented in Java code.
    private static final class ProcyonConstantHelper_70
    {
        static final MethodHandle HANDLE;
        
        static {
            MethodHandle handle;
            final MethodType type = MethodType.methodType(Object.class, Object.class);
            try {
                handle = NativeError$Prototype.__PROCYON__LOOKUP_70__.findStatic(NativeError.class, "toString", type);
            }
            catch (final ReflectiveOperationException e) {
                handle = MethodHandles.permuteArguments(MethodHandles.insertArguments(MethodHandles.throwException(type.returnType(), e.getClass()), 0, e), type);
            }
            ProcyonConstantHelper_70.HANDLE = handle;
        }
    }
}
