package sun.security.util;

import java.util.ListResourceBundle;

public class Resources_fr extends ListResourceBundle
{
    private static final Object[][] contents;
    
    public Object[][] getContents() {
        return Resources_fr.contents;
    }
    
    static {
        contents = new Object[][] { { "invalid.null.input.s.", "entr\u00e9es NULL non valides" }, { "actions.can.only.be.read.", "les actions sont accessibles en lecture uniquement" }, { "permission.name.name.syntax.invalid.", "syntaxe de nom de droit [{0}] non valide : " }, { "Credential.Class.not.followed.by.a.Principal.Class.and.Name", "Classe Credential non suivie d'une classe et d'un nom de principal" }, { "Principal.Class.not.followed.by.a.Principal.Name", "Classe de principal non suivie d'un nom de principal" }, { "Principal.Name.must.be.surrounded.by.quotes", "Le nom de principal doit \u00eatre indiqu\u00e9 entre guillemets" }, { "Principal.Name.missing.end.quote", "Guillemet fermant manquant pour le nom de principal" }, { "PrivateCredentialPermission.Principal.Class.can.not.be.a.wildcard.value.if.Principal.Name.is.not.a.wildcard.value", "La classe de principal PrivateCredentialPermission ne peut pas \u00eatre une valeur g\u00e9n\u00e9rique (*) si le nom de principal n'est pas une valeur g\u00e9n\u00e9rique (*)" }, { "CredOwner.Principal.Class.class.Principal.Name.name", "CredOwner :\n\tClasse de principal = {0}\n\tNom de principal = {1}" }, { "provided.null.name", "nom NULL fourni" }, { "provided.null.keyword.map", "mappage de mots-cl\u00e9s NULL fourni" }, { "provided.null.OID.map", "mappage OID NULL fourni" }, { "NEWLINE", "\n" }, { "invalid.null.AccessControlContext.provided", "AccessControlContext NULL fourni non valide" }, { "invalid.null.action.provided", "action NULL fournie non valide" }, { "invalid.null.Class.provided", "classe NULL fournie non valide" }, { "Subject.", "Objet :\n" }, { ".Principal.", "\tPrincipal : " }, { ".Public.Credential.", "\tInformations d'identification publiques : " }, { ".Private.Credentials.inaccessible.", "\tInformations d'identification priv\u00e9es inaccessibles\n" }, { ".Private.Credential.", "\tInformations d'identification priv\u00e9es : " }, { ".Private.Credential.inaccessible.", "\tInformations d'identification priv\u00e9es inaccessibles\n" }, { "Subject.is.read.only", "Sujet en lecture seule" }, { "attempting.to.add.an.object.which.is.not.an.instance.of.java.security.Principal.to.a.Subject.s.Principal.Set", "tentative d'ajout d'un objet qui n'est pas une instance de java.security.Principal dans un ensemble de principaux du sujet" }, { "attempting.to.add.an.object.which.is.not.an.instance.of.class", "tentative d''ajout d''un objet qui n''est pas une instance de {0}" }, { "LoginModuleControlFlag.", "LoginModuleControlFlag : " }, { "Invalid.null.input.name", "Entr\u00e9e NULL non valide : nom" }, { "No.LoginModules.configured.for.name", "Aucun LoginModule configur\u00e9 pour {0}" }, { "invalid.null.Subject.provided", "sujet NULL fourni non valide" }, { "invalid.null.CallbackHandler.provided", "CallbackHandler NULL fourni non valide" }, { "null.subject.logout.called.before.login", "sujet NULL - Tentative de d\u00e9connexion avant la connexion" }, { "unable.to.instantiate.LoginModule.module.because.it.does.not.provide.a.no.argument.constructor", "impossible d''instancier LoginModule {0} car il ne fournit pas de constructeur sans argument" }, { "unable.to.instantiate.LoginModule", "impossible d'instancier LoginModule" }, { "unable.to.instantiate.LoginModule.", "impossible d'instancier LoginModule : " }, { "unable.to.find.LoginModule.class.", "classe LoginModule introuvable : " }, { "unable.to.access.LoginModule.", "impossible d'acc\u00e9der \u00e0 LoginModule : " }, { "Login.Failure.all.modules.ignored", "Echec de connexion : tous les modules ont \u00e9t\u00e9 ignor\u00e9s" }, { "java.security.policy.error.parsing.policy.message", "java.security.policy : erreur d''analyse de {0} :\n\t{1}" }, { "java.security.policy.error.adding.Permission.perm.message", "java.security.policy : erreur d''ajout de droit, {0} :\n\t{1}" }, { "java.security.policy.error.adding.Entry.message", "java.security.policy : erreur d''ajout d''entr\u00e9e :\n\t{0}" }, { "alias.name.not.provided.pe.name.", "nom d''alias non fourni ({0})" }, { "unable.to.perform.substitution.on.alias.suffix", "impossible d''effectuer une substitution pour l''alias, {0}" }, { "substitution.value.prefix.unsupported", "valeur de substitution, {0}, non prise en charge" }, { "LPARAM", "(" }, { "RPARAM", ")" }, { "type.can.t.be.null", "le type ne peut \u00eatre NULL" }, { "keystorePasswordURL.can.not.be.specified.without.also.specifying.keystore", "Impossible de sp\u00e9cifier keystorePasswordURL sans indiquer aussi le fichier de cl\u00e9s" }, { "expected.keystore.type", "type de fichier de cl\u00e9s attendu" }, { "expected.keystore.provider", "fournisseur de fichier de cl\u00e9s attendu" }, { "multiple.Codebase.expressions", "expressions Codebase multiples" }, { "multiple.SignedBy.expressions", "expressions SignedBy multiples" }, { "duplicate.keystore.domain.name", "nom de domaine de fichier de cl\u00e9s en double : {0}" }, { "duplicate.keystore.name", "nom de fichier de cl\u00e9s en double : {0}" }, { "SignedBy.has.empty.alias", "SignedBy poss\u00e8de un alias vide" }, { "can.not.specify.Principal.with.a.wildcard.class.without.a.wildcard.name", "impossible de sp\u00e9cifier le principal avec une classe g\u00e9n\u00e9rique sans nom g\u00e9n\u00e9rique" }, { "expected.codeBase.or.SignedBy.or.Principal", "codeBase, SignedBy ou Principal attendu" }, { "expected.permission.entry", "entr\u00e9e de droit attendue" }, { "number.", "nombre " }, { "expected.expect.read.end.of.file.", "attendu [{0}], lu [fin de fichier]" }, { "expected.read.end.of.file.", "attendu [;], lu [fin de fichier]" }, { "line.number.msg", "ligne {0} : {1}" }, { "line.number.expected.expect.found.actual.", "ligne {0} : attendu [{1}], trouv\u00e9 [{2}]" }, { "null.principalClass.or.principalName", "principalClass ou principalName NULL" }, { "PKCS11.Token.providerName.Password.", "Mot de passe PKCS11 Token [{0}] : " }, { "unable.to.instantiate.Subject.based.policy", "impossible d'instancier les r\u00e8gles bas\u00e9es sur le sujet" } };
    }
}
