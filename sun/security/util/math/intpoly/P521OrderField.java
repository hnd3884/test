package sun.security.util.math.intpoly;

import java.math.BigInteger;

public class P521OrderField extends IntegerPolynomial
{
    private static final int BITS_PER_LIMB = 28;
    private static final int NUM_LIMBS = 19;
    private static final int MAX_ADDS = 1;
    public static final BigInteger MODULUS;
    private static final long CARRY_ADD = 134217728L;
    private static final int LIMB_MASK = 268435455;
    
    public P521OrderField() {
        super(28, 19, 1, P521OrderField.MODULUS);
    }
    
    private static BigInteger evaluateModulus() {
        return BigInteger.valueOf(2L).pow(521).add(BigInteger.valueOf(20472841L)).add(BigInteger.valueOf(2L).pow(28).multiply(BigInteger.valueOf(117141993L))).subtract(BigInteger.valueOf(2L).pow(56).multiply(BigInteger.valueOf(62411077L))).subtract(BigInteger.valueOf(2L).pow(84).multiply(BigInteger.valueOf(56915814L))).add(BigInteger.valueOf(2L).pow(112).multiply(BigInteger.valueOf(97532854L))).add(BigInteger.valueOf(2L).pow(140).multiply(BigInteger.valueOf(76509338L))).subtract(BigInteger.valueOf(2L).pow(168).multiply(BigInteger.valueOf(75510783L))).subtract(BigInteger.valueOf(2L).pow(196).multiply(BigInteger.valueOf(67962521L))).add(BigInteger.valueOf(2L).pow(224).multiply(BigInteger.valueOf(25593732L))).subtract(BigInteger.valueOf(2L).pow(252).multiply(BigInteger.valueOf(91L)));
    }
    
    @Override
    protected void finalCarryReduceLast(final long[] array) {
        final long n = array[18] >> 17;
        final int n2 = 18;
        array[n2] -= n << 17;
        final long n3 = -20472841L * n;
        final int n4 = 0;
        array[n4] += n3;
        final long n5 = -117141993L * n;
        final int n6 = 1;
        array[n6] += n5;
        final long n7 = 62411077L * n;
        final int n8 = 2;
        array[n8] += n7;
        final long n9 = 56915814L * n;
        final int n10 = 3;
        array[n10] += n9;
        final long n11 = -97532854L * n;
        final int n12 = 4;
        array[n12] += n11;
        final long n13 = -76509338L * n;
        final int n14 = 5;
        array[n14] += n13;
        final long n15 = 75510783L * n;
        final int n16 = 6;
        array[n16] += n15;
        final long n17 = 67962521L * n;
        final int n18 = 7;
        array[n18] += n17;
        final long n19 = -25593732L * n;
        final int n20 = 8;
        array[n20] += n19;
        final long n21 = 91L * n;
        final int n22 = 9;
        array[n22] += n21;
    }
    
    private void carryReduce(final long[] array, long n, long n2, long n3, long n4, long n5, long n6, long n7, long n8, long n9, long n10, long n11, long n12, long n13, long n14, long n15, long n16, long n17, long n18, long n19, long n20, long n21, long n22, long n23, long n24, long n25, long n26, long n27, long n28, long n29, long n30, long n31, long n32, long n33, long n34, long n35, long n36, long n37) {
        final long n38 = 0L;
        final long n39 = n + 134217728L >> 28;
        n -= n39 << 28;
        n2 += n39;
        final long n40 = n2 + 134217728L >> 28;
        n2 -= n40 << 28;
        n3 += n40;
        final long n41 = n3 + 134217728L >> 28;
        n3 -= n41 << 28;
        n4 += n41;
        final long n42 = n4 + 134217728L >> 28;
        n4 -= n42 << 28;
        n5 += n42;
        final long n43 = n5 + 134217728L >> 28;
        n5 -= n43 << 28;
        n6 += n43;
        final long n44 = n6 + 134217728L >> 28;
        n6 -= n44 << 28;
        n7 += n44;
        final long n45 = n7 + 134217728L >> 28;
        n7 -= n45 << 28;
        n8 += n45;
        final long n46 = n8 + 134217728L >> 28;
        n8 -= n46 << 28;
        n9 += n46;
        final long n47 = n9 + 134217728L >> 28;
        n9 -= n47 << 28;
        n10 += n47;
        final long n48 = n10 + 134217728L >> 28;
        n10 -= n48 << 28;
        n11 += n48;
        final long n49 = n11 + 134217728L >> 28;
        n11 -= n49 << 28;
        n12 += n49;
        final long n50 = n12 + 134217728L >> 28;
        n12 -= n50 << 28;
        n13 += n50;
        final long n51 = n13 + 134217728L >> 28;
        n13 -= n51 << 28;
        n14 += n51;
        final long n52 = n14 + 134217728L >> 28;
        n14 -= n52 << 28;
        n15 += n52;
        final long n53 = n15 + 134217728L >> 28;
        n15 -= n53 << 28;
        n16 += n53;
        final long n54 = n16 + 134217728L >> 28;
        n16 -= n54 << 28;
        n17 += n54;
        final long n55 = n17 + 134217728L >> 28;
        n17 -= n55 << 28;
        n18 += n55;
        final long n56 = n18 + 134217728L >> 28;
        n18 -= n56 << 28;
        n19 += n56;
        final long n57 = n19 + 134217728L >> 28;
        n19 -= n57 << 28;
        n20 += n57;
        final long n58 = n20 + 134217728L >> 28;
        n20 -= n58 << 28;
        n21 += n58;
        final long n59 = n21 + 134217728L >> 28;
        n21 -= n59 << 28;
        n22 += n59;
        final long n60 = n22 + 134217728L >> 28;
        n22 -= n60 << 28;
        n23 += n60;
        final long n61 = n23 + 134217728L >> 28;
        n23 -= n61 << 28;
        n24 += n61;
        final long n62 = n24 + 134217728L >> 28;
        n24 -= n62 << 28;
        n25 += n62;
        final long n63 = n25 + 134217728L >> 28;
        n25 -= n63 << 28;
        n26 += n63;
        final long n64 = n26 + 134217728L >> 28;
        n26 -= n64 << 28;
        n27 += n64;
        final long n65 = n27 + 134217728L >> 28;
        n27 -= n65 << 28;
        n28 += n65;
        final long n66 = n28 + 134217728L >> 28;
        n28 -= n66 << 28;
        n29 += n66;
        final long n67 = n29 + 134217728L >> 28;
        n29 -= n67 << 28;
        n30 += n67;
        final long n68 = n30 + 134217728L >> 28;
        n30 -= n68 << 28;
        n31 += n68;
        final long n69 = n31 + 134217728L >> 28;
        n31 -= n69 << 28;
        n32 += n69;
        final long n70 = n32 + 134217728L >> 28;
        n32 -= n70 << 28;
        n33 += n70;
        final long n71 = n33 + 134217728L >> 28;
        n33 -= n71 << 28;
        n34 += n71;
        final long n72 = n34 + 134217728L >> 28;
        n34 -= n72 << 28;
        n35 += n72;
        final long n73 = n35 + 134217728L >> 28;
        n35 -= n73 << 28;
        n36 += n73;
        final long n74 = n36 + 134217728L >> 28;
        n36 -= n74 << 28;
        n37 += n74;
        final long n75 = n37 + 134217728L >> 28;
        n37 -= n75 << 28;
        this.carryReduce0(array, n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38 + n75);
    }
    
    void carryReduce0(final long[] array, final long n, final long n2, final long n3, final long n4, final long n5, final long n6, final long n7, final long n8, final long n9, long n10, long n11, long n12, long n13, long n14, long n15, long n16, long n17, long n18, long n19, long n20, long n21, long n22, long n23, long n24, long n25, long n26, long n27, long n28, long n29, final long n30, final long n31, final long n32, final long n33, final long n34, final long n35, final long n36, final long n37, final long n38) {
        final long n39 = -20472841L * n38;
        n19 += (n39 << 11 & 0xFFFFFFFL);
        n20 += n39 >> 17;
        final long n40 = -117141993L * n38;
        n20 += (n40 << 11 & 0xFFFFFFFL);
        n21 += n40 >> 17;
        final long n41 = 62411077L * n38;
        n21 += (n41 << 11 & 0xFFFFFFFL);
        n22 += n41 >> 17;
        final long n42 = 56915814L * n38;
        n22 += (n42 << 11 & 0xFFFFFFFL);
        n23 += n42 >> 17;
        final long n43 = -97532854L * n38;
        n23 += (n43 << 11 & 0xFFFFFFFL);
        n24 += n43 >> 17;
        final long n44 = -76509338L * n38;
        n24 += (n44 << 11 & 0xFFFFFFFL);
        n25 += n44 >> 17;
        final long n45 = 75510783L * n38;
        n25 += (n45 << 11 & 0xFFFFFFFL);
        n26 += n45 >> 17;
        final long n46 = 67962521L * n38;
        n26 += (n46 << 11 & 0xFFFFFFFL);
        n27 += n46 >> 17;
        final long n47 = -25593732L * n38;
        n27 += (n47 << 11 & 0xFFFFFFFL);
        n28 += n47 >> 17;
        final long n48 = 91L * n38;
        n28 += (n48 << 11 & 0xFFFFFFFL);
        n29 += n48 >> 17;
        final long n49 = -20472841L * n37;
        n18 += (n49 << 11 & 0xFFFFFFFL);
        n19 += n49 >> 17;
        final long n50 = -117141993L * n37;
        n19 += (n50 << 11 & 0xFFFFFFFL);
        n20 += n50 >> 17;
        final long n51 = 62411077L * n37;
        n20 += (n51 << 11 & 0xFFFFFFFL);
        n21 += n51 >> 17;
        final long n52 = 56915814L * n37;
        n21 += (n52 << 11 & 0xFFFFFFFL);
        n22 += n52 >> 17;
        final long n53 = -97532854L * n37;
        n22 += (n53 << 11 & 0xFFFFFFFL);
        n23 += n53 >> 17;
        final long n54 = -76509338L * n37;
        n23 += (n54 << 11 & 0xFFFFFFFL);
        n24 += n54 >> 17;
        final long n55 = 75510783L * n37;
        n24 += (n55 << 11 & 0xFFFFFFFL);
        n25 += n55 >> 17;
        final long n56 = 67962521L * n37;
        n25 += (n56 << 11 & 0xFFFFFFFL);
        n26 += n56 >> 17;
        final long n57 = -25593732L * n37;
        n26 += (n57 << 11 & 0xFFFFFFFL);
        n27 += n57 >> 17;
        final long n58 = 91L * n37;
        n27 += (n58 << 11 & 0xFFFFFFFL);
        n28 += n58 >> 17;
        final long n59 = -20472841L * n36;
        n17 += (n59 << 11 & 0xFFFFFFFL);
        n18 += n59 >> 17;
        final long n60 = -117141993L * n36;
        n18 += (n60 << 11 & 0xFFFFFFFL);
        n19 += n60 >> 17;
        final long n61 = 62411077L * n36;
        n19 += (n61 << 11 & 0xFFFFFFFL);
        n20 += n61 >> 17;
        final long n62 = 56915814L * n36;
        n20 += (n62 << 11 & 0xFFFFFFFL);
        n21 += n62 >> 17;
        final long n63 = -97532854L * n36;
        n21 += (n63 << 11 & 0xFFFFFFFL);
        n22 += n63 >> 17;
        final long n64 = -76509338L * n36;
        n22 += (n64 << 11 & 0xFFFFFFFL);
        n23 += n64 >> 17;
        final long n65 = 75510783L * n36;
        n23 += (n65 << 11 & 0xFFFFFFFL);
        n24 += n65 >> 17;
        final long n66 = 67962521L * n36;
        n24 += (n66 << 11 & 0xFFFFFFFL);
        n25 += n66 >> 17;
        final long n67 = -25593732L * n36;
        n25 += (n67 << 11 & 0xFFFFFFFL);
        n26 += n67 >> 17;
        final long n68 = 91L * n36;
        n26 += (n68 << 11 & 0xFFFFFFFL);
        n27 += n68 >> 17;
        final long n69 = -20472841L * n35;
        n16 += (n69 << 11 & 0xFFFFFFFL);
        n17 += n69 >> 17;
        final long n70 = -117141993L * n35;
        n17 += (n70 << 11 & 0xFFFFFFFL);
        n18 += n70 >> 17;
        final long n71 = 62411077L * n35;
        n18 += (n71 << 11 & 0xFFFFFFFL);
        n19 += n71 >> 17;
        final long n72 = 56915814L * n35;
        n19 += (n72 << 11 & 0xFFFFFFFL);
        n20 += n72 >> 17;
        final long n73 = -97532854L * n35;
        n20 += (n73 << 11 & 0xFFFFFFFL);
        n21 += n73 >> 17;
        final long n74 = -76509338L * n35;
        n21 += (n74 << 11 & 0xFFFFFFFL);
        n22 += n74 >> 17;
        final long n75 = 75510783L * n35;
        n22 += (n75 << 11 & 0xFFFFFFFL);
        n23 += n75 >> 17;
        final long n76 = 67962521L * n35;
        n23 += (n76 << 11 & 0xFFFFFFFL);
        n24 += n76 >> 17;
        final long n77 = -25593732L * n35;
        n24 += (n77 << 11 & 0xFFFFFFFL);
        n25 += n77 >> 17;
        final long n78 = 91L * n35;
        n25 += (n78 << 11 & 0xFFFFFFFL);
        n26 += n78 >> 17;
        final long n79 = -20472841L * n34;
        n15 += (n79 << 11 & 0xFFFFFFFL);
        n16 += n79 >> 17;
        final long n80 = -117141993L * n34;
        n16 += (n80 << 11 & 0xFFFFFFFL);
        n17 += n80 >> 17;
        final long n81 = 62411077L * n34;
        n17 += (n81 << 11 & 0xFFFFFFFL);
        n18 += n81 >> 17;
        final long n82 = 56915814L * n34;
        n18 += (n82 << 11 & 0xFFFFFFFL);
        n19 += n82 >> 17;
        final long n83 = -97532854L * n34;
        n19 += (n83 << 11 & 0xFFFFFFFL);
        n20 += n83 >> 17;
        final long n84 = -76509338L * n34;
        n20 += (n84 << 11 & 0xFFFFFFFL);
        n21 += n84 >> 17;
        final long n85 = 75510783L * n34;
        n21 += (n85 << 11 & 0xFFFFFFFL);
        n22 += n85 >> 17;
        final long n86 = 67962521L * n34;
        n22 += (n86 << 11 & 0xFFFFFFFL);
        n23 += n86 >> 17;
        final long n87 = -25593732L * n34;
        n23 += (n87 << 11 & 0xFFFFFFFL);
        n24 += n87 >> 17;
        final long n88 = 91L * n34;
        n24 += (n88 << 11 & 0xFFFFFFFL);
        n25 += n88 >> 17;
        final long n89 = -20472841L * n33;
        n14 += (n89 << 11 & 0xFFFFFFFL);
        n15 += n89 >> 17;
        final long n90 = -117141993L * n33;
        n15 += (n90 << 11 & 0xFFFFFFFL);
        n16 += n90 >> 17;
        final long n91 = 62411077L * n33;
        n16 += (n91 << 11 & 0xFFFFFFFL);
        n17 += n91 >> 17;
        final long n92 = 56915814L * n33;
        n17 += (n92 << 11 & 0xFFFFFFFL);
        n18 += n92 >> 17;
        final long n93 = -97532854L * n33;
        n18 += (n93 << 11 & 0xFFFFFFFL);
        n19 += n93 >> 17;
        final long n94 = -76509338L * n33;
        n19 += (n94 << 11 & 0xFFFFFFFL);
        n20 += n94 >> 17;
        final long n95 = 75510783L * n33;
        n20 += (n95 << 11 & 0xFFFFFFFL);
        n21 += n95 >> 17;
        final long n96 = 67962521L * n33;
        n21 += (n96 << 11 & 0xFFFFFFFL);
        n22 += n96 >> 17;
        final long n97 = -25593732L * n33;
        n22 += (n97 << 11 & 0xFFFFFFFL);
        n23 += n97 >> 17;
        final long n98 = 91L * n33;
        n23 += (n98 << 11 & 0xFFFFFFFL);
        n24 += n98 >> 17;
        final long n99 = -20472841L * n32;
        n13 += (n99 << 11 & 0xFFFFFFFL);
        n14 += n99 >> 17;
        final long n100 = -117141993L * n32;
        n14 += (n100 << 11 & 0xFFFFFFFL);
        n15 += n100 >> 17;
        final long n101 = 62411077L * n32;
        n15 += (n101 << 11 & 0xFFFFFFFL);
        n16 += n101 >> 17;
        final long n102 = 56915814L * n32;
        n16 += (n102 << 11 & 0xFFFFFFFL);
        n17 += n102 >> 17;
        final long n103 = -97532854L * n32;
        n17 += (n103 << 11 & 0xFFFFFFFL);
        n18 += n103 >> 17;
        final long n104 = -76509338L * n32;
        n18 += (n104 << 11 & 0xFFFFFFFL);
        n19 += n104 >> 17;
        final long n105 = 75510783L * n32;
        n19 += (n105 << 11 & 0xFFFFFFFL);
        n20 += n105 >> 17;
        final long n106 = 67962521L * n32;
        n20 += (n106 << 11 & 0xFFFFFFFL);
        n21 += n106 >> 17;
        final long n107 = -25593732L * n32;
        n21 += (n107 << 11 & 0xFFFFFFFL);
        n22 += n107 >> 17;
        final long n108 = 91L * n32;
        n22 += (n108 << 11 & 0xFFFFFFFL);
        n23 += n108 >> 17;
        final long n109 = -20472841L * n31;
        n12 += (n109 << 11 & 0xFFFFFFFL);
        n13 += n109 >> 17;
        final long n110 = -117141993L * n31;
        n13 += (n110 << 11 & 0xFFFFFFFL);
        n14 += n110 >> 17;
        final long n111 = 62411077L * n31;
        n14 += (n111 << 11 & 0xFFFFFFFL);
        n15 += n111 >> 17;
        final long n112 = 56915814L * n31;
        n15 += (n112 << 11 & 0xFFFFFFFL);
        n16 += n112 >> 17;
        final long n113 = -97532854L * n31;
        n16 += (n113 << 11 & 0xFFFFFFFL);
        n17 += n113 >> 17;
        final long n114 = -76509338L * n31;
        n17 += (n114 << 11 & 0xFFFFFFFL);
        n18 += n114 >> 17;
        final long n115 = 75510783L * n31;
        n18 += (n115 << 11 & 0xFFFFFFFL);
        n19 += n115 >> 17;
        final long n116 = 67962521L * n31;
        n19 += (n116 << 11 & 0xFFFFFFFL);
        n20 += n116 >> 17;
        final long n117 = -25593732L * n31;
        n20 += (n117 << 11 & 0xFFFFFFFL);
        n21 += n117 >> 17;
        final long n118 = 91L * n31;
        n21 += (n118 << 11 & 0xFFFFFFFL);
        n22 += n118 >> 17;
        final long n119 = -20472841L * n30;
        n11 += (n119 << 11 & 0xFFFFFFFL);
        n12 += n119 >> 17;
        final long n120 = -117141993L * n30;
        n12 += (n120 << 11 & 0xFFFFFFFL);
        n13 += n120 >> 17;
        final long n121 = 62411077L * n30;
        n13 += (n121 << 11 & 0xFFFFFFFL);
        n14 += n121 >> 17;
        final long n122 = 56915814L * n30;
        n14 += (n122 << 11 & 0xFFFFFFFL);
        n15 += n122 >> 17;
        final long n123 = -97532854L * n30;
        n15 += (n123 << 11 & 0xFFFFFFFL);
        n16 += n123 >> 17;
        final long n124 = -76509338L * n30;
        n16 += (n124 << 11 & 0xFFFFFFFL);
        n17 += n124 >> 17;
        final long n125 = 75510783L * n30;
        n17 += (n125 << 11 & 0xFFFFFFFL);
        n18 += n125 >> 17;
        final long n126 = 67962521L * n30;
        n18 += (n126 << 11 & 0xFFFFFFFL);
        n19 += n126 >> 17;
        final long n127 = -25593732L * n30;
        n19 += (n127 << 11 & 0xFFFFFFFL);
        n20 += n127 >> 17;
        final long n128 = 91L * n30;
        n20 += (n128 << 11 & 0xFFFFFFFL);
        n21 += n128 >> 17;
        final long n129 = -20472841L * n29;
        n10 += (n129 << 11 & 0xFFFFFFFL);
        n11 += n129 >> 17;
        final long n130 = -117141993L * n29;
        n11 += (n130 << 11 & 0xFFFFFFFL);
        n12 += n130 >> 17;
        final long n131 = 62411077L * n29;
        n12 += (n131 << 11 & 0xFFFFFFFL);
        n13 += n131 >> 17;
        final long n132 = 56915814L * n29;
        n13 += (n132 << 11 & 0xFFFFFFFL);
        n14 += n132 >> 17;
        final long n133 = -97532854L * n29;
        n14 += (n133 << 11 & 0xFFFFFFFL);
        n15 += n133 >> 17;
        final long n134 = -76509338L * n29;
        n15 += (n134 << 11 & 0xFFFFFFFL);
        n16 += n134 >> 17;
        final long n135 = 75510783L * n29;
        n16 += (n135 << 11 & 0xFFFFFFFL);
        n17 += n135 >> 17;
        final long n136 = 67962521L * n29;
        n17 += (n136 << 11 & 0xFFFFFFFL);
        n18 += n136 >> 17;
        final long n137 = -25593732L * n29;
        n18 += (n137 << 11 & 0xFFFFFFFL);
        n19 += n137 >> 17;
        final long n138 = 91L * n29;
        n19 += (n138 << 11 & 0xFFFFFFFL);
        n20 += n138 >> 17;
        this.carryReduce1(array, n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38);
    }
    
    void carryReduce1(final long[] array, long n, long n2, long n3, long n4, long n5, long n6, long n7, long n8, long n9, long n10, long n11, long n12, long n13, long n14, long n15, long n16, long n17, long n18, long n19, long n20, long n21, long n22, long n23, long n24, long n25, long n26, long n27, long n28, final long n29, final long n30, final long n31, final long n32, final long n33, final long n34, final long n35, final long n36, final long n37, final long n38) {
        final long n39 = n20 + 134217728L >> 28;
        n20 -= n39 << 28;
        n21 += n39;
        final long n40 = n21 + 134217728L >> 28;
        n21 -= n40 << 28;
        n22 += n40;
        final long n41 = n22 + 134217728L >> 28;
        n22 -= n41 << 28;
        n23 += n41;
        final long n42 = n23 + 134217728L >> 28;
        n23 -= n42 << 28;
        n24 += n42;
        final long n43 = n24 + 134217728L >> 28;
        n24 -= n43 << 28;
        n25 += n43;
        final long n44 = n25 + 134217728L >> 28;
        n25 -= n44 << 28;
        n26 += n44;
        final long n45 = n26 + 134217728L >> 28;
        n26 -= n45 << 28;
        n27 += n45;
        final long n46 = n27 + 134217728L >> 28;
        n27 -= n46 << 28;
        n28 += n46;
        final long n47 = -20472841L * n28;
        n9 += (n47 << 11 & 0xFFFFFFFL);
        n10 += n47 >> 17;
        final long n48 = -117141993L * n28;
        n10 += (n48 << 11 & 0xFFFFFFFL);
        n11 += n48 >> 17;
        final long n49 = 62411077L * n28;
        n11 += (n49 << 11 & 0xFFFFFFFL);
        n12 += n49 >> 17;
        final long n50 = 56915814L * n28;
        n12 += (n50 << 11 & 0xFFFFFFFL);
        n13 += n50 >> 17;
        final long n51 = -97532854L * n28;
        n13 += (n51 << 11 & 0xFFFFFFFL);
        n14 += n51 >> 17;
        final long n52 = -76509338L * n28;
        n14 += (n52 << 11 & 0xFFFFFFFL);
        n15 += n52 >> 17;
        final long n53 = 75510783L * n28;
        n15 += (n53 << 11 & 0xFFFFFFFL);
        n16 += n53 >> 17;
        final long n54 = 67962521L * n28;
        n16 += (n54 << 11 & 0xFFFFFFFL);
        n17 += n54 >> 17;
        final long n55 = -25593732L * n28;
        n17 += (n55 << 11 & 0xFFFFFFFL);
        n18 += n55 >> 17;
        final long n56 = 91L * n28;
        n18 += (n56 << 11 & 0xFFFFFFFL);
        n19 += n56 >> 17;
        final long n57 = -20472841L * n27;
        n8 += (n57 << 11 & 0xFFFFFFFL);
        n9 += n57 >> 17;
        final long n58 = -117141993L * n27;
        n9 += (n58 << 11 & 0xFFFFFFFL);
        n10 += n58 >> 17;
        final long n59 = 62411077L * n27;
        n10 += (n59 << 11 & 0xFFFFFFFL);
        n11 += n59 >> 17;
        final long n60 = 56915814L * n27;
        n11 += (n60 << 11 & 0xFFFFFFFL);
        n12 += n60 >> 17;
        final long n61 = -97532854L * n27;
        n12 += (n61 << 11 & 0xFFFFFFFL);
        n13 += n61 >> 17;
        final long n62 = -76509338L * n27;
        n13 += (n62 << 11 & 0xFFFFFFFL);
        n14 += n62 >> 17;
        final long n63 = 75510783L * n27;
        n14 += (n63 << 11 & 0xFFFFFFFL);
        n15 += n63 >> 17;
        final long n64 = 67962521L * n27;
        n15 += (n64 << 11 & 0xFFFFFFFL);
        n16 += n64 >> 17;
        final long n65 = -25593732L * n27;
        n16 += (n65 << 11 & 0xFFFFFFFL);
        n17 += n65 >> 17;
        final long n66 = 91L * n27;
        n17 += (n66 << 11 & 0xFFFFFFFL);
        n18 += n66 >> 17;
        final long n67 = -20472841L * n26;
        n7 += (n67 << 11 & 0xFFFFFFFL);
        n8 += n67 >> 17;
        final long n68 = -117141993L * n26;
        n8 += (n68 << 11 & 0xFFFFFFFL);
        n9 += n68 >> 17;
        final long n69 = 62411077L * n26;
        n9 += (n69 << 11 & 0xFFFFFFFL);
        n10 += n69 >> 17;
        final long n70 = 56915814L * n26;
        n10 += (n70 << 11 & 0xFFFFFFFL);
        n11 += n70 >> 17;
        final long n71 = -97532854L * n26;
        n11 += (n71 << 11 & 0xFFFFFFFL);
        n12 += n71 >> 17;
        final long n72 = -76509338L * n26;
        n12 += (n72 << 11 & 0xFFFFFFFL);
        n13 += n72 >> 17;
        final long n73 = 75510783L * n26;
        n13 += (n73 << 11 & 0xFFFFFFFL);
        n14 += n73 >> 17;
        final long n74 = 67962521L * n26;
        n14 += (n74 << 11 & 0xFFFFFFFL);
        n15 += n74 >> 17;
        final long n75 = -25593732L * n26;
        n15 += (n75 << 11 & 0xFFFFFFFL);
        n16 += n75 >> 17;
        final long n76 = 91L * n26;
        n16 += (n76 << 11 & 0xFFFFFFFL);
        n17 += n76 >> 17;
        final long n77 = -20472841L * n25;
        n6 += (n77 << 11 & 0xFFFFFFFL);
        n7 += n77 >> 17;
        final long n78 = -117141993L * n25;
        n7 += (n78 << 11 & 0xFFFFFFFL);
        n8 += n78 >> 17;
        final long n79 = 62411077L * n25;
        n8 += (n79 << 11 & 0xFFFFFFFL);
        n9 += n79 >> 17;
        final long n80 = 56915814L * n25;
        n9 += (n80 << 11 & 0xFFFFFFFL);
        n10 += n80 >> 17;
        final long n81 = -97532854L * n25;
        n10 += (n81 << 11 & 0xFFFFFFFL);
        n11 += n81 >> 17;
        final long n82 = -76509338L * n25;
        n11 += (n82 << 11 & 0xFFFFFFFL);
        n12 += n82 >> 17;
        final long n83 = 75510783L * n25;
        n12 += (n83 << 11 & 0xFFFFFFFL);
        n13 += n83 >> 17;
        final long n84 = 67962521L * n25;
        n13 += (n84 << 11 & 0xFFFFFFFL);
        n14 += n84 >> 17;
        final long n85 = -25593732L * n25;
        n14 += (n85 << 11 & 0xFFFFFFFL);
        n15 += n85 >> 17;
        final long n86 = 91L * n25;
        n15 += (n86 << 11 & 0xFFFFFFFL);
        n16 += n86 >> 17;
        final long n87 = -20472841L * n24;
        n5 += (n87 << 11 & 0xFFFFFFFL);
        n6 += n87 >> 17;
        final long n88 = -117141993L * n24;
        n6 += (n88 << 11 & 0xFFFFFFFL);
        n7 += n88 >> 17;
        final long n89 = 62411077L * n24;
        n7 += (n89 << 11 & 0xFFFFFFFL);
        n8 += n89 >> 17;
        final long n90 = 56915814L * n24;
        n8 += (n90 << 11 & 0xFFFFFFFL);
        n9 += n90 >> 17;
        final long n91 = -97532854L * n24;
        n9 += (n91 << 11 & 0xFFFFFFFL);
        n10 += n91 >> 17;
        final long n92 = -76509338L * n24;
        n10 += (n92 << 11 & 0xFFFFFFFL);
        n11 += n92 >> 17;
        final long n93 = 75510783L * n24;
        n11 += (n93 << 11 & 0xFFFFFFFL);
        n12 += n93 >> 17;
        final long n94 = 67962521L * n24;
        n12 += (n94 << 11 & 0xFFFFFFFL);
        n13 += n94 >> 17;
        final long n95 = -25593732L * n24;
        n13 += (n95 << 11 & 0xFFFFFFFL);
        n14 += n95 >> 17;
        final long n96 = 91L * n24;
        n14 += (n96 << 11 & 0xFFFFFFFL);
        n15 += n96 >> 17;
        final long n97 = -20472841L * n23;
        n4 += (n97 << 11 & 0xFFFFFFFL);
        n5 += n97 >> 17;
        final long n98 = -117141993L * n23;
        n5 += (n98 << 11 & 0xFFFFFFFL);
        n6 += n98 >> 17;
        final long n99 = 62411077L * n23;
        n6 += (n99 << 11 & 0xFFFFFFFL);
        n7 += n99 >> 17;
        final long n100 = 56915814L * n23;
        n7 += (n100 << 11 & 0xFFFFFFFL);
        n8 += n100 >> 17;
        final long n101 = -97532854L * n23;
        n8 += (n101 << 11 & 0xFFFFFFFL);
        n9 += n101 >> 17;
        final long n102 = -76509338L * n23;
        n9 += (n102 << 11 & 0xFFFFFFFL);
        n10 += n102 >> 17;
        final long n103 = 75510783L * n23;
        n10 += (n103 << 11 & 0xFFFFFFFL);
        n11 += n103 >> 17;
        final long n104 = 67962521L * n23;
        n11 += (n104 << 11 & 0xFFFFFFFL);
        n12 += n104 >> 17;
        final long n105 = -25593732L * n23;
        n12 += (n105 << 11 & 0xFFFFFFFL);
        n13 += n105 >> 17;
        final long n106 = 91L * n23;
        n13 += (n106 << 11 & 0xFFFFFFFL);
        n14 += n106 >> 17;
        final long n107 = -20472841L * n22;
        n3 += (n107 << 11 & 0xFFFFFFFL);
        n4 += n107 >> 17;
        final long n108 = -117141993L * n22;
        n4 += (n108 << 11 & 0xFFFFFFFL);
        n5 += n108 >> 17;
        final long n109 = 62411077L * n22;
        n5 += (n109 << 11 & 0xFFFFFFFL);
        n6 += n109 >> 17;
        final long n110 = 56915814L * n22;
        n6 += (n110 << 11 & 0xFFFFFFFL);
        n7 += n110 >> 17;
        final long n111 = -97532854L * n22;
        n7 += (n111 << 11 & 0xFFFFFFFL);
        n8 += n111 >> 17;
        final long n112 = -76509338L * n22;
        n8 += (n112 << 11 & 0xFFFFFFFL);
        n9 += n112 >> 17;
        final long n113 = 75510783L * n22;
        n9 += (n113 << 11 & 0xFFFFFFFL);
        n10 += n113 >> 17;
        final long n114 = 67962521L * n22;
        n10 += (n114 << 11 & 0xFFFFFFFL);
        n11 += n114 >> 17;
        final long n115 = -25593732L * n22;
        n11 += (n115 << 11 & 0xFFFFFFFL);
        n12 += n115 >> 17;
        final long n116 = 91L * n22;
        n12 += (n116 << 11 & 0xFFFFFFFL);
        n13 += n116 >> 17;
        final long n117 = -20472841L * n21;
        n2 += (n117 << 11 & 0xFFFFFFFL);
        n3 += n117 >> 17;
        final long n118 = -117141993L * n21;
        n3 += (n118 << 11 & 0xFFFFFFFL);
        n4 += n118 >> 17;
        final long n119 = 62411077L * n21;
        n4 += (n119 << 11 & 0xFFFFFFFL);
        n5 += n119 >> 17;
        final long n120 = 56915814L * n21;
        n5 += (n120 << 11 & 0xFFFFFFFL);
        n6 += n120 >> 17;
        final long n121 = -97532854L * n21;
        n6 += (n121 << 11 & 0xFFFFFFFL);
        n7 += n121 >> 17;
        final long n122 = -76509338L * n21;
        n7 += (n122 << 11 & 0xFFFFFFFL);
        n8 += n122 >> 17;
        final long n123 = 75510783L * n21;
        n8 += (n123 << 11 & 0xFFFFFFFL);
        n9 += n123 >> 17;
        final long n124 = 67962521L * n21;
        n9 += (n124 << 11 & 0xFFFFFFFL);
        n10 += n124 >> 17;
        final long n125 = -25593732L * n21;
        n10 += (n125 << 11 & 0xFFFFFFFL);
        n11 += n125 >> 17;
        final long n126 = 91L * n21;
        n11 += (n126 << 11 & 0xFFFFFFFL);
        n12 += n126 >> 17;
        final long n127 = -20472841L * n20;
        n += (n127 << 11 & 0xFFFFFFFL);
        n2 += n127 >> 17;
        final long n128 = -117141993L * n20;
        n2 += (n128 << 11 & 0xFFFFFFFL);
        n3 += n128 >> 17;
        final long n129 = 62411077L * n20;
        n3 += (n129 << 11 & 0xFFFFFFFL);
        n4 += n129 >> 17;
        final long n130 = 56915814L * n20;
        n4 += (n130 << 11 & 0xFFFFFFFL);
        n5 += n130 >> 17;
        final long n131 = -97532854L * n20;
        n5 += (n131 << 11 & 0xFFFFFFFL);
        n6 += n131 >> 17;
        final long n132 = -76509338L * n20;
        n6 += (n132 << 11 & 0xFFFFFFFL);
        n7 += n132 >> 17;
        final long n133 = 75510783L * n20;
        n7 += (n133 << 11 & 0xFFFFFFFL);
        n8 += n133 >> 17;
        final long n134 = 67962521L * n20;
        n8 += (n134 << 11 & 0xFFFFFFFL);
        n9 += n134 >> 17;
        final long n135 = -25593732L * n20;
        n9 += (n135 << 11 & 0xFFFFFFFL);
        n10 += n135 >> 17;
        final long n136 = 91L * n20;
        n10 += (n136 << 11 & 0xFFFFFFFL);
        n11 += n136 >> 17;
        n20 = 0L;
        this.carryReduce2(array, n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38);
    }
    
    void carryReduce2(final long[] array, long n, long n2, long n3, long n4, long n5, long n6, long n7, long n8, long n9, long n10, long n11, long n12, long n13, long n14, long n15, long n16, long n17, long n18, long n19, long n20, final long n21, final long n22, final long n23, final long n24, final long n25, final long n26, final long n27, final long n28, final long n29, final long n30, final long n31, final long n32, final long n33, final long n34, final long n35, final long n36, final long n37, final long n38) {
        final long n39 = n + 134217728L >> 28;
        n -= n39 << 28;
        n2 += n39;
        final long n40 = n2 + 134217728L >> 28;
        n2 -= n40 << 28;
        n3 += n40;
        final long n41 = n3 + 134217728L >> 28;
        n3 -= n41 << 28;
        n4 += n41;
        final long n42 = n4 + 134217728L >> 28;
        n4 -= n42 << 28;
        n5 += n42;
        final long n43 = n5 + 134217728L >> 28;
        n5 -= n43 << 28;
        n6 += n43;
        final long n44 = n6 + 134217728L >> 28;
        n6 -= n44 << 28;
        n7 += n44;
        final long n45 = n7 + 134217728L >> 28;
        n7 -= n45 << 28;
        n8 += n45;
        final long n46 = n8 + 134217728L >> 28;
        n8 -= n46 << 28;
        n9 += n46;
        final long n47 = n9 + 134217728L >> 28;
        n9 -= n47 << 28;
        n10 += n47;
        final long n48 = n10 + 134217728L >> 28;
        n10 -= n48 << 28;
        n11 += n48;
        final long n49 = n11 + 134217728L >> 28;
        n11 -= n49 << 28;
        n12 += n49;
        final long n50 = n12 + 134217728L >> 28;
        n12 -= n50 << 28;
        n13 += n50;
        final long n51 = n13 + 134217728L >> 28;
        n13 -= n51 << 28;
        n14 += n51;
        final long n52 = n14 + 134217728L >> 28;
        n14 -= n52 << 28;
        n15 += n52;
        final long n53 = n15 + 134217728L >> 28;
        n15 -= n53 << 28;
        n16 += n53;
        final long n54 = n16 + 134217728L >> 28;
        n16 -= n54 << 28;
        n17 += n54;
        final long n55 = n17 + 134217728L >> 28;
        n17 -= n55 << 28;
        n18 += n55;
        final long n56 = n18 + 134217728L >> 28;
        n18 -= n56 << 28;
        n19 += n56;
        final long n57 = n19 + 134217728L >> 28;
        n19 -= n57 << 28;
        n20 += n57;
        this.carryReduce3(array, n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38);
    }
    
    void carryReduce3(final long[] array, long n, long n2, long n3, long n4, long n5, long n6, long n7, long n8, long n9, long n10, long n11, long n12, long n13, long n14, long n15, long n16, long n17, long n18, long n19, final long n20, final long n21, final long n22, final long n23, final long n24, final long n25, final long n26, final long n27, final long n28, final long n29, final long n30, final long n31, final long n32, final long n33, final long n34, final long n35, final long n36, final long n37, final long n38) {
        final long n39 = -20472841L * n20;
        n += (n39 << 11 & 0xFFFFFFFL);
        n2 += n39 >> 17;
        final long n40 = -117141993L * n20;
        n2 += (n40 << 11 & 0xFFFFFFFL);
        n3 += n40 >> 17;
        final long n41 = 62411077L * n20;
        n3 += (n41 << 11 & 0xFFFFFFFL);
        n4 += n41 >> 17;
        final long n42 = 56915814L * n20;
        n4 += (n42 << 11 & 0xFFFFFFFL);
        n5 += n42 >> 17;
        final long n43 = -97532854L * n20;
        n5 += (n43 << 11 & 0xFFFFFFFL);
        n6 += n43 >> 17;
        final long n44 = -76509338L * n20;
        n6 += (n44 << 11 & 0xFFFFFFFL);
        n7 += n44 >> 17;
        final long n45 = 75510783L * n20;
        n7 += (n45 << 11 & 0xFFFFFFFL);
        n8 += n45 >> 17;
        final long n46 = 67962521L * n20;
        n8 += (n46 << 11 & 0xFFFFFFFL);
        n9 += n46 >> 17;
        final long n47 = -25593732L * n20;
        n9 += (n47 << 11 & 0xFFFFFFFL);
        n10 += n47 >> 17;
        final long n48 = 91L * n20;
        n10 += (n48 << 11 & 0xFFFFFFFL);
        n11 += n48 >> 17;
        final long n49 = n + 134217728L >> 28;
        n -= n49 << 28;
        n2 += n49;
        final long n50 = n2 + 134217728L >> 28;
        n2 -= n50 << 28;
        n3 += n50;
        final long n51 = n3 + 134217728L >> 28;
        n3 -= n51 << 28;
        n4 += n51;
        final long n52 = n4 + 134217728L >> 28;
        n4 -= n52 << 28;
        n5 += n52;
        final long n53 = n5 + 134217728L >> 28;
        n5 -= n53 << 28;
        n6 += n53;
        final long n54 = n6 + 134217728L >> 28;
        n6 -= n54 << 28;
        n7 += n54;
        final long n55 = n7 + 134217728L >> 28;
        n7 -= n55 << 28;
        n8 += n55;
        final long n56 = n8 + 134217728L >> 28;
        n8 -= n56 << 28;
        n9 += n56;
        final long n57 = n9 + 134217728L >> 28;
        n9 -= n57 << 28;
        n10 += n57;
        final long n58 = n10 + 134217728L >> 28;
        n10 -= n58 << 28;
        n11 += n58;
        final long n59 = n11 + 134217728L >> 28;
        n11 -= n59 << 28;
        n12 += n59;
        final long n60 = n12 + 134217728L >> 28;
        n12 -= n60 << 28;
        n13 += n60;
        final long n61 = n13 + 134217728L >> 28;
        n13 -= n61 << 28;
        n14 += n61;
        final long n62 = n14 + 134217728L >> 28;
        n14 -= n62 << 28;
        n15 += n62;
        final long n63 = n15 + 134217728L >> 28;
        n15 -= n63 << 28;
        n16 += n63;
        final long n64 = n16 + 134217728L >> 28;
        n16 -= n64 << 28;
        n17 += n64;
        final long n65 = n17 + 134217728L >> 28;
        n17 -= n65 << 28;
        n18 += n65;
        final long n66 = n18 + 134217728L >> 28;
        n18 -= n66 << 28;
        n19 += n66;
        array[0] = n;
        array[1] = n2;
        array[2] = n3;
        array[3] = n4;
        array[4] = n5;
        array[5] = n6;
        array[6] = n7;
        array[7] = n8;
        array[8] = n9;
        array[9] = n10;
        array[10] = n11;
        array[11] = n12;
        array[12] = n13;
        array[13] = n14;
        array[14] = n15;
        array[15] = n16;
        array[16] = n17;
        array[17] = n18;
        array[18] = n19;
    }
    
    private void carryReduce(final long[] array, long n, long n2, long n3, long n4, long n5, long n6, long n7, long n8, long n9, long n10, long n11, long n12, long n13, long n14, long n15, long n16, long n17, long n18, long n19) {
        final long n20 = 0L;
        final long n21 = n + 134217728L >> 28;
        n -= n21 << 28;
        n2 += n21;
        final long n22 = n2 + 134217728L >> 28;
        n2 -= n22 << 28;
        n3 += n22;
        final long n23 = n3 + 134217728L >> 28;
        n3 -= n23 << 28;
        n4 += n23;
        final long n24 = n4 + 134217728L >> 28;
        n4 -= n24 << 28;
        n5 += n24;
        final long n25 = n5 + 134217728L >> 28;
        n5 -= n25 << 28;
        n6 += n25;
        final long n26 = n6 + 134217728L >> 28;
        n6 -= n26 << 28;
        n7 += n26;
        final long n27 = n7 + 134217728L >> 28;
        n7 -= n27 << 28;
        n8 += n27;
        final long n28 = n8 + 134217728L >> 28;
        n8 -= n28 << 28;
        n9 += n28;
        final long n29 = n9 + 134217728L >> 28;
        n9 -= n29 << 28;
        n10 += n29;
        final long n30 = n10 + 134217728L >> 28;
        n10 -= n30 << 28;
        n11 += n30;
        final long n31 = n11 + 134217728L >> 28;
        n11 -= n31 << 28;
        n12 += n31;
        final long n32 = n12 + 134217728L >> 28;
        n12 -= n32 << 28;
        n13 += n32;
        final long n33 = n13 + 134217728L >> 28;
        n13 -= n33 << 28;
        n14 += n33;
        final long n34 = n14 + 134217728L >> 28;
        n14 -= n34 << 28;
        n15 += n34;
        final long n35 = n15 + 134217728L >> 28;
        n15 -= n35 << 28;
        n16 += n35;
        final long n36 = n16 + 134217728L >> 28;
        n16 -= n36 << 28;
        n17 += n36;
        final long n37 = n17 + 134217728L >> 28;
        n17 -= n37 << 28;
        n18 += n37;
        final long n38 = n18 + 134217728L >> 28;
        n18 -= n38 << 28;
        n19 += n38;
        final long n39 = n19 + 134217728L >> 28;
        n19 -= n39 << 28;
        this.carryReduce0(array, n, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20 + n39);
    }
    
    void carryReduce0(final long[] array, long n, long n2, long n3, long n4, long n5, long n6, long n7, long n8, long n9, long n10, long n11, long n12, long n13, long n14, long n15, long n16, long n17, long n18, long n19, final long n20) {
        final long n21 = -20472841L * n20;
        n += (n21 << 11 & 0xFFFFFFFL);
        n2 += n21 >> 17;
        final long n22 = -117141993L * n20;
        n2 += (n22 << 11 & 0xFFFFFFFL);
        n3 += n22 >> 17;
        final long n23 = 62411077L * n20;
        n3 += (n23 << 11 & 0xFFFFFFFL);
        n4 += n23 >> 17;
        final long n24 = 56915814L * n20;
        n4 += (n24 << 11 & 0xFFFFFFFL);
        n5 += n24 >> 17;
        final long n25 = -97532854L * n20;
        n5 += (n25 << 11 & 0xFFFFFFFL);
        n6 += n25 >> 17;
        final long n26 = -76509338L * n20;
        n6 += (n26 << 11 & 0xFFFFFFFL);
        n7 += n26 >> 17;
        final long n27 = 75510783L * n20;
        n7 += (n27 << 11 & 0xFFFFFFFL);
        n8 += n27 >> 17;
        final long n28 = 67962521L * n20;
        n8 += (n28 << 11 & 0xFFFFFFFL);
        n9 += n28 >> 17;
        final long n29 = -25593732L * n20;
        n9 += (n29 << 11 & 0xFFFFFFFL);
        n10 += n29 >> 17;
        final long n30 = 91L * n20;
        n10 += (n30 << 11 & 0xFFFFFFFL);
        n11 += n30 >> 17;
        final long n31 = n + 134217728L >> 28;
        n -= n31 << 28;
        n2 += n31;
        final long n32 = n2 + 134217728L >> 28;
        n2 -= n32 << 28;
        n3 += n32;
        final long n33 = n3 + 134217728L >> 28;
        n3 -= n33 << 28;
        n4 += n33;
        final long n34 = n4 + 134217728L >> 28;
        n4 -= n34 << 28;
        n5 += n34;
        final long n35 = n5 + 134217728L >> 28;
        n5 -= n35 << 28;
        n6 += n35;
        final long n36 = n6 + 134217728L >> 28;
        n6 -= n36 << 28;
        n7 += n36;
        final long n37 = n7 + 134217728L >> 28;
        n7 -= n37 << 28;
        n8 += n37;
        final long n38 = n8 + 134217728L >> 28;
        n8 -= n38 << 28;
        n9 += n38;
        final long n39 = n9 + 134217728L >> 28;
        n9 -= n39 << 28;
        n10 += n39;
        final long n40 = n10 + 134217728L >> 28;
        n10 -= n40 << 28;
        n11 += n40;
        final long n41 = n11 + 134217728L >> 28;
        n11 -= n41 << 28;
        n12 += n41;
        final long n42 = n12 + 134217728L >> 28;
        n12 -= n42 << 28;
        n13 += n42;
        final long n43 = n13 + 134217728L >> 28;
        n13 -= n43 << 28;
        n14 += n43;
        final long n44 = n14 + 134217728L >> 28;
        n14 -= n44 << 28;
        n15 += n44;
        final long n45 = n15 + 134217728L >> 28;
        n15 -= n45 << 28;
        n16 += n45;
        final long n46 = n16 + 134217728L >> 28;
        n16 -= n46 << 28;
        n17 += n46;
        final long n47 = n17 + 134217728L >> 28;
        n17 -= n47 << 28;
        n18 += n47;
        final long n48 = n18 + 134217728L >> 28;
        n18 -= n48 << 28;
        n19 += n48;
        array[0] = n;
        array[1] = n2;
        array[2] = n3;
        array[3] = n4;
        array[4] = n5;
        array[5] = n6;
        array[6] = n7;
        array[7] = n8;
        array[8] = n9;
        array[9] = n10;
        array[10] = n11;
        array[11] = n12;
        array[12] = n13;
        array[13] = n14;
        array[14] = n15;
        array[15] = n16;
        array[16] = n17;
        array[17] = n18;
        array[18] = n19;
    }
    
    @Override
    protected void mult(final long[] array, final long[] array2, final long[] array3) {
        this.carryReduce(array3, array[0] * array2[0], array[0] * array2[1] + array[1] * array2[0], array[0] * array2[2] + array[1] * array2[1] + array[2] * array2[0], array[0] * array2[3] + array[1] * array2[2] + array[2] * array2[1] + array[3] * array2[0], array[0] * array2[4] + array[1] * array2[3] + array[2] * array2[2] + array[3] * array2[1] + array[4] * array2[0], array[0] * array2[5] + array[1] * array2[4] + array[2] * array2[3] + array[3] * array2[2] + array[4] * array2[1] + array[5] * array2[0], array[0] * array2[6] + array[1] * array2[5] + array[2] * array2[4] + array[3] * array2[3] + array[4] * array2[2] + array[5] * array2[1] + array[6] * array2[0], array[0] * array2[7] + array[1] * array2[6] + array[2] * array2[5] + array[3] * array2[4] + array[4] * array2[3] + array[5] * array2[2] + array[6] * array2[1] + array[7] * array2[0], array[0] * array2[8] + array[1] * array2[7] + array[2] * array2[6] + array[3] * array2[5] + array[4] * array2[4] + array[5] * array2[3] + array[6] * array2[2] + array[7] * array2[1] + array[8] * array2[0], array[0] * array2[9] + array[1] * array2[8] + array[2] * array2[7] + array[3] * array2[6] + array[4] * array2[5] + array[5] * array2[4] + array[6] * array2[3] + array[7] * array2[2] + array[8] * array2[1] + array[9] * array2[0], array[0] * array2[10] + array[1] * array2[9] + array[2] * array2[8] + array[3] * array2[7] + array[4] * array2[6] + array[5] * array2[5] + array[6] * array2[4] + array[7] * array2[3] + array[8] * array2[2] + array[9] * array2[1] + array[10] * array2[0], array[0] * array2[11] + array[1] * array2[10] + array[2] * array2[9] + array[3] * array2[8] + array[4] * array2[7] + array[5] * array2[6] + array[6] * array2[5] + array[7] * array2[4] + array[8] * array2[3] + array[9] * array2[2] + array[10] * array2[1] + array[11] * array2[0], array[0] * array2[12] + array[1] * array2[11] + array[2] * array2[10] + array[3] * array2[9] + array[4] * array2[8] + array[5] * array2[7] + array[6] * array2[6] + array[7] * array2[5] + array[8] * array2[4] + array[9] * array2[3] + array[10] * array2[2] + array[11] * array2[1] + array[12] * array2[0], array[0] * array2[13] + array[1] * array2[12] + array[2] * array2[11] + array[3] * array2[10] + array[4] * array2[9] + array[5] * array2[8] + array[6] * array2[7] + array[7] * array2[6] + array[8] * array2[5] + array[9] * array2[4] + array[10] * array2[3] + array[11] * array2[2] + array[12] * array2[1] + array[13] * array2[0], array[0] * array2[14] + array[1] * array2[13] + array[2] * array2[12] + array[3] * array2[11] + array[4] * array2[10] + array[5] * array2[9] + array[6] * array2[8] + array[7] * array2[7] + array[8] * array2[6] + array[9] * array2[5] + array[10] * array2[4] + array[11] * array2[3] + array[12] * array2[2] + array[13] * array2[1] + array[14] * array2[0], array[0] * array2[15] + array[1] * array2[14] + array[2] * array2[13] + array[3] * array2[12] + array[4] * array2[11] + array[5] * array2[10] + array[6] * array2[9] + array[7] * array2[8] + array[8] * array2[7] + array[9] * array2[6] + array[10] * array2[5] + array[11] * array2[4] + array[12] * array2[3] + array[13] * array2[2] + array[14] * array2[1] + array[15] * array2[0], array[0] * array2[16] + array[1] * array2[15] + array[2] * array2[14] + array[3] * array2[13] + array[4] * array2[12] + array[5] * array2[11] + array[6] * array2[10] + array[7] * array2[9] + array[8] * array2[8] + array[9] * array2[7] + array[10] * array2[6] + array[11] * array2[5] + array[12] * array2[4] + array[13] * array2[3] + array[14] * array2[2] + array[15] * array2[1] + array[16] * array2[0], array[0] * array2[17] + array[1] * array2[16] + array[2] * array2[15] + array[3] * array2[14] + array[4] * array2[13] + array[5] * array2[12] + array[6] * array2[11] + array[7] * array2[10] + array[8] * array2[9] + array[9] * array2[8] + array[10] * array2[7] + array[11] * array2[6] + array[12] * array2[5] + array[13] * array2[4] + array[14] * array2[3] + array[15] * array2[2] + array[16] * array2[1] + array[17] * array2[0], array[0] * array2[18] + array[1] * array2[17] + array[2] * array2[16] + array[3] * array2[15] + array[4] * array2[14] + array[5] * array2[13] + array[6] * array2[12] + array[7] * array2[11] + array[8] * array2[10] + array[9] * array2[9] + array[10] * array2[8] + array[11] * array2[7] + array[12] * array2[6] + array[13] * array2[5] + array[14] * array2[4] + array[15] * array2[3] + array[16] * array2[2] + array[17] * array2[1] + array[18] * array2[0], array[1] * array2[18] + array[2] * array2[17] + array[3] * array2[16] + array[4] * array2[15] + array[5] * array2[14] + array[6] * array2[13] + array[7] * array2[12] + array[8] * array2[11] + array[9] * array2[10] + array[10] * array2[9] + array[11] * array2[8] + array[12] * array2[7] + array[13] * array2[6] + array[14] * array2[5] + array[15] * array2[4] + array[16] * array2[3] + array[17] * array2[2] + array[18] * array2[1], array[2] * array2[18] + array[3] * array2[17] + array[4] * array2[16] + array[5] * array2[15] + array[6] * array2[14] + array[7] * array2[13] + array[8] * array2[12] + array[9] * array2[11] + array[10] * array2[10] + array[11] * array2[9] + array[12] * array2[8] + array[13] * array2[7] + array[14] * array2[6] + array[15] * array2[5] + array[16] * array2[4] + array[17] * array2[3] + array[18] * array2[2], array[3] * array2[18] + array[4] * array2[17] + array[5] * array2[16] + array[6] * array2[15] + array[7] * array2[14] + array[8] * array2[13] + array[9] * array2[12] + array[10] * array2[11] + array[11] * array2[10] + array[12] * array2[9] + array[13] * array2[8] + array[14] * array2[7] + array[15] * array2[6] + array[16] * array2[5] + array[17] * array2[4] + array[18] * array2[3], array[4] * array2[18] + array[5] * array2[17] + array[6] * array2[16] + array[7] * array2[15] + array[8] * array2[14] + array[9] * array2[13] + array[10] * array2[12] + array[11] * array2[11] + array[12] * array2[10] + array[13] * array2[9] + array[14] * array2[8] + array[15] * array2[7] + array[16] * array2[6] + array[17] * array2[5] + array[18] * array2[4], array[5] * array2[18] + array[6] * array2[17] + array[7] * array2[16] + array[8] * array2[15] + array[9] * array2[14] + array[10] * array2[13] + array[11] * array2[12] + array[12] * array2[11] + array[13] * array2[10] + array[14] * array2[9] + array[15] * array2[8] + array[16] * array2[7] + array[17] * array2[6] + array[18] * array2[5], array[6] * array2[18] + array[7] * array2[17] + array[8] * array2[16] + array[9] * array2[15] + array[10] * array2[14] + array[11] * array2[13] + array[12] * array2[12] + array[13] * array2[11] + array[14] * array2[10] + array[15] * array2[9] + array[16] * array2[8] + array[17] * array2[7] + array[18] * array2[6], array[7] * array2[18] + array[8] * array2[17] + array[9] * array2[16] + array[10] * array2[15] + array[11] * array2[14] + array[12] * array2[13] + array[13] * array2[12] + array[14] * array2[11] + array[15] * array2[10] + array[16] * array2[9] + array[17] * array2[8] + array[18] * array2[7], array[8] * array2[18] + array[9] * array2[17] + array[10] * array2[16] + array[11] * array2[15] + array[12] * array2[14] + array[13] * array2[13] + array[14] * array2[12] + array[15] * array2[11] + array[16] * array2[10] + array[17] * array2[9] + array[18] * array2[8], array[9] * array2[18] + array[10] * array2[17] + array[11] * array2[16] + array[12] * array2[15] + array[13] * array2[14] + array[14] * array2[13] + array[15] * array2[12] + array[16] * array2[11] + array[17] * array2[10] + array[18] * array2[9], array[10] * array2[18] + array[11] * array2[17] + array[12] * array2[16] + array[13] * array2[15] + array[14] * array2[14] + array[15] * array2[13] + array[16] * array2[12] + array[17] * array2[11] + array[18] * array2[10], array[11] * array2[18] + array[12] * array2[17] + array[13] * array2[16] + array[14] * array2[15] + array[15] * array2[14] + array[16] * array2[13] + array[17] * array2[12] + array[18] * array2[11], array[12] * array2[18] + array[13] * array2[17] + array[14] * array2[16] + array[15] * array2[15] + array[16] * array2[14] + array[17] * array2[13] + array[18] * array2[12], array[13] * array2[18] + array[14] * array2[17] + array[15] * array2[16] + array[16] * array2[15] + array[17] * array2[14] + array[18] * array2[13], array[14] * array2[18] + array[15] * array2[17] + array[16] * array2[16] + array[17] * array2[15] + array[18] * array2[14], array[15] * array2[18] + array[16] * array2[17] + array[17] * array2[16] + array[18] * array2[15], array[16] * array2[18] + array[17] * array2[17] + array[18] * array2[16], array[17] * array2[18] + array[18] * array2[17], array[18] * array2[18]);
    }
    
    @Override
    protected void reduce(final long[] array) {
        this.carryReduce(array, array[0], array[1], array[2], array[3], array[4], array[5], array[6], array[7], array[8], array[9], array[10], array[11], array[12], array[13], array[14], array[15], array[16], array[17], array[18]);
    }
    
    @Override
    protected void square(final long[] array, final long[] array2) {
        this.carryReduce(array2, array[0] * array[0], 2L * (array[0] * array[1]), 2L * (array[0] * array[2]) + array[1] * array[1], 2L * (array[0] * array[3] + array[1] * array[2]), 2L * (array[0] * array[4] + array[1] * array[3]) + array[2] * array[2], 2L * (array[0] * array[5] + array[1] * array[4] + array[2] * array[3]), 2L * (array[0] * array[6] + array[1] * array[5] + array[2] * array[4]) + array[3] * array[3], 2L * (array[0] * array[7] + array[1] * array[6] + array[2] * array[5] + array[3] * array[4]), 2L * (array[0] * array[8] + array[1] * array[7] + array[2] * array[6] + array[3] * array[5]) + array[4] * array[4], 2L * (array[0] * array[9] + array[1] * array[8] + array[2] * array[7] + array[3] * array[6] + array[4] * array[5]), 2L * (array[0] * array[10] + array[1] * array[9] + array[2] * array[8] + array[3] * array[7] + array[4] * array[6]) + array[5] * array[5], 2L * (array[0] * array[11] + array[1] * array[10] + array[2] * array[9] + array[3] * array[8] + array[4] * array[7] + array[5] * array[6]), 2L * (array[0] * array[12] + array[1] * array[11] + array[2] * array[10] + array[3] * array[9] + array[4] * array[8] + array[5] * array[7]) + array[6] * array[6], 2L * (array[0] * array[13] + array[1] * array[12] + array[2] * array[11] + array[3] * array[10] + array[4] * array[9] + array[5] * array[8] + array[6] * array[7]), 2L * (array[0] * array[14] + array[1] * array[13] + array[2] * array[12] + array[3] * array[11] + array[4] * array[10] + array[5] * array[9] + array[6] * array[8]) + array[7] * array[7], 2L * (array[0] * array[15] + array[1] * array[14] + array[2] * array[13] + array[3] * array[12] + array[4] * array[11] + array[5] * array[10] + array[6] * array[9] + array[7] * array[8]), 2L * (array[0] * array[16] + array[1] * array[15] + array[2] * array[14] + array[3] * array[13] + array[4] * array[12] + array[5] * array[11] + array[6] * array[10] + array[7] * array[9]) + array[8] * array[8], 2L * (array[0] * array[17] + array[1] * array[16] + array[2] * array[15] + array[3] * array[14] + array[4] * array[13] + array[5] * array[12] + array[6] * array[11] + array[7] * array[10] + array[8] * array[9]), 2L * (array[0] * array[18] + array[1] * array[17] + array[2] * array[16] + array[3] * array[15] + array[4] * array[14] + array[5] * array[13] + array[6] * array[12] + array[7] * array[11] + array[8] * array[10]) + array[9] * array[9], 2L * (array[1] * array[18] + array[2] * array[17] + array[3] * array[16] + array[4] * array[15] + array[5] * array[14] + array[6] * array[13] + array[7] * array[12] + array[8] * array[11] + array[9] * array[10]), 2L * (array[2] * array[18] + array[3] * array[17] + array[4] * array[16] + array[5] * array[15] + array[6] * array[14] + array[7] * array[13] + array[8] * array[12] + array[9] * array[11]) + array[10] * array[10], 2L * (array[3] * array[18] + array[4] * array[17] + array[5] * array[16] + array[6] * array[15] + array[7] * array[14] + array[8] * array[13] + array[9] * array[12] + array[10] * array[11]), 2L * (array[4] * array[18] + array[5] * array[17] + array[6] * array[16] + array[7] * array[15] + array[8] * array[14] + array[9] * array[13] + array[10] * array[12]) + array[11] * array[11], 2L * (array[5] * array[18] + array[6] * array[17] + array[7] * array[16] + array[8] * array[15] + array[9] * array[14] + array[10] * array[13] + array[11] * array[12]), 2L * (array[6] * array[18] + array[7] * array[17] + array[8] * array[16] + array[9] * array[15] + array[10] * array[14] + array[11] * array[13]) + array[12] * array[12], 2L * (array[7] * array[18] + array[8] * array[17] + array[9] * array[16] + array[10] * array[15] + array[11] * array[14] + array[12] * array[13]), 2L * (array[8] * array[18] + array[9] * array[17] + array[10] * array[16] + array[11] * array[15] + array[12] * array[14]) + array[13] * array[13], 2L * (array[9] * array[18] + array[10] * array[17] + array[11] * array[16] + array[12] * array[15] + array[13] * array[14]), 2L * (array[10] * array[18] + array[11] * array[17] + array[12] * array[16] + array[13] * array[15]) + array[14] * array[14], 2L * (array[11] * array[18] + array[12] * array[17] + array[13] * array[16] + array[14] * array[15]), 2L * (array[12] * array[18] + array[13] * array[17] + array[14] * array[16]) + array[15] * array[15], 2L * (array[13] * array[18] + array[14] * array[17] + array[15] * array[16]), 2L * (array[14] * array[18] + array[15] * array[17]) + array[16] * array[16], 2L * (array[15] * array[18] + array[16] * array[17]), 2L * (array[16] * array[18]) + array[17] * array[17], 2L * (array[17] * array[18]), array[18] * array[18]);
    }
    
    static {
        MODULUS = evaluateModulus();
    }
}
