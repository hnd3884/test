package sun.security.util;

import java.util.ListResourceBundle;

public class Resources_es extends ListResourceBundle
{
    private static final Object[][] contents;
    
    public Object[][] getContents() {
        return Resources_es.contents;
    }
    
    static {
        contents = new Object[][] { { "invalid.null.input.s.", "entradas nulas no v\u00e1lidas" }, { "actions.can.only.be.read.", "las acciones s\u00f3lo pueden 'leerse'" }, { "permission.name.name.syntax.invalid.", "sintaxis de nombre de permiso [{0}] no v\u00e1lida: " }, { "Credential.Class.not.followed.by.a.Principal.Class.and.Name", "La clase de credencial no va seguida de una clase y nombre de principal" }, { "Principal.Class.not.followed.by.a.Principal.Name", "La clase de principal no va seguida de un nombre de principal" }, { "Principal.Name.must.be.surrounded.by.quotes", "El nombre de principal debe ir entre comillas" }, { "Principal.Name.missing.end.quote", "Faltan las comillas finales en el nombre de principal" }, { "PrivateCredentialPermission.Principal.Class.can.not.be.a.wildcard.value.if.Principal.Name.is.not.a.wildcard.value", "La clase de principal PrivateCredentialPermission no puede ser un valor comod\u00edn (*) si el nombre de principal no lo es tambi\u00e9n" }, { "CredOwner.Principal.Class.class.Principal.Name.name", "CredOwner:\n\tClase de Principal = {0}\n\tNombre de Principal = {1}" }, { "provided.null.name", "se ha proporcionado un nombre nulo" }, { "provided.null.keyword.map", "mapa de palabras clave proporcionado nulo" }, { "provided.null.OID.map", "mapa de OID proporcionado nulo" }, { "NEWLINE", "\n" }, { "invalid.null.AccessControlContext.provided", "se ha proporcionado un AccessControlContext nulo no v\u00e1lido" }, { "invalid.null.action.provided", "se ha proporcionado una acci\u00f3n nula no v\u00e1lida" }, { "invalid.null.Class.provided", "se ha proporcionado una clase nula no v\u00e1lida" }, { "Subject.", "Asunto:\n" }, { ".Principal.", "\tPrincipal: " }, { ".Public.Credential.", "\tCredencial P\u00fablica: " }, { ".Private.Credentials.inaccessible.", "\tCredenciales Privadas Inaccesibles\n" }, { ".Private.Credential.", "\tCredencial Privada: " }, { ".Private.Credential.inaccessible.", "\tCredencial Privada Inaccesible\n" }, { "Subject.is.read.only", "El asunto es de s\u00f3lo lectura" }, { "attempting.to.add.an.object.which.is.not.an.instance.of.java.security.Principal.to.a.Subject.s.Principal.Set", "intentando agregar un objeto que no es una instancia de java.security.Principal al juego principal de un asunto" }, { "attempting.to.add.an.object.which.is.not.an.instance.of.class", "intentando agregar un objeto que no es una instancia de {0}" }, { "LoginModuleControlFlag.", "LoginModuleControlFlag: " }, { "Invalid.null.input.name", "Entrada nula no v\u00e1lida: nombre" }, { "No.LoginModules.configured.for.name", "No se han configurado LoginModules para {0}" }, { "invalid.null.Subject.provided", "se ha proporcionado un asunto nulo no v\u00e1lido" }, { "invalid.null.CallbackHandler.provided", "se ha proporcionado CallbackHandler nulo no v\u00e1lido" }, { "null.subject.logout.called.before.login", "asunto nulo - se ha llamado al cierre de sesi\u00f3n antes del inicio de sesi\u00f3n" }, { "unable.to.instantiate.LoginModule.module.because.it.does.not.provide.a.no.argument.constructor", "no se ha podido instanciar LoginModule, {0}, porque no incluye un constructor sin argumentos" }, { "unable.to.instantiate.LoginModule", "no se ha podido instanciar LoginModule" }, { "unable.to.instantiate.LoginModule.", "no se ha podido instanciar LoginModule: " }, { "unable.to.find.LoginModule.class.", "no se ha encontrado la clase LoginModule: " }, { "unable.to.access.LoginModule.", "no se ha podido acceder a LoginModule: " }, { "Login.Failure.all.modules.ignored", "Fallo en inicio de sesi\u00f3n: se han ignorado todos los m\u00f3dulos" }, { "java.security.policy.error.parsing.policy.message", "java.security.policy: error de an\u00e1lisis de {0}:\n\t{1}" }, { "java.security.policy.error.adding.Permission.perm.message", "java.security.policy: error al agregar un permiso, {0}:\n\t{1}" }, { "java.security.policy.error.adding.Entry.message", "java.security.policy: error al agregar una entrada:\n\t{0}" }, { "alias.name.not.provided.pe.name.", "no se ha proporcionado el nombre de alias ({0})" }, { "unable.to.perform.substitution.on.alias.suffix", "no se puede realizar la sustituci\u00f3n en el alias, {0}" }, { "substitution.value.prefix.unsupported", "valor de sustituci\u00f3n, {0}, no soportado" }, { "LPARAM", "(" }, { "RPARAM", ")" }, { "type.can.t.be.null", "el tipo no puede ser nulo" }, { "keystorePasswordURL.can.not.be.specified.without.also.specifying.keystore", "keystorePasswordURL no puede especificarse sin especificar tambi\u00e9n el almac\u00e9n de claves" }, { "expected.keystore.type", "se esperaba un tipo de almac\u00e9n de claves" }, { "expected.keystore.provider", "se esperaba un proveedor de almac\u00e9n de claves" }, { "multiple.Codebase.expressions", "expresiones m\u00faltiples de CodeBase" }, { "multiple.SignedBy.expressions", "expresiones m\u00faltiples de SignedBy" }, { "duplicate.keystore.domain.name", "nombre de dominio de almac\u00e9n de claves duplicado: {0}" }, { "duplicate.keystore.name", "nombre de almac\u00e9n de claves duplicado: {0}" }, { "SignedBy.has.empty.alias", "SignedBy tiene un alias vac\u00edo" }, { "can.not.specify.Principal.with.a.wildcard.class.without.a.wildcard.name", "no se puede especificar Principal con una clase de comod\u00edn sin un nombre de comod\u00edn" }, { "expected.codeBase.or.SignedBy.or.Principal", "se esperaba codeBase o SignedBy o Principal" }, { "expected.permission.entry", "se esperaba una entrada de permiso" }, { "number.", "n\u00famero " }, { "expected.expect.read.end.of.file.", "se esperaba [{0}], se ha le\u00eddo [final de archivo]" }, { "expected.read.end.of.file.", "se esperaba [;], se ha le\u00eddo [final de archivo]" }, { "line.number.msg", "l\u00ednea {0}: {1}" }, { "line.number.expected.expect.found.actual.", "l\u00ednea {0}: se esperaba [{1}], se ha encontrado [{2}]" }, { "null.principalClass.or.principalName", "principalClass o principalName nulos" }, { "PKCS11.Token.providerName.Password.", "Contrase\u00f1a del Token PKCS11 [{0}]: " }, { "unable.to.instantiate.Subject.based.policy", "no se ha podido instanciar una pol\u00edtica basada en asunto" } };
    }
}
